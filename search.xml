<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>lua入门</title>
    <url>/2020/04/06/Lua%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="Lua介绍"><a href="#Lua介绍" class="headerlink" title="Lua介绍"></a>Lua介绍</h2><h3 id="1-lua是什么"><a href="#1-lua是什么" class="headerlink" title="1 lua是什么"></a>1 lua是什么</h3><p>​    Lua 是一个小巧的<a href="https://baike.baidu.com/item/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80">脚本语言</a>。它是巴西里约热内卢天主教大学（Pontifical Catholic University of Rio de Janeiro）里的一个由Roberto Ierusalimschy、Waldemar Celes 和 Luiz Henrique de Figueiredo三人所组成的研究小组于1993年开发的。 其设计目的是为了通过灵活嵌入应用程序中从而为应用程序提供灵活的扩展和定制功能。Lua由标准C编写而成，几乎在所有操作系统和平台上都可以编译，运行。Lua并没有提供强大的库，这是由它的定位决定的。所以Lua不适合作为开发独立应用程序的语言。Lua 有一个同时进行的JIT项目，提供在特定平台上的即时编译功能。</p>
<p>简单来说：</p>
<p>​    Lua 是一种轻量小巧的脚本语言，用标准C语言编写并以源代码形式开放， 其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。</p>
<p><strong>lua 语言具有以下特性</strong></p>
<ul>
<li>支持面向过程(procedure-oriented)编程和函数式编程(functional programming)；</li>
<li>自动内存管理；只提供了一种通用类型的表（table），用它可以实现数组，哈希表，集合，对象；</li>
<li>语言内置模式匹配；闭包(closure)；函数也可以看做一个值；提供多线程（协同进程，并非操作系统所支持的线程）支持；</li>
<li>通过闭包和table可以很方便地支持面向对象编程所需要的一些关键机制，比如数据抽象，虚函数，继承和重载等。</li>
</ul>
<p><strong>应用场景</strong></p>
<ul>
<li>游戏开发</li>
<li>独立应用脚本</li>
<li>Web 应用脚本</li>
<li>扩展和数据库插件如：MySQL Proxy 和 MySQL WorkBench</li>
<li>安全系统，如入侵检测系统</li>
<li>redis中嵌套调用实现类似事务的功能</li>
<li>web容器中应用处理一些过滤 缓存等等的逻辑，例如nginx。 </li>
</ul>
<h3 id="2-lua的安装"><a href="#2-lua的安装" class="headerlink" title="2 lua的安装"></a>2 lua的安装</h3><p>有linux版本的安装也有mac版本的安装。。我们采用linux版本的安装，首先我们准备一个linux虚拟机。</p>
<p>安装步骤,在linux系统中执行下面的命令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y gcc</span><br><span class="line"></span><br><span class="line">yum install libtermcap-devel ncurses-devel libevent-devel readline-devel</span><br><span class="line"></span><br><span class="line">curl -R -O http://www.lua.org/ftp/lua-5.3.5.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxf lua-5.3.5.tar.gz</span><br><span class="line"></span><br><span class="line">cd lua-5.3.5</span><br><span class="line"></span><br><span class="line">make linux test</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<h3 id="3-快速入门"><a href="#3-快速入门" class="headerlink" title="3 快速入门"></a>3 快速入门</h3><p>创建hello.lua文件，内容为</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>保存。执行命令</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">lua helloworld.lua</span><br></pre></td></tr></table></figure>

<p>输出为：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">Hello</span><br></pre></td></tr></table></figure>

<h3 id="4-LUA的基本语法"><a href="#4-LUA的基本语法" class="headerlink" title="4 LUA的基本语法"></a>4 LUA的基本语法</h3><ul>
<li>lua有交互式编程和脚本式编程。</li>
</ul>
<ul>
<li>交互式编程就是直接输入语法，就能执行。</li>
</ul>
<ul>
<li>脚本式编程需要编写脚本文件，然后再执行。</li>
</ul>
<p>一般采用脚本式编程。（例如：编写一个hello.lua的文件，输入文件内容，并执行lua hell.lua即可）</p>
<h4 id="4-1-注释"><a href="#4-1-注释" class="headerlink" title="4.1 注释"></a>4.1 注释</h4><p>单行注释：两个减号是单行注释:</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">--</span></span><br></pre></td></tr></table></figure>

<p>多行注释：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment"> 多行注释</span></span><br><span class="line"><span class="comment"> 多行注释</span></span><br><span class="line"><span class="comment"> --]]</span></span><br></pre></td></tr></table></figure>

<h4 id="4-2-关键字"><a href="#4-2-关键字" class="headerlink" title="4.2 关键字"></a>4.2 关键字</h4><p>关键字就好比java中的 break if else等等一样的效果。lua的关键字如下：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>and</td>
<td>break</td>
<td>do</td>
<td>else</td>
</tr>
<tr>
<td>elseif</td>
<td>end</td>
<td>false</td>
<td>for</td>
</tr>
<tr>
<td>function</td>
<td>if</td>
<td>in</td>
<td>local</td>
</tr>
<tr>
<td>nil</td>
<td>not</td>
<td>or</td>
<td>repeat</td>
</tr>
<tr>
<td>return</td>
<td>then</td>
<td>true</td>
<td>until</td>
</tr>
<tr>
<td>while</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h4 id="4-3-定义变量"><a href="#4-3-定义变量" class="headerlink" title="4.3 定义变量"></a>4.3 定义变量</h4><p>全局变量，默认的情况下，定义一个变量都是全局变量，</p>
<p>如果要用局部变量 需要声明为local.例如：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 全局变量赋值</span></span><br><span class="line">a=<span class="number">1</span></span><br><span class="line"><span class="comment">-- 局部变量赋值</span></span><br><span class="line"><span class="keyword">local</span> b=<span class="number">2</span> </span><br></pre></td></tr></table></figure>

<p>如果变量没有初始化：则 它的值为nil 这和java中的null不同。</p>
<h4 id="4-4-Lua中的数据类型"><a href="#4-4-Lua中的数据类型" class="headerlink" title="4.4 Lua中的数据类型"></a>4.4 Lua中的数据类型</h4><p>Lua 是动态类型语言，变量不要类型定义,只需要为变量赋值。 值可以存储在变量中，作为参数传递或结果返回。</p>
<p>Lua 中有 8 个基本类型分别为：nil、boolean、number、string、userdata、function、thread 和 table。</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>nil</td>
<td>这个最简单，只有值nil属于该类，表示一个无效值（在条件表达式中相当于false）。</td>
</tr>
<tr>
<td>boolean</td>
<td>包含两个值：false和true。</td>
</tr>
<tr>
<td>number</td>
<td>表示双精度类型的实浮点数</td>
</tr>
<tr>
<td>string</td>
<td>字符串由一对双引号或单引号来表示</td>
</tr>
<tr>
<td>function</td>
<td>由 C 或 Lua 编写的函数</td>
</tr>
<tr>
<td>userdata</td>
<td>表示任意存储在变量中的C数据结构</td>
</tr>
<tr>
<td>thread</td>
<td>表示执行的独立线路，用于执行协同程序</td>
</tr>
<tr>
<td>table</td>
<td>Lua 中的表（table）其实是一个”关联数组”（associative arrays），数组的索引可以是数字、字符串或表类型。在 Lua 里，table 的创建是通过”构造表达式”来完成，最简单构造表达式是{}，用来创建一个空表。</td>
</tr>
</tbody></table>
<h4 id="4-5-流程控制"><a href="#4-5-流程控制" class="headerlink" title="4.5 流程控制"></a>4.5 流程控制</h4><p>如下：类似于if else </p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">--[ 0 为 true ]</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;0 为 true&quot;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;0 不为true&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h4 id="4-6-函数"><a href="#4-6-函数" class="headerlink" title="4.6 函数"></a>4.6 函数</h4><p>lua中也可以定义函数，类似于java中的方法。例如：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">--[[ 函数返回两个值的最大值 --]]</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(num1, num2)</span></span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (num1 &gt; num2) <span class="keyword">then</span></span><br><span class="line">      result = num1;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">      result = num2;</span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> result; </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- 调用函数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;两值比较最大值为 &quot;</span>,<span class="built_in">max</span>(<span class="number">10</span>,<span class="number">4</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;两值比较最大值为 &quot;</span>,<span class="built_in">max</span>(<span class="number">5</span>,<span class="number">6</span>))</span><br></pre></td></tr></table></figure>

<p>执行之后的结果：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">两值比较最大值为     <span class="number">10</span></span><br><span class="line">两值比较最大值为     <span class="number">6</span></span><br></pre></td></tr></table></figure>

<h4 id="4-7-require-函数"><a href="#4-7-require-函数" class="headerlink" title="4.7 require 函数"></a>4.7 require 函数</h4><p>require 用于 引入其他的模块，类似于java中的类要引用别的类的效果。</p>
<p>用法：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span> <span class="string">&quot;&lt;模块名&gt;&quot;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>lua</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令总结</title>
    <url>/2020/06/04/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="Linux常用命令总结"><a href="#Linux常用命令总结" class="headerlink" title="Linux常用命令总结"></a>Linux常用命令总结</h1><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">暂时关闭防火墙</span></span><br><span class="line">systemctl  stop  firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">永久设置防火墙状态</span></span><br><span class="line">systemctl enable firewalld.service  #打开防火墙永久性生效，重启后不会复原 </span><br><span class="line">systemctl disable firewalld.service #关闭防火墙，永久性生效，重启后不会复原 </span><br></pre></td></tr></table></figure>



<h2 id="ps显示进程"><a href="#ps显示进程" class="headerlink" title="ps显示进程"></a>ps显示进程</h2><p>显示进程信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ps</span><br><span class="line">ps -u root </span><br><span class="line">//显示root进程用户信息</span><br><span class="line">ps -ef </span><br><span class="line">//显示所有进程信息，连带命令行</span><br><span class="line">ps -ef|grep java </span><br><span class="line">//所有的java所有进程</span><br><span class="line">ps aux|grep java </span><br><span class="line">查看所有包含关键字java的进程，显示详细的运行信息</span><br><span class="line">ps –ef|grep tomcat </span><br><span class="line">查看所有有关tomcat的进程</span><br><span class="line">ps aux </span><br><span class="line">查看所有进程, 显示详细运行信息</span><br><span class="line">kill -9 19979 </span><br><span class="line">终止线程号位19979的进程</span><br><span class="line"></span><br><span class="line">ls -al </span><br><span class="line">查看当前目录文件，包含隐藏文件</span><br><span class="line"></span><br><span class="line">pwd </span><br><span class="line">查看当前所在目录</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="查看文件大小"><a href="#查看文件大小" class="headerlink" title="查看文件大小"></a>查看文件大小</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">du [选项][文件]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>-a或-all 显示目录中个别文件的大小。<br>-b或-bytes 显示目录或文件大小时，以byte为单位。<br>-c或–total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。<br>-k或–kilobytes 以KB(1024bytes)为单位输出。<br>-m或–megabytes 以MB为单位输出。<br>-s或–summarize 仅显示总计，只列出最后加总的值。<br>-h或–human-readable 以K，M，G为单位，提高信息的可读性。<br>-x或–one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。<br>-L&lt;符号链接&gt;或–dereference&lt;符号链接&gt; 显示选项中所指定符号链接的源文件大小。<br>-S或–separate-dirs 显示个别目录的大小时，并不含其子目录的大小。<br>-X&lt;文件&gt;或–exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。<br>–exclude=&lt;目录或文件&gt; 略过指定的目录或文件。<br>-D或–dereference-args 显示指定符号链接的源文件大小。<br>-H或–si 与-h参数相同，但是K，M，G是以1000为换算单位。<br>-l或–count-links 重复计算硬件链接的文件。</p>
</blockquote>
<p>常用命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">du -sh /opt</span><br></pre></td></tr></table></figure>



<h2 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h2><p>owenr、group、others三种身份各自有自己的r、w和x</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">修改权限： </span><br><span class="line">chmod 777 file.java</span><br><span class="line">//file.java的权限-rwxrwxrwx，r表示读、w表示写、x表示可执行</span><br><span class="line">r(read 读)、w(write 写)、x(execute 访问</span><br><span class="line">可以使用数字表示权限：</span><br><span class="line"></span><br><span class="line"><span class="meta">r-&gt;</span><span class="bash">4</span></span><br><span class="line"><span class="meta">w-&gt;</span><span class="bash">2</span></span><br><span class="line"><span class="meta">x-&gt;</span><span class="bash">1</span></span><br><span class="line">当文件权限为“rwxrwxrwx”时，分数是：</span><br><span class="line"></span><br><span class="line"><span class="meta">owner-&gt;</span><span class="bash">4+2+1=7</span></span><br><span class="line"></span><br><span class="line"><span class="meta">group-&gt;</span><span class="bash">4+2+1=7</span></span><br><span class="line"></span><br><span class="line"><span class="meta">others-&gt;</span><span class="bash">4+2+1=1</span></span><br><span class="line"></span><br><span class="line">此时文件的权限数字就是777</span><br></pre></td></tr></table></figure>





<h2 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netstat -tnl | grep 443 （查看443端口是否被占用）</span><br><span class="line">root用户，用netstat -pnl | grep 443 （还可显示出占用本机443端口的进程PID）</span><br></pre></td></tr></table></figure>

<h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><p>java javac <a href="http://www.hollischuang.com/archives/105">jps</a> ,<a href="http://www.hollischuang.com/archives/481">jstat</a> ,<a href="http://www.hollischuang.com/archives/303">jmap</a>, <a href="http://www.hollischuang.com/archives/110">jstack</a></p>
<p>jps：显示当前所有java进程pid的命令。其他命令往往需要先通过jps命令获取java进程的pid。</p>
<p>jstat + pid： 用于监控虚拟机各种运行状态信息的命令行工具。他可以显示本地或远程虚拟机进程中的类装载、内存、垃圾收集、JIT编译等运行数据</p>
<p>jmap + pid：打印java堆相关的各种信息。当服务发生GC问题时，一般会使用jmap工具进行分析。</p>
<p>jstack + pid：打印Java栈相关各种信息。jstack用于生成java虚拟机当前时刻的线程快照。</p>
<h2 id="awk处理"><a href="#awk处理" class="headerlink" title="awk处理"></a>awk处理</h2><p>awk就是把文件<strong>逐行的读入</strong>，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。</p>
<p>awk是一个强大的<strong>文本分析</strong>工具，相对于grep的查找，sed的编辑，awk在其<strong>对数据分析并生成报告时</strong>，显得尤为强大。</p>
<p>类比： awk–SQL中的Concat grep–SQL中的Select</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;pattern + action&#125;&#x27;</span> &#123;filenames&#125; <span class="comment">//用法</span></span><br><span class="line">ls | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> <span class="comment">//用|隔开与命令连用</span></span><br><span class="line">last -n <span class="number">5</span> | awk  <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">#awk -F: &#x27;/root/&#x27; /etc/passwd //搜索/etc/passwd文件中有root关键字的所有行</span><br><span class="line">	<span class="comment">//root:x:0:0:root:/root:/bin/bash</span></span><br></pre></td></tr></table></figure>

<p>awk工作流程是这样的：先执行BEGING，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,1 表 示 第 一 个 域 , 1表示第一个域,1表示第一个域,n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</p>
<h2 id="sed编辑"><a href="#sed编辑" class="headerlink" title="sed编辑"></a>sed编辑</h2><p>Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p>
<p>Linux sed命令是利用script来处理文本文件。sed可依照script的指令，来处理、编辑文本文件。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">sed -e 4a\newLine testfile <span class="comment">//在文件testfile第四行添加内容newLine</span></span><br><span class="line">nl /etc/passwd | sed <span class="string">&#x27;2d&#x27;</span> <span class="comment">//删除文件第二行</span></span><br><span class="line">nl /etc/passwd | sed <span class="string">&#x27;2,5d&#x27;</span> <span class="comment">//删除第2到5行</span></span><br><span class="line">nl /etc/passwd | sed <span class="string">&#x27;2，$d&#x27;</span> <span class="comment">//删除第2到最后行</span></span><br><span class="line">nl /etc/passwd | sed <span class="string">&#x27;2a drink tea&#x27;</span><span class="comment">//在第二行后添加行</span></span><br><span class="line"><span class="number">12345</span></span><br><span class="line">a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～</span><br><span class="line">c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！</span><br><span class="line">d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；</span><br><span class="line">i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；</span><br><span class="line">p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～</span><br><span class="line">s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 <span class="number">1</span>,20s/old/<span class="keyword">new</span>/g 就是啦！</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="grep查找行"><a href="#grep查找行" class="headerlink" title="grep查找行"></a>grep查找行</h2><p>Linux grep命令用于查找文件里符合条件的字符串。</p>
<p><strong>grep</strong>（global search regular expression(RE) and print out the line，全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>
<p><code>grep -H &#39;spring&#39; *.xml</code> 查找所以有的包含spring的xml文件</p>
<p><code>grep &#39;test&#39; d*</code> 显示所有以d开头的文件中包含test的行。</p>
<p><code>grep &#39;test&#39; aa bb cc</code> 显示在aa，bb，cc文件中匹配test的行。</p>
<p><code>grep &#39;[a-z]\&#123;5\&#125;&#39; aa</code> 显示所有包含每个字符串至少有5个连续小写字符的字符串的行。</p>
<h2 id="sort排序"><a href="#sort排序" class="headerlink" title="sort排序"></a>sort排序</h2><p>Linux sort命令用于将文本文件内容加以排序。</p>
<p>sort可针对文本文件的内容，以行为单位来排序</p>
<p>按照每行首字母ASCII编码来排序， 汉字也可按照读音字母顺序排序，汉字行排在字母行之后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sort mi.txt &#x2F;&#x2F;将mi.txt内容按行首字母的编码次序来排</span><br></pre></td></tr></table></figure>

<h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><p>提取指定网页</p>
<ul>
<li>显示头信息</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -i https://www.baidu.com</span><br></pre></td></tr></table></figure>

<ul>
<li>显示通信过程</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -v www.baidu.com</span><br></pre></td></tr></table></figure>

<ul>
<li>查看议定书</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl --trace-ascii output.txt https://www.baidu.com</span><br></pre></td></tr></table></figure>

<ul>
<li>查看时间</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl --trace-ascii output.txt --trace-time https://www.baidu.com</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">curl http:<span class="comment">//www.linux.com &gt;&gt; linux.html  //使用linux重定向功能保存访问的网页</span></span><br><span class="line"> curl -o linux.html http:<span class="comment">//www.linux.com //使用curl的内置option:-o(小写)保存网页</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>文件下载</p>
<p>语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl uri filename --silent|progress</span><br></pre></td></tr></table></figure>

<ul>
<li>–silent：不显示进度条</li>
<li>–progress：显示进度条</li>
</ul>
</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># curl https://avatar.csdnimg.cn/3/5/E/1_meituantech_1564971608.jpg -omeituan.jpg --progress</span></span><br></pre></td></tr></table></figure>

<ul>
<li>上传文件<br>语法：<code>$ curl --form upload=@localfilename --form press=OK [URL]</code></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># curl --form upload=@baidu.html --form press=OK url</span></span><br></pre></td></tr></table></figure>



<p>还有诸如代理，cookie等等功能。</p>
<h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p>默认是显示文本开头前10行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">head &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure>

<p>显示开头前k行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">head -k &#x2F;etc&#x2F;passwd</span><br><span class="line">head -n k &#x2F;etc&#x2F;passwd（注意和下面的有-的区别）</span><br><span class="line">head -n +k &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure>

<p>除最后k行外，显示剩余全部内容。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">head -n -k &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>命令格式</th>
<th>运行结果</th>
</tr>
</thead>
<tbody><tr>
<td>mv 文件名 文件名</td>
<td>将源文件名改为目标文件名</td>
</tr>
<tr>
<td>mv 文件名 目录名</td>
<td>将文件移动到目标目录</td>
</tr>
<tr>
<td>mv 目录名 目录名</td>
<td>目标目录已存在，将源目录 移动到目标目录；目标 目录不存在则改名</td>
</tr>
<tr>
<td>mv 目录名 文件名</td>
<td>出错</td>
</tr>
</tbody></table>
<h2 id="查看内核版本"><a href="#查看内核版本" class="headerlink" title="查看内核版本"></a>查看内核版本</h2><p>uname命令用于查看内核版本<br><img src="https://img-blog.csdnimg.cn/20200721133752825.png" alt="在这里插入图片描述"></p>
<h2 id="查看linux系统ip"><a href="#查看linux系统ip" class="headerlink" title="查看linux系统ip"></a>查看linux系统ip</h2><p>查看linux的ip地址：可以用命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure>

<h2 id="查看ip是否被占用"><a href="#查看ip是否被占用" class="headerlink" title="查看ip是否被占用"></a>查看ip是否被占用</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -i:8080</span><br></pre></td></tr></table></figure>

<h2 id="uptime命令使用"><a href="#uptime命令使用" class="headerlink" title="uptime命令使用"></a>uptime命令使用</h2><p>uptime命令能够打印系统总共运行了多长时间和系统的平均负载。uptime命令可以显示的信息显示依次为：现在时间、系统已经运行了多长时间、目前有多少登陆用户、系统在过去的1分钟、5分钟和15分钟内的平均负载。</p>
<p>用help参数参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[shared@localhost~]$</span><span class="bash"> uptime --<span class="built_in">help</span></span></span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line"> uptime [options]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"> -p, --pretty   show uptime in pretty format </span><br><span class="line"> -h, --help     display this help and exit </span><br><span class="line"> -s, --since    system up since </span><br><span class="line"> -V, --version  output version information and exit</span><br><span class="line"></span><br><span class="line">For more details see uptime(1).</span><br><span class="line"><span class="meta">[shared@localhost~]$</span><span class="bash"> uptime -V</span></span><br><span class="line">uptime from procps-ng 3.3.10</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Options:</p>
<ul>
<li>-p, –pretty show uptime in pretty format //比较美观的打印</li>
<li>-h, –help display this help and exit // 查看参数帮助</li>
<li>-s, –since system up since // 查看系统当前时间</li>
<li>-V, –version output version information and exit // 查看版本</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200721131423692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTQ0MjczOTE=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="telnet命令使用"><a href="#telnet命令使用" class="headerlink" title="telnet命令使用"></a>telnet命令使用</h2><p>不管在window还是linux系统要校验某台服务器是否可以ping通，都可以使用命令，如果要加上断口的，linux可以使用telnet命令<br><code>语法：telnet ip port</code>                      </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">telnet 127.0.0.1 8080</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>POI入门</title>
    <url>/2019/12/04/POI%20%E8%AF%BB%E5%86%99%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="POI-读写xml文件数据"><a href="#POI-读写xml文件数据" class="headerlink" title="POI 读写xml文件数据"></a>POI 读写xml文件数据</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Cell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Row;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFCell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">POITest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//使用POI读取Excel文件中的数据</span></span><br><span class="line">    <span class="comment">//@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//加载指定文件，创建一个Excel对象（工作簿）</span></span><br><span class="line">        XSSFWorkbook excel = <span class="keyword">new</span> XSSFWorkbook(<span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(<span class="string">&quot;e:\\poi.xlsx&quot;</span>)));</span><br><span class="line">        <span class="comment">//读取Excel文件中第一个Sheet标签页</span></span><br><span class="line">        XSSFSheet sheet = excel.getSheetAt(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//遍历Sheet标签页，获得每一行数据</span></span><br><span class="line">        <span class="keyword">for</span> (Row row : sheet) &#123;</span><br><span class="line">            <span class="comment">//遍历行，获得每个单元格对象</span></span><br><span class="line">            <span class="keyword">for</span> (Cell cell : row) &#123;</span><br><span class="line">                System.out.println(cell.getStringCellValue());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭资源</span></span><br><span class="line">        excel.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用POI读取Excel文件中的数据</span></span><br><span class="line">    <span class="comment">//@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//加载指定文件，创建一个Excel对象（工作簿）</span></span><br><span class="line">        XSSFWorkbook excel = <span class="keyword">new</span> XSSFWorkbook(<span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(<span class="string">&quot;e:\\poi.xlsx&quot;</span>)));</span><br><span class="line">        <span class="comment">//读取Excel文件中第一个Sheet标签页</span></span><br><span class="line">        XSSFSheet sheet = excel.getSheetAt(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//获得当前工作表中最后一个行号，需要注意：行号从0开始</span></span><br><span class="line">        <span class="keyword">int</span> lastRowNum = sheet.getLastRowNum();</span><br><span class="line">        System.out.println(<span class="string">&quot;lastRowNum = &quot;</span> + lastRowNum);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=lastRowNum;i++)&#123;</span><br><span class="line">            XSSFRow row = sheet.getRow(i);<span class="comment">//根据行号获取每一行</span></span><br><span class="line">            <span class="comment">//获得当前行最后一个单元格索引</span></span><br><span class="line">            <span class="keyword">short</span> lastCellNum = row.getLastCellNum();</span><br><span class="line">            System.out.println(<span class="string">&quot;lastCellNum = &quot;</span> + lastCellNum);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;lastCellNum;j++)&#123;</span><br><span class="line">                XSSFCell cell = row.getCell(j);<span class="comment">//根据单元格索引获得单元格对象</span></span><br><span class="line">                System.out.println(cell.getStringCellValue());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭资源</span></span><br><span class="line">        excel.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用POI向Excel文件写入数据，并且通过输出流将创建的Excel文件保存到本地磁盘</span></span><br><span class="line">    <span class="comment">//@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//在内存中创建一个Excel文件（工作簿）</span></span><br><span class="line">        XSSFWorkbook excel = <span class="keyword">new</span> XSSFWorkbook();</span><br><span class="line">        <span class="comment">//创建一个工作表对象</span></span><br><span class="line">        XSSFSheet sheet = excel.createSheet(<span class="string">&quot;wyg&quot;</span>);</span><br><span class="line">        <span class="comment">//在工作表中创建行对象</span></span><br><span class="line">        XSSFRow title = sheet.createRow(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//在行中创建单元格对象</span></span><br><span class="line">        title.createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;姓名&quot;</span>);</span><br><span class="line">        title.createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;地址&quot;</span>);</span><br><span class="line">        title.createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;年龄&quot;</span>);</span><br><span class="line"></span><br><span class="line">        XSSFRow dataRow = sheet.createRow(<span class="number">1</span>);</span><br><span class="line">        dataRow.createCell(<span class="number">0</span>).setCellValue(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">        dataRow.createCell(<span class="number">1</span>).setCellValue(<span class="string">&quot;上海&quot;</span>);</span><br><span class="line">        dataRow.createCell(<span class="number">2</span>).setCellValue(<span class="string">&quot;22&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个输出流，通过输出流将内存中的Excel文件写到磁盘</span></span><br><span class="line">        FileOutputStream out = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(<span class="string">&quot;e:\\hello.xlsx&quot;</span>));</span><br><span class="line">        excel.write(out);</span><br><span class="line">        out.flush();</span><br><span class="line">        excel.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>POI</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Security</title>
    <url>/2019/09/22/Spring%20Security/</url>
    <content><![CDATA[<h1 id="Spring-Security"><a href="#Spring-Security" class="headerlink" title="Spring Security"></a>Spring Security</h1><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>springsecuritydemo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springsecuritydemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>health_interface<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--jdk编译插件--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 指定端口 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">port</span>&gt;</span>85<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 请求路径 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h2><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><h4 id="加载的配置文件"><a href="#加载的配置文件" class="headerlink" title="加载的配置文件"></a>加载的配置文件</h4><h4 id="do"><a href="#do" class="headerlink" title="*.do"></a>*.do</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      DelegatingFilterProxy用于整合第三方框架</span></span><br><span class="line"><span class="comment">      整合Spring Security时过滤器的名称必须为springSecurityFilterChain，</span></span><br><span class="line"><span class="comment">     否则会抛出NoSuchBeanDefinitionException异常</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>springSecurityFilterChain<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.DelegatingFilterProxy<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>springSecurityFilterChain<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定加载的配置文件 ，通过参数contextConfigLocation加载 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-security.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="spring-security-xml"><a href="#spring-security-xml" class="headerlink" title="spring-security.xml"></a>spring-security.xml</h2><h4 id="放行"><a href="#放行" class="headerlink" title="放行"></a>放行</h4><h4 id="对不同的角色进行处理"><a href="#对不同的角色进行处理" class="headerlink" title="对不同的角色进行处理"></a>对不同的角色进行处理</h4><h4 id="拦截规则"><a href="#拦截规则" class="headerlink" title="拦截规则"></a>拦截规则</h4><h4 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h4><h4 id="配置认证管理器"><a href="#配置认证管理器" class="headerlink" title="配置认证管理器"></a>配置认证管理器</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:dubbo</span>=<span class="string">&quot;http://code.alibabatech.com/schema/dubbo&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:security</span>=<span class="string">&quot;http://www.springframework.org/schema/security&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://code.alibabatech.com/schema/dubbo</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://code.alibabatech.com/schema/dubbo/dubbo.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                     http://www.springframework.org/schema/security</span></span></span><br><span class="line"><span class="tag"><span class="string">                     http://www.springframework.org/schema/security/spring-security.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--放行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">security:http</span> <span class="attr">security</span>=<span class="string">&quot;none&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;/login.html&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">security:http</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            auto-config:自动配置，如果设置为true，表示自动应用一些默认配置，比如框架会提供一个默认的登录页面</span></span><br><span class="line"><span class="comment">            use-expressions:是否使用spring security提供的表达式来描述权限</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">security:http</span> <span class="attr">auto-config</span>=<span class="string">&quot;true&quot;</span> <span class="attr">use-expressions</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--对不同的角色进行处理--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">security:intercept-url</span> <span class="attr">pattern</span>=<span class="string">&quot;/pages/a.html&quot;</span>  <span class="attr">access</span>=<span class="string">&quot;isAuthenticated()&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--拥有add权限就可以访问b.html页面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">security:intercept-url</span> <span class="attr">pattern</span>=<span class="string">&quot;/pages/b.html&quot;</span>  <span class="attr">access</span>=<span class="string">&quot;hasAuthority(&#x27;add&#x27;)&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--拥有ROLE_ADMIN角色就可以访问c.html页面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">security:intercept-url</span> <span class="attr">pattern</span>=<span class="string">&quot;/pages/c.html&quot;</span>  <span class="attr">access</span>=<span class="string">&quot;hasRole(&#x27;ROLE_ADMIN&#x27;)&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--拥有ROLE_ADMIN角色就可以访问d.html页面，</span></span><br><span class="line"><span class="comment">            注意：此处虽然写的是ADMIN角色，框架会自动加上前缀ROLE_--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">security:intercept-url</span> <span class="attr">pattern</span>=<span class="string">&quot;/pages/d.html&quot;</span>  <span class="attr">access</span>=<span class="string">&quot;hasRole(&#x27;ADMIN&#x27;)&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--配置拦截规则，/** 表示拦截所有请求--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            pattern:描述拦截规则</span></span><br><span class="line"><span class="comment">            asscess:指定所需的访问角色或者访问权限</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">security:intercept-url</span> <span class="attr">pattern</span>=<span class="string">&quot;/**&quot;</span> <span class="attr">access</span>=<span class="string">&quot;hasRole(&#x27;ROLE_ADMIN&#x27;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">security:intercept-url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;security:form-login</span><br><span class="line">            login-page=&quot;/login.html&quot;</span><br><span class="line">            username-parameter=&quot;username&quot;</span><br><span class="line">            password-parameter=&quot;password&quot;</span><br><span class="line">            login-processing-url=&quot;/login.do&quot;</span><br><span class="line">            default-target-url=&quot;/index.html&quot;</span><br><span class="line">            authentication-failure-url=&quot;/login.html&quot;&gt;<span class="tag">&lt;/<span class="name">security:form-login</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">security:csrf</span> <span class="attr">disabled</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">security:csrf</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">          logout：退出登录</span></span><br><span class="line"><span class="comment">          logout-url：退出登录操作对应的请求路径</span></span><br><span class="line"><span class="comment">          logout-success-url：退出登录后的跳转页面</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">security:logout</span> <span class="attr">logout-url</span>=<span class="string">&quot;/logout.do&quot;</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">logout-success-url</span>=<span class="string">&quot;/login.html&quot;</span> <span class="attr">invalidate-session</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">security:http</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置认证管理器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">security:authentication-manager</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置认证提供者--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">security:authentication-provider</span> <span class="attr">user-service-ref</span>=<span class="string">&quot;userService2&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--对密码进行加密的对象--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">security:password-encoder</span> <span class="attr">ref</span>=<span class="string">&quot;passwordEncoder&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">security:password-encoder</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--配置一个具体的用户，后期需要从数据库查询用户</span></span><br><span class="line"><span class="comment">            &lt;security:user-service&gt;</span></span><br><span class="line"><span class="comment">                &lt;security:user name=&quot;admin&quot; password=&quot;&#123;noop&#125;1234&quot; authorities=&quot;ROLE_ADMIN&quot;/&gt;</span></span><br><span class="line"><span class="comment">            &lt;/security:user-service&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">security:authentication-provider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">security:authentication-manager</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注入bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;wang.yinggang.service.SpringSecurityUserService&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;wang.yinggang.service.SpringSecurityUserService2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置密码加密对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;passwordEncoder&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--开启spring注解使用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>&gt;</span><span class="tag">&lt;/<span class="name">context:annotation-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;wang.yinggang.controller&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="认证提供者"><a href="#认证提供者" class="headerlink" title="认证提供者"></a>认证提供者</h2><h4 id="SpringSecurityUserService2"><a href="#SpringSecurityUserService2" class="headerlink" title="SpringSecurityUserService2"></a>SpringSecurityUserService2</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> wang.yinggang.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringSecurityUserService2</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BCryptPasswordEncoder bCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//模拟数据库中的用户数据</span></span><br><span class="line">    <span class="keyword">public</span>  Map&lt;String, User&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initUserDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        wang.yinggang.pojo.User user1 = <span class="keyword">new</span> wang.yinggang.pojo.User();</span><br><span class="line">        user1.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        user1.setPassword(bCryptPasswordEncoder.encode(<span class="string">&quot;admin&quot;</span>));<span class="comment">//（加密）</span></span><br><span class="line"></span><br><span class="line">        wang.yinggang.pojo.User user2 = <span class="keyword">new</span> wang.yinggang.pojo.User();</span><br><span class="line">        user2.setUsername(<span class="string">&quot;xiaoming&quot;</span>);</span><br><span class="line">        user2.setPassword(bCryptPasswordEncoder.encode(<span class="string">&quot;1234&quot;</span>));</span><br><span class="line"></span><br><span class="line">        map.put(user1.getUsername(),user1);</span><br><span class="line">        map.put(user2.getUsername(),user2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据用户名查询用户信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.initUserDate();</span><br><span class="line">        System.out.println(<span class="string">&quot;用户输入的用户名为：&quot;</span> + username);</span><br><span class="line">        <span class="comment">//根据用户名查询数据库获得用户信息(包含数据库中存储的密码信息)</span></span><br><span class="line">        User user = map.get(username);<span class="comment">//模拟查询根据用户名查询数据库</span></span><br><span class="line">        <span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//用户名不存在</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//将用户信息返回给框架</span></span><br><span class="line">            <span class="comment">//框架会进行密码比对(页面提交的密码和数据库中查询的密码进行比对)</span></span><br><span class="line">            List&lt;GrantedAuthority&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="comment">//为当前登录用户授权,后期需要改为从数据库查询当前用户对应的权限</span></span><br><span class="line">            list.add(<span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">&quot;permission_A&quot;</span>));<span class="comment">//授权</span></span><br><span class="line">            list.add(<span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">&quot;permission_B&quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(username.equals(<span class="string">&quot;admin&quot;</span>))&#123;</span><br><span class="line">                list.add(<span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">&quot;ROLE_ADMIN&quot;</span>));<span class="comment">//授予角色</span></span><br><span class="line">                list.add(<span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">&quot;add&quot;</span>));<span class="comment">//授予权限</span></span><br><span class="line">            &#125;</span><br><span class="line">            org.springframework.security.core.userdetails.User securityUser = <span class="keyword">new</span> org.springframework.security.core.userdetails.User(username,user.getPassword(),list);</span><br><span class="line">            <span class="keyword">return</span> securityUser;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h2><h4 id="PreAuthorize-角色访问"><a href="#PreAuthorize-角色访问" class="headerlink" title="@PreAuthorize 角色访问"></a>@PreAuthorize 角色访问</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.access.prepost.PreAuthorize;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/add&quot;)</span></span><br><span class="line">    <span class="meta">@PreAuthorize(&quot;hasAuthority(&#x27;add&#x27;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;add&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delete&quot;)</span></span><br><span class="line">    <span class="meta">@PreAuthorize(&quot;hasRole(&#x27;ROLE_ADMIN&#x27;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;delete&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>fastjson</title>
    <url>/2020/04/06/fastjson/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//对象转Json</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">ClassToJson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	User user = <span class="keyword">new</span> User();</span><br><span class="line">	user.setId(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">	user.setName(<span class="string">&quot;王二麻子&quot;</span>);</span><br><span class="line">	String json = JSON.toJSONString(user);</span><br><span class="line">	<span class="keyword">return</span> json;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Json转对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> User <span class="title">JsonToClass</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	String classJson = ClassToJson();</span><br><span class="line">	User user = JSON.parseObject(classJson,User.class);</span><br><span class="line">	<span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//List转Json</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">ListToJson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">	userList.add(<span class="keyword">new</span> User(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;王一麻子&quot;</span>));</span><br><span class="line">	userList.add(<span class="keyword">new</span> User(<span class="string">&quot;2&quot;</span>,<span class="string">&quot;王二麻子&quot;</span>));</span><br><span class="line">	userList.add(<span class="keyword">new</span> User(<span class="string">&quot;3&quot;</span>,<span class="string">&quot;王三麻子&quot;</span>));</span><br><span class="line">	userList.add(<span class="keyword">new</span> User(<span class="string">&quot;4&quot;</span>,<span class="string">&quot;王四麻子&quot;</span>));</span><br><span class="line">	userList.add(<span class="keyword">new</span> User(<span class="string">&quot;5&quot;</span>,<span class="string">&quot;王五麻子&quot;</span>));</span><br><span class="line">	userList.add(<span class="keyword">new</span> User(<span class="string">&quot;6&quot;</span>,<span class="string">&quot;王六麻子&quot;</span>));</span><br><span class="line">	String json = JSON.toJSONString(userList);</span><br><span class="line">	<span class="keyword">return</span> json;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Json转List</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;User&gt; <span class="title">JsonToList</span><span class="params">()</span></span>&#123;</span><br><span class="line">	String listJson = ListToJson();</span><br><span class="line">	List&lt;User&gt; userList = JSON.parseArray(listJson,User.class);</span><br><span class="line">	<span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//parse这个方法比较通用,但是无法精确泛型</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List <span class="title">JsonToList2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	String listJson = ListToJson();</span><br><span class="line">	List userList = (List)JSON.parse(listJson);</span><br><span class="line">	<span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Map转Json</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">MapToJson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Map&lt;String,User&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">	map.put(<span class="string">&quot;大哥&quot;</span>, <span class="keyword">new</span> User(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;李狗蛋子&quot;</span>));</span><br><span class="line">	map.put(<span class="string">&quot;二哥&quot;</span>, <span class="keyword">new</span> User(<span class="string">&quot;2&quot;</span>,<span class="string">&quot;李猫蛋子&quot;</span>));</span><br><span class="line">	map.put(<span class="string">&quot;三哥&quot;</span>, <span class="keyword">new</span> User(<span class="string">&quot;3&quot;</span>,<span class="string">&quot;李竹鼠蛋子&quot;</span>));</span><br><span class="line">	String json = JSON.toJSONString(map);</span><br><span class="line">	<span class="keyword">return</span> json;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Json转Map</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title">JsonToMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	String mapJson = MapToJson();</span><br><span class="line">	Map map = (Map)JSON.parseObject(mapJson,Map.class);</span><br><span class="line">	<span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通用的方法,但是无法确定泛型</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title">JsonToMap2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	String mapJson = MapToJson();</span><br><span class="line">	<span class="comment">//这2中写法都非常通用</span></span><br><span class="line">	<span class="comment">//Map map = (Map)JSON.parse(mapJson);</span></span><br><span class="line">	Map map = JSON.parseObject(mapJson);</span><br><span class="line">	<span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	System.out.println(ClassToJson());<span class="comment">//对象转Json</span></span><br><span class="line">	System.out.println(JsonToClass());<span class="comment">//Json转对象</span></span><br><span class="line">	System.out.println(ListToJson());<span class="comment">//List转Json</span></span><br><span class="line">	JsonToList().forEach(x-&gt;System.out.println(x));<span class="comment">//Json转List集合</span></span><br><span class="line">	System.out.println(MapToJson());<span class="comment">//Map转Json</span></span><br><span class="line">	JsonToMap().forEach((x,y) -&gt; &#123;System.out.println(x+<span class="string">&quot;:&quot;</span>+y);&#125;);<span class="comment">//Json转Map</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>User.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> String id;</span><br><span class="line"><span class="keyword">private</span> String name</span><br><span class="line"><span class="comment">//set get tostring..</span></span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>fastjson</tag>
      </tags>
  </entry>
  <entry>
    <title>二叉树</title>
    <url>/2020/11/12/shujujg/</url>
    <content><![CDATA[<h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><h3 id="1-1二叉树【理解】"><a href="#1-1二叉树【理解】" class="headerlink" title="1.1二叉树【理解】"></a>1.1二叉树【理解】</h3><ul>
<li><p>二叉树的特点</p>
<ul>
<li>二叉树中,任意一个节点的度要小于等于2<ul>
<li>节点: 在树结构中,每一个元素称之为节点</li>
<li>度: 每一个节点的子节点数量称之为度</li>
</ul>
</li>
</ul>
</li>
<li><p>二叉树结构图</p>
<p><img src="/2020/11/12/shujujg/.%5C%E4%BA%8C%E5%8F%89%E6%A0%91%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="01_二叉树结构图"></p>
</li>
</ul>
<h3 id="1-2二叉查找树【理解】"><a href="#1-2二叉查找树【理解】" class="headerlink" title="1.2二叉查找树【理解】"></a>1.2二叉查找树【理解】</h3><ul>
<li><p>二叉查找树的特点</p>
<ul>
<li>二叉查找树,又称<strong>二叉排序树</strong>或者<strong>二叉搜索树</strong></li>
<li>每一个节点上最多有<strong>两个子节点</strong></li>
<li>左子树上所有节点的值都小于根节点的值</li>
<li>右子树上所有节点的值都大于根节点的值</li>
<li><strong>左&lt;根&lt;右</strong></li>
</ul>
</li>
<li><p>二叉查找树结构图</p>
<p><img src="/2020/11/12/shujujg/.%5C%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="02_二叉查找树结构图"></p>
</li>
<li><p>二叉查找树和二叉树对比结构图</p>
<p><img src="/2020/11/12/shujujg/.%5C%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91%E5%AF%B9%E6%AF%94%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="03_二叉查找树和二叉树对比结构图"></p>
</li>
<li><p>二叉查找树添加节点规则</p>
<ul>
<li>小的存左边</li>
<li>大的存右边</li>
<li><strong>一样的不存</strong></li>
</ul>
<p><img src="/2020/11/12/shujujg/.%5C%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E6%B7%BB%E5%8A%A0%E8%8A%82%E7%82%B9%E8%A7%84%E5%88%99.png" alt="04_二叉查找树添加节点规则"></p>
</li>
</ul>
<h3 id="1-3平衡二叉树【理解】"><a href="#1-3平衡二叉树【理解】" class="headerlink" title="1.3平衡二叉树【理解】"></a>1.3平衡二叉树【理解】</h3><ul>
<li><p>平衡二叉树的特点</p>
<ul>
<li>二叉树左右两个子树的<strong>高度差不超过1</strong></li>
<li><strong>任意节点</strong>的左右两个<strong>子树</strong>都是一颗<strong>平衡二叉树</strong></li>
</ul>
</li>
<li><p>平衡二叉树旋转</p>
<ul>
<li><p>旋转触发时机    <strong>破坏了平衡</strong></p>
<ul>
<li>当<strong>添加一个节点</strong>之后,该树不再是一颗平衡二叉树</li>
</ul>
</li>
<li><p>左旋</p>
<ul>
<li>就是将根节点的右侧往左拉,原先的右子节点变成新的父节点,并把多余的左子节点出让,给已经降级的根节点当右子节点</li>
</ul>
</li>
</ul>
</li>
</ul>
<pre><code>添加一个**12**节点

![05_平衡二叉树左旋01](.\平衡二叉树左旋01.png)

![05_平衡二叉树左旋02](.\平衡二叉树左旋02.png)</code></pre>
<p>  复杂左旋</p>
<p>  添加<strong>12</strong></p>
<p>  <img src="/2020/11/12/shujujg/.%5Czx1.png" alt="image-20201107102149442"></p>
<p>  <strong>拿掉9节点</strong></p>
<p>  <img src="/2020/11/12/shujujg/.%5Czx2.png" alt="image-20201107102410776"></p>
<p>  |||||</p>
<p>  <img src="/2020/11/12/shujujg/.%5Czx3.png" alt="image-20201107102611349"></p>
<p>  <img src="/2020/11/12/shujujg/.%5Czx4.png" alt="image-20201107102704474"></p>
<p>  <img src="/2020/11/12/shujujg/.%5Czx5.png" alt="image-20201107102744783"></p>
<ul>
<li><p>右旋</p>
<ul>
<li><p>就是将根节点的左侧往右拉,左子节点变成了新的父节点,并把多余的右子节点出让,给已经降级根节点当左子节点</p>
<p><img src="/2020/11/12/shujujg/.%5C%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%B3%E6%97%8B01.png" alt="06_平衡二叉树右旋01"></p>
<p><img src="/2020/11/12/shujujg/.%5C%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%B3%E6%97%8B02.png" alt="06_平衡二叉树右旋02"></p>
</li>
</ul>
</li>
<li><p>平衡二叉树和二叉查找树对比结构图</p>
<p><img src="/2020/11/12/shujujg/.%5C%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E5%AF%B9%E6%AF%94%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="07_平衡二叉树和二叉查找树对比结构图"></p>
</li>
<li><p>平衡二叉树旋转的四种情况</p>
<ul>
<li><p>左左</p>
<ul>
<li><p>左左: 当根节点左子树的左子树有节点插入,导致二叉树不平衡</p>
</li>
<li><p>如何旋转: 直接对整体进行右旋即可</p>
<p><img src="/2020/11/12/shujujg/.%5C%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B7%A6%E5%B7%A6.png" alt="08_平衡二叉树左左"></p>
</li>
</ul>
</li>
<li><p>左右</p>
<ul>
<li><p>左右: 当根节点左子树的右子树有节点插入,导致二叉树不平衡</p>
</li>
<li><p>如何旋转: 先在左子树对应的节点位置进行左旋,在对整体进行右旋</p>
<p><img src="/2020/11/12/shujujg/.%5C%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B7%A6%E5%8F%B3.png" alt="09_平衡二叉树左右"></p>
</li>
</ul>
</li>
<li><p>右右</p>
<ul>
<li><p>右右: 当根节点右子树的右子树有节点插入,导致二叉树不平衡</p>
</li>
<li><p>如何旋转: 直接对整体进行左旋即可</p>
<p><img src="/2020/11/12/shujujg/.%5C%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%B3%E5%8F%B3.png" alt="10_平衡二叉树右右"></p>
</li>
</ul>
</li>
<li><p>右左</p>
<ul>
<li><p>右左:当根节点右子树的左子树有节点插入,导致二叉树不平衡</p>
</li>
<li><p>如何旋转: 先在右子树对应的节点位置进行右旋,在对整体进行左旋</p>
<p><img src="/2020/11/12/shujujg/.%5C%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%B3%E5%B7%A6.png" alt="11_平衡二叉树右左"></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="1-红黑树"><a href="#1-红黑树" class="headerlink" title="1.红黑树"></a>1.红黑树</h2><h3 id="1-1概述【理解】"><a href="#1-1概述【理解】" class="headerlink" title="1.1概述【理解】"></a>1.1概述【理解】</h3><ul>
<li><p>红黑树的特点</p>
<ul>
<li><strong>平衡二叉B树</strong></li>
<li>每一个节点可以是<strong>红</strong>或者<strong>黑</strong></li>
<li>红黑树不是高度平衡的,它的平衡是通过”自己的<strong>红黑规则</strong>“进行实现的</li>
</ul>
</li>
<li><p>红黑树的<strong>红黑规则</strong>有哪些</p>
<ol>
<li><p>每一个节点或是红色的,或者是黑色的</p>
</li>
<li><p><strong>根节点</strong>必须是<strong>黑</strong>色</p>
</li>
<li><p>如果一个节点<strong>没有子节点</strong>或者<strong>父</strong>节点,则<strong>该节点</strong>相应的<strong>指针</strong>属性值为<strong>Nil</strong>,这些<strong>Nil</strong>视为叶节点,每个叶节点(Nil)是<strong>黑色</strong>的</p>
</li>
<li><p>如果某一个节点是<strong>红色</strong>,那么它的子节点必须是<strong>黑色</strong>(<strong>不能出现两个红色</strong>节点相连 的情况)</p>
</li>
<li><p>对每一个节点,从<strong>该节点</strong>到其所有<strong>后代叶节点</strong>的简单<strong>路径</strong>上,均包含<strong>相同数目的黑色节点</strong></p>
<p><img src="/2020/11/12/shujujg/%E7%BA%A2%E9%BB%91%E6%A0%91%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="12_红黑树结构图"></p>
</li>
</ol>
</li>
<li><p>红黑树添加节点的默认颜色</p>
<ul>
<li><p>添加节点时,默认为红色,效率高</p>
<p><img src="/2020/11/12/shujujg/%E7%BA%A2%E9%BB%91%E6%A0%91%E6%B7%BB%E5%8A%A0%E8%8A%82%E7%82%B9%E9%A2%9C%E8%89%B2.png" alt="13_红黑树添加节点颜色"></p>
</li>
</ul>
</li>
<li><p>红黑树添加节点后如何保持红黑规则</p>
<ul>
<li>根节点位置<ul>
<li>直接变为黑色</li>
</ul>
</li>
<li>非根节点位置<ul>
<li>父节点为黑色<ul>
<li>不需要任何操作,默认红色即可</li>
</ul>
</li>
<li>父节点为红色<ul>
<li>叔叔节点为红色<ol>
<li>将”父节点”设为黑色,将”叔叔节点”设为黑色</li>
<li>将”祖父节点”设为红色</li>
<li>如果”祖父节点”为根节点,则将根节点再次变成黑色</li>
</ol>
</li>
<li>叔叔节点为黑色<ol>
<li>将”父节点”设为黑色</li>
<li>将”祖父节点”设为红色</li>
<li>以”祖父节点”为支点进行旋转</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="添加黑色节点"><a href="#添加黑色节点" class="headerlink" title="添加黑色节点"></a>添加黑色节点</h3><p><img src="/2020/11/12/shujujg/.%5Chh01.png" alt="image-20201110142039570"></p>
<p><img src="/2020/11/12/shujujg/.%5Chh02.png" alt="image-20201110142211238"></p>
<p><img src="/2020/11/12/shujujg/.%5Chh03.png" alt="image-20201110142332133"></p>
<p><img src="/2020/11/12/shujujg/.%5Chh04.png" alt="image-20201110142414043"></p>
<h3 id="添加红色节点（效率高）"><a href="#添加红色节点（效率高）" class="headerlink" title="添加红色节点（效率高）"></a>添加红色节点（效率高）</h3><p>一共只需要调整一次 所以添加的效率要更高点</p>
<p><img src="/2020/11/12/shujujg/.%5Chh04.png" alt="image-20201110142414043"></p>
<h3 id="添加节点思路"><a href="#添加节点思路" class="headerlink" title="添加节点思路"></a>添加节点思路</h3><p><img src="/2020/11/12/shujujg/.%5Ch01.png" alt="image-20201110142734821"></p>
<p><img src="/2020/11/12/shujujg/.%5Ch2.png" alt="image-20201110142828938"></p>
<p><img src="/2020/11/12/shujujg/.%5Ch3.png" alt="image-20201110142914836"></p>
<p><img src="/2020/11/12/shujujg/.%5Ch4.png" alt="image-20201110143005987"></p>
<p><img src="/2020/11/12/shujujg/.%5Ch5.png" alt="image-20201110143128714"></p>
<p>20是根节点 所以不用变成<strong>红色</strong></p>
<p><img src="/2020/11/12/shujujg/.%5Chx01.png" alt="image-20201110143532153"></p>
<p><img src="/2020/11/12/shujujg/.%5C001.png" alt="image-20201110143943929"></p>
<p><img src="/2020/11/12/shujujg/.%5C002.png" alt="image-20201110144007100"></p>
<p><img src="/2020/11/12/shujujg/.%5C003.png" alt="image-20201110144020937"></p>
<p><img src="/2020/11/12/shujujg/.%5C004.png" alt="image-20201110144034368"></p>
<p><img src="/2020/11/12/shujujg/.%5C005.png" alt="image-20201110144121104"></p>
<p><img src="/2020/11/12/shujujg/.%5C006.png" alt="image-20201110144208117"></p>
<p><img src="/2020/11/12/shujujg/.%5C007.png" alt="image-20201110144227530"></p>
<p><img src="/2020/11/12/shujujg/.%5C008.png" alt="image-20201110144303897"></p>
<h2 id="2-哈希表结构【理解】"><a href="#2-哈希表结构【理解】" class="headerlink" title="2 哈希表结构【理解】"></a>2 哈希表结构【理解】</h2><ul>
<li><p>JDK1.8以前</p>
<p>​    数组 + 链表</p>
<p><img src="/2020/11/12/shujujg/.%5CJKD8%E4%BB%A5%E5%89%8D%E5%93%88%E5%B8%8C%E8%A1%A8.png" alt="14_JKD8以前哈希表"></p>
</li>
<li><p>JDK1.8以后</p>
<ul>
<li><p>节点个数少于等于8个</p>
<p>​    数组 + 链表</p>
</li>
<li><p>节点个数多于8个</p>
<p>​    数组 + 红黑树</p>
</li>
</ul>
<p><img src="/2020/11/12/shujujg/.%5CJKD8%E4%BB%A5%E5%90%8E%E5%93%88%E5%B8%8C%E8%A1%A8.png" alt="15_JKD8以后哈希表"></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>公共异常处理</title>
    <url>/2020/04/06/%E5%85%AC%E5%85%B1%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h2 id="公共异常处理"><a href="#公共异常处理" class="headerlink" title="公共异常处理"></a>公共异常处理</h2><p>为了使我们的代码更容易维护，我们创建一个类集中处理异常</p>
<p>在handler包下创建公共异常处理类BaseExceptionHandler</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统一异常处理类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span> <span class="comment">//声明该类是一个增强类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseExceptionHandler</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">    <span class="meta">@ExceptionHandler(value = Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">error</span><span class="params">( Exception e)</span> </span>&#123;</span><br><span class="line">        e.printStackTrace();        </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">false</span>, StatusCode.ERROR, e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式之单例模式</title>
    <url>/2020/01/22/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><h3 id="1-单例模式的定义"><a href="#1-单例模式的定义" class="headerlink" title="1 单例模式的定义"></a>1 单例模式的定义</h3><ul>
<li><p>单例模式是指确保一个类在任何的情况下都绝对只有一个实例，并提供一个全局访问点</p>
<p>ServletContext ServletConfig AplicationContext DBPool</p>
</li>
<li><p>隐藏所有的构造方法</p>
</li>
<li><p>属于创建型模式</p>
</li>
</ul>
<p>优点：保证一个类只有一个实例，并提供一个访问它的全局访问点常用于重量级对象，这个类创建对象是耗时，耗内存和复杂的单例模式的好处 保证对象在内存中仅有一个，减少内存开销</p>
<h3 id="2-单例模式常见写法"><a href="#2-单例模式常见写法" class="headerlink" title="2.单例模式常见写法"></a>2.单例模式常见写法</h3><h4 id="饿汉式单例"><a href="#饿汉式单例" class="headerlink" title="饿汉式单例"></a>饿汉式单例</h4><ul>
<li>构造方法私有</li>
<li>返回一个实例</li>
<li>创建一个静态的实例</li>
</ul>
<p>在 单例类首次加载时候就创建实例</p>
<p>优点：线程安全的</p>
<p>饿汉式在类创建的同时就已经创建好一个静态的对象供系统使用，以后不再改变，所以天生是线程安全的</p>
<p>缺点：浪费内存空间</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//饿汉式单例类.在类初始化时，已经自行实例化 </span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton1</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton1 single = <span class="keyword">new</span> Singleton1();</span><br><span class="line">    <span class="comment">//静态工厂方法 </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton1 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> single;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//饿汉式单例类.在类初始化时，已经自行实例化 </span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton1</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton1 single;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        single = <span class="keyword">new</span> Singleton1();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//静态工厂方法 </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton1 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> single;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h4 id="懒汉式单例"><a href="#懒汉式单例" class="headerlink" title="懒汉式单例"></a>懒汉式单例</h4><p>被外部类调用时才创建实例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//懒汉式单例类.在第一次调用的时候实例化自己 </span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton single=<span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">//静态工厂方法 </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         <span class="keyword">if</span> (single == <span class="keyword">null</span>) &#123;  </span><br><span class="line">             single = <span class="keyword">new</span> Singleton();</span><br><span class="line">         &#125;  </span><br><span class="line">        <span class="keyword">return</span> single;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>懒汉式单例的实现没有考虑线程安全问题，它是线程不安全的</p>
<p>测试一下</p>
<p>ExectorThread.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExectorThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Singleton instance = Singleton.getInstance();</span><br><span class="line">        System.out.println(Thread.currentThread().getName() +<span class="string">&quot;---&quot;</span>+instance);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>singletonTest.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingletonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">singletonTest</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Thread thread01 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> ExectorThread());</span><br><span class="line">        Thread thread02 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> ExectorThread());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        thread01.start();</span><br><span class="line">        thread02.start();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;线程启动完毕&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">线程启动完毕</span><br><span class="line">Thread-1---wang.yinggang.Singleton@75dd38ba</span><br><span class="line">Thread-2---wang.yinggang.Singleton@75dd38ba</span><br></pre></td></tr></table></figure>

<p>两个线程再抢cpu 可能同时抢到 可能一前一后</p>
<p>多运行几次，结果有可能不同</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">线程启动完毕</span><br><span class="line">Thread-2---wang.yinggang.Singleton@51219e67</span><br><span class="line">Thread-1---wang.yinggang.Singleton@7b1ad871</span><br></pre></td></tr></table></figure>



<p>如何避免线程安全的问题</p>
<ul>
<li>线程安全解决办法1：</li>
</ul>
<p>方法上加同步</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//适中的方案</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         <span class="keyword">if</span> (single == <span class="keyword">null</span>) &#123;  </span><br><span class="line">             single = <span class="keyword">new</span> Singleton();</span><br><span class="line">         &#125;  </span><br><span class="line">        <span class="keyword">return</span> single;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<p>synchronized在1.8之后性能优化了不少 不可避免的还是存在一些性能的问题</p>
<p>方法被static修饰 导致 整个类可能被锁住</p>
<ul>
<li><p>线程安全解决办法2：</p>
<p>双重检查锁定</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//适中的方案</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         <span class="keyword">if</span> (single == <span class="keyword">null</span>) &#123;</span><br><span class="line">             	<span class="keyword">synchronized</span>(Singleton.class)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (single == <span class="keyword">null</span>) &#123;</span><br><span class="line">             			single = <span class="keyword">new</span> Singleton();</span><br><span class="line">                        </span><br><span class="line">                        <span class="comment">/*</span></span><br><span class="line"><span class="comment">                        cpu执行的时候会转换成jvm指令进行智行</span></span><br><span class="line"><span class="comment">                        指令冲排序问题 volatile</span></span><br><span class="line"><span class="comment">                        </span></span><br><span class="line"><span class="comment">                        1.分配内存给这个对象</span></span><br><span class="line"><span class="comment">                        2.初始化对象</span></span><br><span class="line"><span class="comment">                        3.将初始化的对象和内存的地址建立关联，进行赋值</span></span><br><span class="line"><span class="comment">                        4.用户初次访问</span></span><br><span class="line"><span class="comment">                        */</span></span><br><span class="line">                        </span><br><span class="line">                      </span><br><span class="line">                    &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">         &#125;  </span><br><span class="line">       </span><br><span class="line">        <span class="keyword">return</span> single;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<ul>
<li><p>线程安全解决办法3：</p>
<p>静态内部类方式</p>
<p>懒汉式单例写法 性能是最优</p>
<p>实现了线程安全，又避免了同步带来的性能影响</p>
</li>
</ul>
<p>  单例模式的缺点</p>
<h5 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h5><p>缺点1：可以会被发射攻击</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">LazyHolder</span> </span>&#123;  </span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();  </span><br><span class="line">    &#125;  </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;  </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">       <span class="keyword">return</span> LazyHolder.INSTANCE;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>



<p>反射解决办法：</p>
<p>抛一个异常</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">LazyHolder</span> </span>&#123;  </span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();  </span><br><span class="line">    &#125;  </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    	<span class="keyword">if</span>(LazyHolder.INSTANCE != <span class="keyword">null</span>)&#123;</span><br><span class="line">    		<span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;不允许创建多个实例&quot;</span>)；</span><br><span class="line">    	</span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;  </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">       <span class="keyword">return</span> LazyHolder.INSTANCE;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>





<p>情况</p>
<p>序列化会通过反射调用无参数的构造方法创建一个新的对象。</p>
<p>序列化破坏单例模式的解决办法</p>
<ul>
<li>重写readResolve方法 覆盖反序列化出来的对象</li>
<li>创建了两次 发生在jvm层 相对来说比较安全的</li>
<li></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Object <span class="title">readResolve</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> INSTANCE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="注册式单例"><a href="#注册式单例" class="headerlink" title="注册式单例"></a>注册式单例</h4><p>​        有两种：一种式枚举登记，一种是容器缓存</p>
<h5 id="枚举式单例"><a href="#枚举式单例" class="headerlink" title="枚举式单例"></a>枚举式单例</h5><p>​    从jdk层面就为枚举不被序列化和反射破坏来保驾护航</p>
<ul>
<li>立即加载</li>
<li>线程安全</li>
<li>实现简单</li>
<li>序列化</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBConnection</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        EnumSingleton.SingletonClass con1 = EnumSingleton.INSTANCE.getInstance();</span><br><span class="line">        EnumSingleton.SingletonClass con2 = EnumSingleton.INSTANCE.getInstance();</span><br><span class="line">        System.out.println(con1 == con2);</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">EnumSingleton</span> </span>&#123;</span><br><span class="line">        INSTANCE;<span class="comment">// 枚举里的属性相当于Singleton的实例</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> SingletonClass instance;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">EnumSingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            instance = <span class="keyword">new</span> SingletonClass();</span><br><span class="line">            System.out.println(<span class="string">&quot;call EnumSingleton()&quot;</span>);</span><br><span class="line">        &#125;   </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> SingletonClass <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> instance;</span><br><span class="line">        &#125;   </span><br><span class="line"></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">SingletonClass</span> </span>&#123;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>z</p>
<h3 id="3-登记式单例（不常用）"><a href="#3-登记式单例（不常用）" class="headerlink" title="3.登记式单例（不常用）"></a>3.登记式单例（不常用）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//类似Spring里面的方法，将类名注册，下次从里面直接获取。</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton3</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,Singleton3&gt; map = <span class="keyword">new</span> HashMap&lt;String,Singleton3&gt;();</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        Singleton3 single = <span class="keyword">new</span> Singleton3();</span><br><span class="line">        map.put(single.getClass().getName(), single);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//保护的默认构造子</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Singleton3</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="comment">//静态工厂方法,返还此类惟一的实例</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton3 <span class="title">getInstance</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(name == <span class="keyword">null</span>) &#123;</span><br><span class="line">            name = Singleton3.class.getName();</span><br><span class="line">            System.out.println(<span class="string">&quot;name == null&quot;</span>+<span class="string">&quot;---&gt;name=&quot;</span>+name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(map.get(name) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                map.put(name, (Singleton3) Class.forName(name).newInstance());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map.get(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//一个示意性的商业方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">about</span><span class="params">()</span> </span>&#123;    </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello, I am RegSingleton.&quot;</span>;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Singleton3 single3 = Singleton3.getInstance(<span class="keyword">null</span>);</span><br><span class="line">        System.out.println(single3.about());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>BCrypt密码加密</title>
    <url>/2019/12/04/BCrypt%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86/BCrypt%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<h2 id="BCrypt密码加密"><a href="#BCrypt密码加密" class="headerlink" title="BCrypt密码加密"></a>BCrypt密码加密</h2><h3 id="1-BCrypt快速入门"><a href="#1-BCrypt快速入门" class="headerlink" title="1 BCrypt快速入门"></a>1 BCrypt快速入门</h3><p>​    在用户模块，对于用户密码的保护，通常都会进行加密。我们通常对密码进行加密，然后存放在数据库中，在用户进行登录的时候，将其输入的密码进行加密然后与数据库中存放的密文进行比较，以验证用户密码是否正确。  目前，MD5和BCrypt比较流行。相对来说，BCrypt比MD5更安全。因为其内部引入的加盐机制</p>
<p>BCrypt 官网<a href="http://www.mindrot.org/projects/jBCrypt/">http://www.mindrot.org/projects/jBCrypt/</a></p>
<p>（1）新建测试类，main方法中编写代码，实现对密码的加密</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestBcrypt</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 得到盐</span></span><br><span class="line"><span class="comment">         * 盐是一个随机生成的含有29个字符的字符串,并且会与密码一起合并进行最终的密文生成</span></span><br><span class="line"><span class="comment">         * 并且每一次生成的盐的值都是不同的</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            String gensalt = BCrypt.gensalt();<span class="comment">//获取到盐</span></span><br><span class="line">            </span><br><span class="line">            System.out.println(<span class="string">&quot;salt:&quot;</span>+gensalt);</span><br><span class="line">            String saltPassword = BCrypt.hashpw(<span class="string">&quot;123456&quot;</span>, gensalt);<span class="comment">//加盐</span></span><br><span class="line">            System.out.println(<span class="string">&quot;本次生成的密码:&quot;</span>+saltPassword);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（2）main方法中编写代码，实现对密码的校验。BCrypt不支持反运算，只支持密码校验。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//校验密码</span></span><br><span class="line"><span class="keyword">boolean</span> checkpw = BCrypt.checkpw(<span class="string">&quot;123456&quot;</span>, saltPassword);<span class="comment">//校验密码</span></span><br><span class="line">System.out.println(<span class="string">&quot;密码校验结果:&quot;</span>+checkpw);</span><br></pre></td></tr></table></figure>

<p>//输出结果</p>
<p>ture</p>
<h3 id="2-新增管理员密码加密"><a href="#2-新增管理员密码加密" class="headerlink" title="2 新增管理员密码加密"></a>2 新增管理员密码加密</h3><h4 id="2-1-需求与表结构分析"><a href="#2-1-需求与表结构分析" class="headerlink" title="2.1 需求与表结构分析"></a>2.1 需求与表结构分析</h4><p>新增管理员，使用BCrypt进行密码加密</p>
<table>
<thead>
<tr>
<th>id</th>
<th>int</th>
<th>主键id</th>
</tr>
</thead>
<tbody><tr>
<td>login_name</td>
<td>varchar</td>
<td>登录名</td>
</tr>
<tr>
<td>password</td>
<td>varchar</td>
<td>密码</td>
</tr>
<tr>
<td>status</td>
<td>char</td>
<td>状态</td>
</tr>
</tbody></table>
<h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><p>（1）修改yigou_service_system项目的AdminServiceImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 增加</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> admin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Admin admin)</span></span>&#123;</span><br><span class="line">    String password = BCrypt.hashpw(admin.getPassword(), BCrypt.gensalt());</span><br><span class="line">    admin.setPassword(password);   </span><br><span class="line">    adminMapper.insert(admin);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-管理员登录密码验证"><a href="#3-管理员登录密码验证" class="headerlink" title="3 管理员登录密码验证"></a>3 管理员登录密码验证</h3><h4 id="1-需求分析"><a href="#1-需求分析" class="headerlink" title="1 需求分析"></a>1 需求分析</h4><p>系统管理用户需要管理后台，需要先输入用户名和密码进行登录，才能进入管理后台。</p>
<p>思路：</p>
<p>​    用户发送请求，输入用户名和密码</p>
<p>​    后台管理微服务controller接收参数，验证用户名和密码是否正确，如果正确则返回用户登录成功结果</p>
<h4 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2 代码实现"></a>2 代码实现</h4><p>（1）AdminService新增方法定义</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录验证密码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">login</span><span class="params">(Admin admin)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（2）AdminServiceImpl实现此方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(Admin admin)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//根据登录名查询管理员</span></span><br><span class="line">    Admin admin1=<span class="keyword">new</span> Admin();</span><br><span class="line">    admin1.setLoginName(admin.getLoginName());</span><br><span class="line">    admin1.setStatus(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    Admin admin2 = adminMapper.selectOne(admin1);<span class="comment">//数据库查询出的对象</span></span><br><span class="line">    <span class="keyword">if</span>(admin2==<span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//验证密码, Bcrypt为spring的包, 第一个参数为明文密码, 第二个参数为密文密码</span></span><br><span class="line">        <span class="keyword">return</span> BCrypt.checkpw(admin.getPassword(),admin2.getPassword());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3）AdminController新增方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> admin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">login</span><span class="params">(<span class="meta">@RequestBody</span> Admin admin)</span></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> login = adminService.login(admin);</span><br><span class="line">    <span class="keyword">if</span>(login)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Result();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">false</span>,StatusCode.LOGINERROR,<span class="string">&quot;用户名或密码错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




]]></content>
      <tags>
        <tag>密码加密</tag>
      </tags>
  </entry>
  <entry>
    <title>验证码</title>
    <url>/2019/10/12/%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    <content><![CDATA[<h1 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h1><h2 id="1-生成N位验证码工具类"><a href="#1-生成N位验证码工具类" class="headerlink" title="1 生成N位验证码工具类"></a>1 生成N位验证码工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 随机生成验证码工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidateCodeUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机生成验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> length 长度为4位或者6位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">generateValidateCode</span><span class="params">(<span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line">        Integer code =<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(length == <span class="number">4</span>)&#123;</span><br><span class="line">            code = <span class="keyword">new</span> Random().nextInt(<span class="number">9999</span>);<span class="comment">//生成随机数，最大为9999</span></span><br><span class="line">            <span class="keyword">if</span>(code &lt; <span class="number">1000</span>)&#123;</span><br><span class="line">                code = code + <span class="number">1000</span>;<span class="comment">//保证随机数为4位数字</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(length == <span class="number">6</span>)&#123;</span><br><span class="line">            code = <span class="keyword">new</span> Random().nextInt(<span class="number">999999</span>);<span class="comment">//生成随机数，最大为999999</span></span><br><span class="line">            <span class="keyword">if</span>(code &lt; <span class="number">100000</span>)&#123;</span><br><span class="line">                code = code + <span class="number">100000</span>;<span class="comment">//保证随机数为6位数字</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;只能生成4位或6位数字验证码&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机生成指定长度字符串验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> length 长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateValidateCode4String</span><span class="params">(<span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line">        Random rdm = <span class="keyword">new</span> Random();</span><br><span class="line">        String hash1 = Integer.toHexString(rdm.nextInt());</span><br><span class="line">        String capstr = hash1.substring(<span class="number">0</span>, length);</span><br><span class="line">        <span class="keyword">return</span> capstr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-短信验证码发送"><a href="#2-短信验证码发送" class="headerlink" title="2  短信验证码发送"></a>2  短信验证码发送</h2><h3 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h3><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-dysmsapi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.DefaultAcsClient;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.IAcsClient;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.dysmsapi.model.v20170525.SendSmsRequest;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.dysmsapi.model.v20170525.SendSmsResponse;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.exceptions.ClientException;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.http.MethodType;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.profile.DefaultProfile;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.profile.IClientProfile;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 短信发送工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SMSUtils</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String VALIDATE_CODE = <span class="string">&quot;SMS_159620392&quot;</span>;<span class="comment">//发送短信验证码</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ORDER_NOTICE = <span class="string">&quot;SMS_159771588&quot;</span>;<span class="comment">//体检预约成功通知</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 发送短信</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> phoneNumbers</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> param</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> ClientException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendShortMessage</span><span class="params">(String templateCode,String phoneNumbers,String param)</span> <span class="keyword">throws</span> ClientException</span>&#123;</span><br><span class="line">		<span class="comment">// 设置超时时间-可自行调整</span></span><br><span class="line">		System.setProperty(<span class="string">&quot;sun.net.client.defaultConnectTimeout&quot;</span>, <span class="string">&quot;10000&quot;</span>);</span><br><span class="line">		System.setProperty(<span class="string">&quot;sun.net.client.defaultReadTimeout&quot;</span>, <span class="string">&quot;10000&quot;</span>);</span><br><span class="line">		<span class="comment">// 初始化ascClient需要的几个参数</span></span><br><span class="line">		<span class="keyword">final</span> String product = <span class="string">&quot;Dysmsapi&quot;</span>;<span class="comment">// 短信API产品名称（短信产品名固定，无需修改）</span></span><br><span class="line">		<span class="keyword">final</span> String domain = <span class="string">&quot;dysmsapi.aliyuncs.com&quot;</span>;<span class="comment">// 短信API产品域名（接口地址固定，无需修改）</span></span><br><span class="line">		<span class="comment">// 替换成你的AK</span></span><br><span class="line">		<span class="keyword">final</span> String accessKeyId = <span class="string">&quot;LTAIak3CfAehK7cE&quot;</span>;<span class="comment">// 你的accessKeyId,参考本文档步骤2</span></span><br><span class="line">		<span class="keyword">final</span> String accessKeySecret = <span class="string">&quot;zsykwhTIFa48f8fFdU06GOKjHWHel4&quot;</span>;<span class="comment">// 你的accessKeySecret，参考本文档步骤2</span></span><br><span class="line">		<span class="comment">// 初始化ascClient,暂时不支持多region（请勿修改）</span></span><br><span class="line">		IClientProfile profile = DefaultProfile.getProfile(<span class="string">&quot;cn-hangzhou&quot;</span>, accessKeyId, accessKeySecret);</span><br><span class="line">		DefaultProfile.addEndpoint(<span class="string">&quot;cn-hangzhou&quot;</span>, <span class="string">&quot;cn-hangzhou&quot;</span>, product, domain);</span><br><span class="line">		IAcsClient acsClient = <span class="keyword">new</span> DefaultAcsClient(profile);</span><br><span class="line">		<span class="comment">// 组装请求对象</span></span><br><span class="line">		SendSmsRequest request = <span class="keyword">new</span> SendSmsRequest();</span><br><span class="line">		<span class="comment">// 使用post提交</span></span><br><span class="line">		request.setMethod(MethodType.POST);</span><br><span class="line">		<span class="comment">// 必填:待发送手机号。支持以逗号分隔的形式进行批量调用，批量上限为1000个手机号码,批量调用相对于单条调用及时性稍有延迟,验证码类型的短信推荐使用单条调用的方式</span></span><br><span class="line">		request.setPhoneNumbers(phoneNumbers);</span><br><span class="line">		<span class="comment">// 必填:短信签名-可在短信控制台中找到</span></span><br><span class="line">		request.setSignName(<span class="string">&quot;传智健康&quot;</span>);</span><br><span class="line">		<span class="comment">// 必填:短信模板-可在短信控制台中找到</span></span><br><span class="line">		request.setTemplateCode(templateCode);</span><br><span class="line">		<span class="comment">// 可选:模板中的变量替换JSON串,如模板内容为&quot;亲爱的$&#123;name&#125;,您的验证码为$&#123;code&#125;&quot;时,此处的值为</span></span><br><span class="line">		<span class="comment">// 友情提示:如果JSON中需要带换行符,请参照标准的JSON协议对换行符的要求,比如短信内容中包含\r\n的情况在JSON中需要表示成\\r\\n,否则会导致JSON在服务端解析失败</span></span><br><span class="line">		request.setTemplateParam(<span class="string">&quot;&#123;\&quot;code\&quot;:\&quot;&quot;</span>+param+<span class="string">&quot;\&quot;&#125;&quot;</span>);</span><br><span class="line">		<span class="comment">// 可选-上行短信扩展码(扩展码字段控制在7位或以下，无特殊需求用户请忽略此字段)</span></span><br><span class="line">		<span class="comment">// request.setSmsUpExtendCode(&quot;90997&quot;);</span></span><br><span class="line">		<span class="comment">// 可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者</span></span><br><span class="line">		<span class="comment">// request.setOutId(&quot;yourOutId&quot;);</span></span><br><span class="line">		<span class="comment">// 请求失败这里会抛ClientException异常</span></span><br><span class="line">		SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request);</span><br><span class="line">		<span class="keyword">if</span> (sendSmsResponse.getCode() != <span class="keyword">null</span> &amp;&amp; sendSmsResponse.getCode().equals(<span class="string">&quot;OK&quot;</span>)) &#123;</span><br><span class="line">			<span class="comment">// 请求成功</span></span><br><span class="line">			System.out.println(<span class="string">&quot;请求成功&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h3><h4 id="依赖-1"><a href="#依赖-1" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.tencentcloudapi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tencentcloud-sdk-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.qcloudsms<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qcloudsms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="工具类-1"><a href="#工具类-1" class="headerlink" title="工具类"></a>工具类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.common.Credential;</span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.common.exception.TencentCloudSDKException;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导入可选配置类</span></span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.common.profile.ClientProfile;</span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.common.profile.HttpProfile;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入对应SMS模块的client</span></span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.sms.v20190711.SmsClient;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入要请求接口对应的request response类</span></span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.sms.v20190711.models.SendSmsRequest;</span><br><span class="line"><span class="keyword">import</span> com.tencentcloudapi.sms.v20190711.models.SendSmsResponse;</span><br><span class="line"><span class="keyword">import</span> wang.yinggang.constant.TSSMSConstants;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Tencent Cloud Sms Sendsms</span></span><br><span class="line"><span class="comment"> * https://cloud.tencent.com/document/product/382/38778</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SmSUtils</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sendSms</span><span class="params">(String valcode,String[] phoneNumbers )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">/* 必要步骤：</span></span><br><span class="line"><span class="comment">             * 实例化一个认证对象，入参需要传入腾讯云账户密钥对secretId，secretKey。</span></span><br><span class="line"><span class="comment">             * 这里采用的是从环境变量读取的方式，需要在环境变量中先设置这两个值。</span></span><br><span class="line"><span class="comment">             * 你也可以直接在代码中写死密钥对，但是小心不要将代码复制、上传或者分享给他人，</span></span><br><span class="line"><span class="comment">             * 以免泄露密钥对危及你的财产安全。</span></span><br><span class="line"><span class="comment">             * CAM密匙查询: https://console.cloud.tencent.com/cam/capi*/</span></span><br><span class="line">            Credential cred = <span class="keyword">new</span> Credential(TSSMSConstants.SMSSECREID, TSSMSConstants.SMSSECREKEY);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 实例化一个http选项，可选，没有特殊需求可以跳过</span></span><br><span class="line">            HttpProfile httpProfile = <span class="keyword">new</span> HttpProfile();</span><br><span class="line">            <span class="comment">// 设置代理</span></span><br><span class="line"><span class="comment">//            httpProfile.setProxyHost(&quot;host&quot;);</span></span><br><span class="line"><span class="comment">//            httpProfile.setProxyPort(port);</span></span><br><span class="line">            <span class="comment">/* SDK默认使用POST方法。</span></span><br><span class="line"><span class="comment">             * 如果你一定要使用GET方法，可以在这里设置。GET方法无法处理一些较大的请求 */</span></span><br><span class="line">            httpProfile.setReqMethod(<span class="string">&quot;POST&quot;</span>);</span><br><span class="line">            <span class="comment">/* SDK有默认的超时时间，非必要请不要进行调整</span></span><br><span class="line"><span class="comment">             * 如有需要请在代码中查阅以获取最新的默认值 */</span></span><br><span class="line">            httpProfile.setConnTimeout(<span class="number">60</span>);</span><br><span class="line">            <span class="comment">/* SDK会自动指定域名。通常是不需要特地指定域名的，但是如果你访问的是金融区的服务</span></span><br><span class="line"><span class="comment">             * 则必须手动指定域名，例如sms的上海金融区域名： sms.ap-shanghai-fsi.tencentcloudapi.com */</span></span><br><span class="line">            httpProfile.setEndpoint(<span class="string">&quot;sms.tencentcloudapi.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 非必要步骤:</span></span><br><span class="line"><span class="comment">             * 实例化一个客户端配置对象，可以指定超时时间等配置 */</span></span><br><span class="line">            ClientProfile clientProfile = <span class="keyword">new</span> ClientProfile();</span><br><span class="line">            <span class="comment">/* SDK默认用TC3-HMAC-SHA256进行签名</span></span><br><span class="line"><span class="comment">             * 非必要请不要修改这个字段 */</span></span><br><span class="line">            clientProfile.setSignMethod(<span class="string">&quot;HmacSHA256&quot;</span>);</span><br><span class="line">            clientProfile.setHttpProfile(httpProfile);</span><br><span class="line">            <span class="comment">/* 实例化要请求产品(以sms为例)的client对象</span></span><br><span class="line"><span class="comment">             * 第二个参数是地域信息，可以直接填写字符串ap-guangzhou，或者引用预设的常量 */</span></span><br><span class="line">            SmsClient client = <span class="keyword">new</span> SmsClient(cred, <span class="string">&quot;ap-guangzhou&quot;</span>, clientProfile);</span><br><span class="line">            <span class="comment">/* 实例化一个请求对象，根据调用的接口和实际情况，可以进一步设置请求参数</span></span><br><span class="line"><span class="comment">             * 你可以直接查询SDK源码确定接口有哪些属性可以设置</span></span><br><span class="line"><span class="comment">             * 属性可能是基本类型，也可能引用了另一个数据结构</span></span><br><span class="line"><span class="comment">             * 推荐使用IDE进行开发，可以方便的跳转查阅各个接口和数据结构的文档说明 */</span></span><br><span class="line">            SendSmsRequest req = <span class="keyword">new</span> SendSmsRequest();</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 填充请求参数,这里request对象的成员变量即对应接口的入参</span></span><br><span class="line"><span class="comment">             * 你可以通过官网接口文档或跳转到request对象的定义处查看请求参数的定义</span></span><br><span class="line"><span class="comment">             * 基本类型的设置:</span></span><br><span class="line"><span class="comment">             * 帮助链接：</span></span><br><span class="line"><span class="comment">             * 短信控制台: https://console.cloud.tencent.com/sms/smslist</span></span><br><span class="line"><span class="comment">             * sms helper: https://cloud.tencent.com/document/product/382/3773 */</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 短信应用ID: 短信SdkAppid在 [短信控制台] 添加应用后生成的实际SdkAppid，示例如1400006666 */</span></span><br><span class="line">            String appid = TSSMSConstants.SMSAPPID;</span><br><span class="line">            req.setSmsSdkAppid(appid);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 短信签名内容: 使用 UTF-8 编码，必须填写已审核通过的签名，签名信息可登录 [短信控制台] 查看 */</span></span><br><span class="line">            String sign = TSSMSConstants.SMSSIGN;</span><br><span class="line">            req.setSign(sign);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 国际/港澳台短信 senderid: 国内短信填空，默认未开通，如需开通请联系 [sms helper] */</span></span><br><span class="line"><span class="comment">//            String senderid = &quot;xxx&quot;;</span></span><br><span class="line"><span class="comment">//            req.setSenderId(senderid);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 用户的 session 内容: 可以携带用户侧 ID 等上下文信息，server 会原样返回 */</span></span><br><span class="line"><span class="comment">//            String session = &quot;xxx&quot;;</span></span><br><span class="line"><span class="comment">//            req.setSessionContext(session);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 短信码号扩展号: 默认未开通，如需开通请联系 [sms helper] */</span></span><br><span class="line"><span class="comment">//            String extendcode = &quot;xxx&quot;;</span></span><br><span class="line"><span class="comment">//            req.setExtendCode(extendcode);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 模板 ID: 必须填写已审核通过的模板 ID。模板ID可登录 [短信控制台] 查看 */</span></span><br><span class="line">            String templateID = TSSMSConstants.SMSTEMPLATEID;</span><br><span class="line">            req.setTemplateID(templateID);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 下发手机号码，采用 e.164 标准，+[国家或地区码][手机号]</span></span><br><span class="line"><span class="comment">             * 示例如：+8613711112222， 其中前面有一个+号 ，86为国家码，13711112222为手机号，最多不要超过200个手机号*/</span></span><br><span class="line"><span class="comment">//            String[] phoneNumbers = &#123;&quot;+8621212313123&quot;, &quot;+8612345678902&quot;, &quot;+8612345678903&quot;&#125;;</span></span><br><span class="line">            req.setPhoneNumberSet(phoneNumbers);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 模板参数: 若无模板参数，则设置为空*/</span></span><br><span class="line">            String[] templateParams = &#123;valcode&#125;;</span><br><span class="line">            req.setTemplateParamSet(templateParams);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 通过 client 对象调用 SendSms 方法发起请求。注意请求方法名与请求对象是对应的</span></span><br><span class="line"><span class="comment">             * 返回的 res 是一个 SendSmsResponse 类的实例，与请求对象对应 */</span></span><br><span class="line">            SendSmsResponse res = client.SendSms(req);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 输出json格式的字符串回包</span></span><br><span class="line">            System.out.println(SendSmsResponse.toJsonString(res));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 也可以取出单个值，你可以通过官网接口文档或跳转到response对象的定义处查看返回字段的定义</span></span><br><span class="line">            <span class="comment">//System.out.println(res.getRequestId());</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (TencentCloudSDKException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="常量类"><a href="#常量类" class="headerlink" title="常量类"></a>常量类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.constant;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 常量类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXSMSConstants</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 短信 appid</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SMSAPPID=<span class="string">&quot;1400438227&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 腾讯云账户密钥对: secretId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SMSSECREID=<span class="string">&quot;AKIDkETgdJXRr3zf8ghzlIZaOq1vZx5w2v61g&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 腾讯云账户密钥对: secretKey</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SMSSECREKEY=<span class="string">&quot;oLbbKn45qKkv30cxKRH3aFjxxiFbc0f6q&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * SmsSdkAppid</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SMSSDKAPPID=<span class="string">&quot;1400438227&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * sms sign   : sms签名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SMSSIGN=<span class="string">&quot;王迎港个人学习&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * sms 短信模板id:</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SMSTEMPLATEID=<span class="string">&quot;746688&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> wang.yinggang.utils.TXSmsUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SendSms</span><span class="params">()</span></span>&#123;</span><br><span class="line">        TXSmsUtils.sendSms(<span class="string">&quot;1234&quot;</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;86***********&quot;</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3-验证码前端代码"><a href="#3-验证码前端代码" class="headerlink" title="3 验证码前端代码"></a>3 验证码前端代码</h2><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;orderInfo.validateCode&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input-clear&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="sendValidateCode"><a href="#sendValidateCode" class="headerlink" title="sendValidateCode"></a>sendValidateCode</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//发送验证码</span></span><br><span class="line"><span class="function"><span class="title">sendValidateCode</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> telephone = <span class="built_in">this</span>.orderInfo.telephone;</span><br><span class="line">    <span class="keyword">if</span> (!checkTelephone(telephone))&#123;</span><br><span class="line">        <span class="built_in">this</span>.$message.error(<span class="string">&quot;请输入正确的手机号&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    validateCodeButton = $(<span class="string">&quot;#validateCodeButton&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    clock = <span class="built_in">window</span>.setInterval(doLoop,<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    axios.post(<span class="string">&quot;/validateCode/send4Order.do?telephone=&quot;</span>+telephone).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!res.data.flag)&#123;</span><br><span class="line">            <span class="built_in">this</span>.$message.error(res.data.message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>





<h3 id="手机号校验checkTelephone"><a href="#手机号校验checkTelephone" class="headerlink" title="手机号校验checkTelephone"></a>手机号校验checkTelephone</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkTelephone</span>(<span class="params">telephone</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reg=<span class="regexp">/^[1][3,4,5,7,8][0-9]&#123;9&#125;$/</span>;</span><br><span class="line">    <span class="keyword">if</span> (!reg.test(telephone)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="定时器doLoop"><a href="#定时器doLoop" class="headerlink" title="定时器doLoop"></a>定时器doLoop</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> clock = <span class="string">&#x27;&#x27;</span>;<span class="comment">//定时器对象，用于页面30秒倒计时效果</span></span><br><span class="line"><span class="keyword">var</span> nums = <span class="number">30</span>;</span><br><span class="line"><span class="keyword">var</span> validateCodeButton;</span><br><span class="line"><span class="comment">//基于定时器实现30秒倒计时效果</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doLoop</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    validateCodeButton.disabled = <span class="literal">true</span>;<span class="comment">//将按钮置为不可点击</span></span><br><span class="line">    nums--;</span><br><span class="line">    <span class="keyword">if</span> (nums &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        validateCodeButton.value = nums + <span class="string">&#x27;秒后重新获取&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(clock); <span class="comment">//清除js定时器</span></span><br><span class="line">        validateCodeButton.disabled = <span class="literal">false</span>;</span><br><span class="line">        validateCodeButton.value = <span class="string">&#x27;重新获取验证码&#x27;</span>;</span><br><span class="line">        nums = <span class="number">30</span>; <span class="comment">//重置时间</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 验证码</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/validateCode&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidateCodeController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JedisPool jedisPool;</span><br><span class="line">    <span class="comment">//体检预约发送验证码</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/send4Order&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">send4Order</span><span class="params">(String telephone)</span></span>&#123;</span><br><span class="line">        <span class="comment">//工具类获取四位验证码</span></span><br><span class="line">        String validateCode = ValidateCodeUtils.generateValidateCode(<span class="number">4</span>).toString();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//发送短信</span></span><br><span class="line">            TXSmsUtils.sendSms(validateCode, <span class="keyword">new</span> String[]&#123;telephone&#125;);</span><br><span class="line">            <span class="comment">//发送验证码 并且保存到redis</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">false</span>, MessageConstant.SEND_VALIDATECODE_FAIL);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//key手机号加上字符串标识作为key</span></span><br><span class="line">        jedisPool.getResource().setex(telephone+<span class="string">&quot;&quot;</span>+RedisMessageConstant.SENDTYPE_ORDER,<span class="number">300</span>,validateCode);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>, MessageConstant.SEND_VALIDATECODE_SUCCESS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>spring xml</title>
    <url>/2019/10/03/Spring/01-spring%E6%95%B4%E5%90%88mybatis-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5(xml%E6%96%B9%E5%BC%8F)/</url>
    <content><![CDATA[<h4 id="1–创建实体类Account-Account-java"><a href="#1–创建实体类Account-Account-java" class="headerlink" title="1–创建实体类Account(Account.java)"></a>1–创建实体类Account(Account.java)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yg.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="2–创建业务层接口-AccountDao-java"><a href="#2–创建业务层接口-AccountDao-java" class="headerlink" title="2–创建业务层接口(AccountDao.java)"></a>2–创建业务层接口(AccountDao.java)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yg.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yg.domain.Account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Account <span class="title">findById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3–创建业务层接口（AccoutService）"><a href="#3–创建业务层接口（AccoutService）" class="headerlink" title="3–创建业务层接口（AccoutService）"></a>3–创建业务层接口（AccoutService）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yg.service;</span><br><span class="line"><span class="keyword">import</span> com.yg.domain.Account;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Account <span class="title">findById</span><span class="params">(<span class="keyword">int</span> i)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="4–创建业务层实现类（AccountServiceImpl-java）"><a href="#4–创建业务层实现类（AccountServiceImpl-java）" class="headerlink" title="4–创建业务层实现类（AccountServiceImpl.java）"></a>4–创建业务层实现类（AccountServiceImpl.java）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yg.service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yg.dao.AccountDao;</span><br><span class="line"><span class="keyword">import</span> com.yg.domain.Account;</span><br><span class="line"><span class="keyword">import</span> com.yg.service.AccountService;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> AccountDao <span class="title">getAccountDao</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccountDao</span><span class="params">(AccountDao accountDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.accountDao = accountDao;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.save(account);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        accountDao.delete(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.update(account);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findById(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5–创建mybatis配置文件-sqlMapConfig-xml"><a href="#5–创建mybatis配置文件-sqlMapConfig-xml" class="headerlink" title="5–创建mybatis配置文件(sqlMapConfig.xml)"></a>5–创建mybatis配置文件(sqlMapConfig.xml)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">        PUBLIC <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span><br><span class="line">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;properties resource=&quot;jdbc.properties&quot;&gt;&lt;/properties&gt;</span><br><span class="line">    &lt;typeAliases&gt;</span><br><span class="line">        &lt;<span class="keyword">package</span> name=<span class="string">&quot;com.yg.domain&quot;</span>/&gt;</span><br><span class="line">    &lt;/typeAliases&gt;</span><br><span class="line"></span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- com.github.pagehelper.PageInterceptor --&gt;</span><br><span class="line">        &lt;plugin interceptor=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;helperDialect&quot;</span> value=<span class="string">&quot;mysql&quot;</span> /&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;reasonable&quot;</span> value=<span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line"></span><br><span class="line">    &lt;environments <span class="keyword">default</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span><br><span class="line">        &lt;environment id=<span class="string">&quot;mysql&quot;</span>&gt;</span><br><span class="line">            &lt;transactionManager type=&quot;JDBC&quot;&gt;&lt;/transactionManager&gt;</span><br><span class="line">            &lt;dataSource type=<span class="string">&quot;POOLED&quot;</span>&gt;</span><br><span class="line">                &lt;property name=&quot;driver&quot; value=&quot;$&#123;jdbc.driver&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">                &lt;property name=&quot;url&quot; value=&quot;$&#123;jdbc.url&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">                &lt;property name=&quot;username&quot; value=&quot;$&#123;jdbc.username&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">                &lt;property name=&quot;password&quot; value=&quot;$&#123;jdbc.password&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">            &lt;/dataSource&gt;</span><br><span class="line">        &lt;/environment&gt;</span><br><span class="line">    &lt;/environments&gt;</span><br><span class="line"></span><br><span class="line">    &lt;mappers&gt;</span><br><span class="line">        &lt;<span class="keyword">package</span> name=<span class="string">&quot;com.yg.dao&quot;</span>/&gt;</span><br><span class="line">    &lt;/mappers&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="6—创建映射文件（accountDao-xml"><a href="#6—创建映射文件（accountDao-xml" class="headerlink" title="6—创建映射文件（accountDao.xml)"></a>6—创建映射文件（accountDao.xml)</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.yg.dao.AccountDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;account&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        select * from account where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line">        select * from account</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;save&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line">        insert into account(name,money) values(#&#123;name&#125;,#&#123;money&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete from account where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line">        update account set name=#&#123;name&#125;,money=#&#123;money&#125; where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="7–创建spring配置文件（applicationContext-xml）"><a href="#7–创建spring配置文件（applicationContext-xml）" class="headerlink" title="7–创建spring配置文件（applicationContext.xml）"></a>7–创建spring配置文件（applicationContext.xml）</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:*.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--&lt;bean id=&quot;accountDao&quot; class=&quot;com.yg.dao.AccountDao&quot;&gt;&lt;/bean&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    spring已经帮你弄好了accountDao--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.yg.service.Impl.AccountServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;accountDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;accountDao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.yg.domain&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.yg.dao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="8–创建jdbc连接配置文件-jdbc-properties"><a href="#8–创建jdbc连接配置文件-jdbc-properties" class="headerlink" title="8–创建jdbc连接配置文件(jdbc.properties)"></a>8–创建jdbc连接配置文件(jdbc.properties)</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://yinggang.wang/spring01?characterEncoding=utf8&amp;useSSL=false</span></span><br><span class="line"><span class="meta">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">123</span></span><br></pre></td></tr></table></figure>

<h4 id="9–spring坐标配置文件（pom-xml）"><a href="#9–spring坐标配置文件（pom-xml）" class="headerlink" title="9–spring坐标配置文件（pom.xml）"></a>9–spring坐标配置文件（pom.xml）</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springTest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Lombok--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring核心--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring集成Junit测试--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring集成Aspect切面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring 事物--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring连接数据库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据库连接池--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring集成mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="10–测试类（AccountServiceTest）"><a href="#10–测试类（AccountServiceTest）" class="headerlink" title="**10–测试类（AccountServiceTest）"></a>**10–测试类（AccountServiceTest）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">        AccountService accountService = (AccountService) context.getBean(<span class="string">&quot;accountService&quot;</span>);</span><br><span class="line">        accountService.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





]]></content>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>spring注解</title>
    <url>/2019/10/03/Spring/02-spring%E6%95%B4%E5%90%88mybatis-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5(%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F)/</url>
    <content><![CDATA[<h4 id="1–创建实体类Account-Account-java"><a href="#1–创建实体类Account-Account-java" class="headerlink" title="1–创建实体类Account(Account.java)"></a>1–创建实体类Account(Account.java)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="2–创建数据层接口-AccountDao-java"><a href="#2–创建数据层接口-AccountDao-java" class="headerlink" title="2–创建数据层接口(AccountDao.java)"></a>2–创建数据层接口(AccountDao.java)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from account&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from account where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function">Account <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into account(name,money) values(#&#123;name&#125;,#&#123;money&#125;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from account where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update(&quot;update account set name=#&#123;name&#125;,money=#&#123;money&#125; where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3–创建业务层接口（AccoutService）"><a href="#3–创建业务层接口（AccoutService）" class="headerlink" title="3–创建业务层接口（AccoutService）"></a>3–创建业务层接口（AccoutService）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Account <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="4–创建业务层实现类（AccountServiceImpl-java）"><a href="#4–创建业务层实现类（AccountServiceImpl-java）" class="headerlink" title="4–创建业务层实现类（AccountServiceImpl.java）"></a>4–创建业务层实现类（AccountServiceImpl.java）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    AccountDao accountDao;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.save(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        accountDao.delete(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.update(account);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5–创建mybatis配置文件-MybatisConfig-java"><a href="#5–创建mybatis配置文件-MybatisConfig-java" class="headerlink" title="5–创建mybatis配置文件(MybatisConfig.java)"></a>5–创建mybatis配置文件(MybatisConfig.java)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactoryBean <span class="title">sqlSessionFactoryBean</span><span class="params">(<span class="meta">@Autowired</span> DataSource dataSource)</span></span>&#123;</span><br><span class="line">        SqlSessionFactoryBean ssfb = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        ssfb.setTypeAliasesPackage(<span class="string">&quot;wang.yinggang.domain&quot;</span>);</span><br><span class="line">        ssfb.setDataSource(dataSource);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ssfb;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MapperScannerConfigurer <span class="title">mapperScannerConfigurer</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MapperScannerConfigurer msc = <span class="keyword">new</span> MapperScannerConfigurer();</span><br><span class="line">        msc.setBasePackage(<span class="string">&quot;wang.yinggang.dao&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> msc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="6—创建JDBC配置文件（JDBCConfig-java"><a href="#6—创建JDBC配置文件（JDBCConfig-java" class="headerlink" title="6—创建JDBC配置文件（JDBCConfig.java)"></a>6—创建JDBC配置文件（JDBCConfig.java)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.driver&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String driver;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;jdbc.password&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">dataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        DruidDataSource db = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">        db.setDriverClassName(driver);</span><br><span class="line">        db.setUrl(url);</span><br><span class="line">        db.setUsername(username);</span><br><span class="line">        db.setPassword(password);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> db;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="7–创建spring配置文件（SpringConfig-java）"><a href="#7–创建spring配置文件（SpringConfig-java）" class="headerlink" title="7–创建spring配置文件（SpringConfig.java）"></a>7–创建spring配置文件（SpringConfig.java）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;wang.yinggang&quot;)</span></span><br><span class="line"><span class="meta">@PropertySource(&quot;classpath:jdbc.properties&quot;)</span></span><br><span class="line"><span class="meta">@Import(&#123;JDBCConfig.class,MybatisConfig.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="8–创建jdbc连接配置文件-jdbc-properties"><a href="#8–创建jdbc连接配置文件-jdbc-properties" class="headerlink" title="8–创建jdbc连接配置文件(jdbc.properties)"></a>8–创建jdbc连接配置文件(jdbc.properties)</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://yinggang.wang/spring01?characterEncoding=utf8&amp;useSSL=false</span></span><br><span class="line"><span class="meta">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">***</span></span><br></pre></td></tr></table></figure>

<h4 id="9–spring坐标配置文件（pom-xml）"><a href="#9–spring坐标配置文件（pom-xml）" class="headerlink" title="9–spring坐标配置文件（pom.xml）"></a>9–spring坐标配置文件（pom.xml）</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springMybatis02<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Lombok--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring核心--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring集成Junit测试--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring集成Aspect切面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring 事物--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring连接数据库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据库连接池--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring集成mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="10–测试类（AccountServiceTest）"><a href="#10–测试类（AccountServiceTest）" class="headerlink" title="**10–测试类（AccountServiceTest）"></a>**10–测试类（AccountServiceTest）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(classes =SpringConfig.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Account&gt; list = accountService.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="comment">//Assert.assertEquals(3,list.size());</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findById</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Account ac = accountService.findById(<span class="number">2</span>);</span><br><span class="line">        Assert.assertEquals(<span class="string">&quot;lisi5&quot;</span>,ac.getName());</span><br><span class="line">        System.out.println(ac);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Account account = <span class="keyword">new</span> Account(<span class="keyword">null</span>,<span class="string">&quot;aaa&quot;</span>,<span class="number">10.98</span>);</span><br><span class="line">        accountService.save(account);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        accountService.delete(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Account account = <span class="keyword">new</span> Account(<span class="number">6</span>,<span class="string">&quot;giao&quot;</span>,<span class="number">9.99</span>);</span><br><span class="line">        accountService.update(account);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





]]></content>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>spring事务</title>
    <url>/2019/10/03/Spring/03-%E8%BD%AC%E9%92%B1%E6%A1%88%E4%BE%8B-%E4%BA%8B%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="转钱案例"><a href="#转钱案例" class="headerlink" title="转钱案例"></a>转钱案例</h1><h4 id="1–创建实体类Account-Account-java"><a href="#1–创建实体类Account-Account-java" class="headerlink" title="1–创建实体类Account(Account.java)"></a>1–创建实体类Account(Account.java)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="2–创建数据层接口-AccountDao-java"><a href="#2–创建数据层接口-AccountDao-java" class="headerlink" title="2–创建数据层接口(AccountDao.java)"></a>2–创建数据层接口(AccountDao.java)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Update(&quot;update account set money=money+#&#123;money&#125; where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateMoneyById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span>Integer id,<span class="meta">@Param(&quot;money&quot;)</span>Double money)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3–创建业务层接口（AccoutService）"><a href="#3–创建业务层接口（AccoutService）" class="headerlink" title="3–创建业务层接口（AccoutService）"></a>3–创建业务层接口（AccoutService）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">transfer</span><span class="params">(Integer from,Integer me,Double money)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="4–创建业务层实现类（AccountServiceImpl-java）"><a href="#4–创建业务层实现类（AccountServiceImpl-java）" class="headerlink" title="4–创建业务层实现类（AccountServiceImpl.java）"></a>4–创建业务层实现类（AccountServiceImpl.java）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(Integer from, Integer me, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            accountDao.updateMoneyById(from,-money);</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">            accountDao.updateMoneyById(me,money);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="5–创建Spring整合-jdbc-Mybatis-事务-配置文件-applicationContext-xml"><a href="#5–创建Spring整合-jdbc-Mybatis-事务-配置文件-applicationContext-xml" class="headerlink" title="5–创建Spring整合(jdbc/Mybatis/事务)配置文件(applicationContext.xml)"></a>5–创建Spring整合(jdbc/Mybatis/事务)配置文件(applicationContext.xml)</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;wang.yinggang&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--启动aop的注解，不开启spring不认可这些zhujie--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;wang.yinggang.domain&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;wang.yinggang.dao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="6–创建jdbc连接配置文件-jdbc-properties"><a href="#6–创建jdbc连接配置文件-jdbc-properties" class="headerlink" title="6–创建jdbc连接配置文件(jdbc.properties)"></a>6–创建jdbc连接配置文件(jdbc.properties)</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://yinggang.wang/spring01?characterEncoding=utf8&amp;useSSL=false</span></span><br><span class="line"><span class="meta">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">***</span></span><br></pre></td></tr></table></figure>

<h4 id="7–spring坐标配置文件（pom-xml）"><a href="#7–spring坐标配置文件（pom-xml）" class="headerlink" title="7–spring坐标配置文件（pom.xml）"></a>7–spring坐标配置文件（pom.xml）</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springMybatis02<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>6<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>6<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Lombok--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring核心--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring集成Junit测试--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring集成Aspect切面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring 事物--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring连接数据库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据库连接池--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring集成mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="8–测试类（AccountServiceTest）"><a href="#8–测试类（AccountServiceTest）" class="headerlink" title="8–测试类（AccountServiceTest）"></a>8–测试类（AccountServiceTest）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:applicationContext.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImplTest</span> <span class="keyword">extends</span> <span class="title">TestCase</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransfer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    accountService.transfer(<span class="number">1</span>,<span class="number">2</span>,<span class="number">10.00</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







]]></content>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>canal的使用</title>
    <url>/2019/11/04/cannal%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/cannal%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="canal"><a href="#canal" class="headerlink" title="canal"></a>canal</h1><h2 id="1-canal"><a href="#1-canal" class="headerlink" title="1. canal"></a>1. canal</h2><h3 id="1-1-canal简介"><a href="#1-1-canal简介" class="headerlink" title="1.1 canal简介"></a>1.1 canal简介</h3><p>canal可以用来<strong>监控数据库数据的变化</strong>，从而获得新增数据，或者修改的数据。</p>
<p>canal是应阿里巴巴存在杭州和美国的双机房部署，存在跨机房同步的业务需求而提出的。</p>
<p>阿里系公司开始逐步的尝试基于<strong>数据库的日志解析</strong>，获取增量变更进行同步，由此衍生出了增量订阅&amp;消费的业务。</p>
<p><img src="images/1559118194213.png" alt="1559118194213"></p>
<p><strong>原理：</strong></p>
<ol>
<li>canal模拟mysql slave的交互协议，伪装自己为mysql slave，向mysql master发送dump协议</li>
<li>mysql master收到dump请求，开始推送binary log给slave(也就是canal)</li>
<li>canal解析binary log对象(原始为byte流)</li>
</ol>
<h3 id="1-2-环境部署"><a href="#1-2-环境部署" class="headerlink" title="1.2 环境部署"></a>1.2 环境部署</h3><h4 id="1-2-1-mysql开启binlog模式"><a href="#1-2-1-mysql开启binlog模式" class="headerlink" title="1.2.1 mysql开启binlog模式"></a>1.2.1 mysql开启binlog模式</h4><p>（1）查看当前mysql是否开启binlog模式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &#39;%log_bin%&#39;</span><br></pre></td></tr></table></figure>

<p>如果log_bin的值为OFF是未开启，为ON是已开启。</p>
<p>（2）修改/etc/my.cnf 需要开启binlog模式。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog-format=ROW</span><br><span class="line">server_id=1</span><br></pre></td></tr></table></figure>

<p>修改完成之后，重启mysqld的服务。</p>
<p>  (3) 进入mysql</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql -h localhost -u root -p</span><br></pre></td></tr></table></figure>

<p>（4）创建账号 用于测试使用</p>
<p>使用root账号创建用户并授予权限</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> canal@<span class="string">&#x27;%&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">by</span> <span class="string">&#x27;canal&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span>, <span class="keyword">REPLICATION</span> <span class="keyword">CLIENT</span>,SUPER <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">&#x27;canal&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure>

<h4 id="1-2-2-canal服务端安装配置"><a href="#1-2-2-canal服务端安装配置" class="headerlink" title="1.2.2 canal服务端安装配置"></a>1.2.2 canal服务端安装配置</h4><p>（1）下载地址canal</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;alibaba&#x2F;canal&#x2F;releases&#x2F;tag&#x2F;canal-1.0.24</span><br></pre></td></tr></table></figure>

<p><img src="images/1559118907783.png" alt="1559118907783"></p>
<p>（2）下载之后 上传到linux系统中，解压缩到指定的目录/usr/local/canal</p>
<p>解压缩之后的目录结构如下：</p>
<p><img src="images/1559119163725.png" alt="1559119163725"></p>
<p>（3）修改 exmaple下的实例配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi conf/example/instance.properties</span><br></pre></td></tr></table></figure>

<p><img src="images/6-7.png"></p>
<p>修改如图所示的几个参数。</p>
<p>（3）指定读取位置  </p>
<p>进入mysql中执行下面语句查看binlog所在位置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show master status;</span></span><br><span class="line">显示如下:</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000001 |      120 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>如果file中binlog文件不为 mysql-bin.000001 可以重置mysql</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; reset master;</span><br></pre></td></tr></table></figure>

<p>查看canal配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /usr/local/canal/conf/example/meta.dat</span><br></pre></td></tr></table></figure>

<p>找到对应的binlog信息更改一致即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot;journalName&quot;:&quot;mysql-bin.000001&quot;,&quot;position&quot;:120,&quot;</span><br></pre></td></tr></table></figure>

<p>注意：如果不一致，可能导致以下错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2019-06-17 19:35:20.918 [New I&#x2F;O server worker #1-2] ERROR c.a.otter.canal.server.netty.handler.SessionHandler - something goes wrong with channel:[id: 0x7f2e9be3, &#x2F;192.168.200.56:52225 &#x3D;&gt; &#x2F;192.168.200.128:11111], exception&#x3D;java.io.IOException: Connection reset by peer</span><br></pre></td></tr></table></figure>

<p>（4）启动服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost canal]# ./bin/startup.sh</span><br></pre></td></tr></table></figure>

<p>（5）查看日志：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;usr&#x2F;local&#x2F;canal&#x2F;logs&#x2F;canal&#x2F;canal.log</span><br></pre></td></tr></table></figure>

<p><img src="images/1559119507451.png" alt="1559119507451"></p>
<p>这样就表示启动成功了。</p>
]]></content>
      <tags>
        <tag>canal</tag>
      </tags>
  </entry>
  <entry>
    <title>FastDFS</title>
    <url>/2019/11/04/fastDFS/%E7%AC%AC2%E7%AB%A0.%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/</url>
    <content><![CDATA[<h3 id="1-FastDFS简介"><a href="#1-FastDFS简介" class="headerlink" title="1 FastDFS简介"></a>1 FastDFS简介</h3><h4 id="1-1-FastDFS体系结构"><a href="#1-1-FastDFS体系结构" class="headerlink" title="1.1 FastDFS体系结构"></a>1.1 FastDFS体系结构</h4><p>FastDFS是一个开源的轻量级<a href="https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/1250388">分布式文件系统</a>，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。</p>
<p>FastDFS为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标，使用FastDFS很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。</p>
<p>FastDFS 架构包括 Tracker server 和 Storage server。客户端请求 Tracker server 进行文件上传、下载，通过Tracker server 调度最终由 Storage server 完成文件上传和下载。</p>
<p>Tracker server 作用是负载均衡和调度，通过 Tracker server 在文件上传时可以根据一些策略找到Storage server 提供文件上传服务。可以将 tracker 称为追踪服务器或调度服务器。Storage server 作用是文件存储，客户端上传的文件最终存储在 Storage 服务器上，Storageserver 没有实现自己的文件系统而是利用操作系统的文件系统来管理文件。可以将storage称为存储服务器。</p>
<p><strong>Tracker 作用1：</strong></p>
<p><strong>接收用户的请求返回响应</strong></p>
<p><strong>作用2:</strong></p>
<p> <strong>手机storager中的相关信息 根据这些信息 判断用户上传的文件 存储到哪一个storager中</strong></p>
<p><strong>storage 作用：</strong></p>
<p><strong>线性扩容的方式进行文件存储</strong></p>
<p><img src="/2019/11/04/fastDFS/%E7%AC%AC2%E7%AB%A0.%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/image%5C1559117928459.png" alt="1559117928459"></p>
<h4 id="1-2-上传流程"><a href="#1-2-上传流程" class="headerlink" title="1.2 上传流程"></a>1.2 上传流程</h4><p><img src="/2019/11/04/fastDFS/%E7%AC%AC2%E7%AB%A0.%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/image%5C1559117994668.png" alt="1559117994668"></p>
<p>客户端<strong>上传文件后</strong>存储服务器将文件 ID 返回给客户端，此文件 ID 用于以后访问该文件的索引信息。文件索引信息包括：组名，虚拟磁盘路径，数据两级目录，文件名。</p>
<p><img src="/2019/11/04/fastDFS/%E7%AC%AC2%E7%AB%A0.%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/image%5C1559118013272.png" alt="1559118013272"></p>
<p><strong>组名</strong>：文件上传后所在的 storage 组名称，在文件上传成功后有storage 服务器返回，需要客户端自行<strong>保存</strong>。</p>
<p><strong>虚拟磁盘路径</strong>：storage 配置的虚拟路径，与磁盘选项store_path*对应。如果配置了</p>
<p>store_path0 则是 M00，如果配置了 store_path1 则是 M01，以此类推。</p>
<p><strong>数据两级目录</strong>：storage 服务器在每个虚拟磁盘路径下创建的两级目录，用于存储数据</p>
<p>文件。</p>
<p><strong>文件名</strong>：与文件上传时不同。是由存储服务器根据特定信息生成，文件名包含：源存储</p>
<p>服务器 IP 地址、文件创建时间戳、文件大小、随机数和文件拓展名等信息。</p>
<h3 id="2-FastDFS搭建"><a href="#2-FastDFS搭建" class="headerlink" title="2 FastDFS搭建"></a>2 FastDFS搭建</h3><p>我们使用Docker搭建FastDFS的开发环境</p>
<p>拉取镜像</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">docker</span> <span class="string">pull morunchang/fastdfs</span></span><br></pre></td></tr></table></figure>

<p>运行tracker</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">docker</span> <span class="string">run -d --name tracker --net=host morunchang/fastdfs sh tracker.sh</span></span><br></pre></td></tr></table></figure>

<p>运行storage</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">docker</span> <span class="string">run -d --name storage --net=host -e TRACKER_IP=&lt;your tracker server address&gt;:22122 -e GROUP_NAME=&lt;group name&gt; morunchang/fastdfs sh storage.sh</span></span><br></pre></td></tr></table></figure>

<ul>
<li>使用的网络模式是–net=host, <your tracker server address> 替换为你机器的Ip即可  </your></li>
<li><group name> 是组名，即storage的组  </group></li>
<li>如果想要增加新的storage服务器，再次运行该命令，注意更换 新组名</li>
</ul>
<p>（4）修改nginx的配置  </p>
<p>进入storage的容器内部，修改nginx.conf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it storage  &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>

<p>进入后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;data&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</span><br></pre></td></tr></table></figure>

<p>添加以下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location &#x2F;group1&#x2F;M00 &#123;</span><br><span class="line">   proxy_next_upstream http_502 http_504 error timeout invalid_header;</span><br><span class="line">     proxy_cache http-cache;</span><br><span class="line">     proxy_cache_valid  200 304 12h;</span><br><span class="line">     proxy_cache_key $uri$is_args$args;</span><br><span class="line">     proxy_pass http:&#x2F;&#x2F;fdfs_group1;</span><br><span class="line">     expires 30d;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>（5）退出容器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure>

<p>（6）重启storage容器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker restart storage</span><br></pre></td></tr></table></figure>







<h3 id="3-文件存储微服务"><a href="#3-文件存储微服务" class="headerlink" title="3 文件存储微服务"></a>3 文件存储微服务</h3><p>创建文件管理微服务yigou_service_file，该工程主要用于实现文件上传以及文件删除等功能。</p>
<p><img src="/2019/11/04/fastDFS/%E7%AC%AC2%E7%AB%A0.%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/image%5Cimage-20201205185821505.png"></p>
<p>（1）修改pom.xml，引入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.oschina.zcx7878<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs-client-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.27.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yigou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>yigou_common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>（2）在resources文件夹下创建fasfDFS的配置文件<strong>fdfs_client.conf</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">connect_timeout &#x3D; 60 #连接超时时间</span><br><span class="line">network_timeout &#x3D; 60#通信超时时间</span><br><span class="line">charset &#x3D; UTF-8</span><br><span class="line">http.tracker_http_port &#x3D; 8080 #tracker 的端口号</span><br><span class="line">tracker_server &#x3D; 192.168.200.128:22122 #连接地址信息</span><br></pre></td></tr></table></figure>

<p>connect_timeout：连接超时时间，单位为秒。</p>
<p>network_timeout：通信超时时间，单位为秒。发送或接收数据时。假设在超时时间后还不能发送或接收数据，则本次网络通信失败</p>
<p>charset： 字符集</p>
<p>http.tracker_http_port  ：.tracker的http端口</p>
<p>tracker_server： tracker服务器IP和端口设置</p>
<p>（3）在resources文件夹下创建application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">multipart:</span></span><br><span class="line">      <span class="attr">max-file-size:</span> <span class="string">10MB</span></span><br><span class="line">      <span class="attr">max-request-size:</span> <span class="string">10MB</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9008</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:6868/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>max-file-size是单个文件大小，</p>
<p>max-request-size是设置总上传的数据大小</p>
<p>（4）创建com.yigou.file包，创建启动类FileApplication</p>
<p>@EnableEurekaClient      Enable的客户端</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(FileApplication.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-文件上传"><a href="#4-文件上传" class="headerlink" title="4 文件上传"></a>4 文件上传</h3><h4 id="4-1-文件信息封装"><a href="#4-1-文件信息封装" class="headerlink" title="4.1 文件信息封装"></a>4.1 文件信息封装</h4><p>文件上传一般都有文件的名字、文件的内容、文件的扩展名、文件的md5值、文件的作者等相关属性，我们可以创建一个对象封装这些属性，代码如下：</p>
<p>创建com.yigou.file.pojo.FastDFSFile</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastDFSFile</span> </span>&#123;</span><br><span class="line">	<span class="comment">//文件名字</span></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="comment">//文件内容</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">byte</span>[] content;</span><br><span class="line">	<span class="comment">//文件扩展名</span></span><br><span class="line">	<span class="keyword">private</span> String ext;</span><br><span class="line">	<span class="comment">//文件MD5摘要值</span></span><br><span class="line">	<span class="keyword">private</span> String md5;</span><br><span class="line">	<span class="comment">//文件创建作者</span></span><br><span class="line">	<span class="keyword">private</span> String author;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">FastDFSFile</span><span class="params">(String name, <span class="keyword">byte</span>[] content, String ext, String height,</span></span></span><br><span class="line"><span class="function"><span class="params">					   String width, String author)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.content = content;</span><br><span class="line">		<span class="keyword">this</span>.ext = ext;</span><br><span class="line">		<span class="keyword">this</span>.author = author;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">FastDFSFile</span><span class="params">(String name, <span class="keyword">byte</span>[] content, String ext)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.content = content;</span><br><span class="line">		<span class="keyword">this</span>.ext = ext;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// getter and setter ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-2-文件操作"><a href="#4-2-文件操作" class="headerlink" title="4.2 文件操作"></a>4.2 文件操作</h4><p>创建FastDFSClient类,放在com.yigou.file.util下在该类中实现FastDFS信息获取以及文件的相关操作，</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastDFSClient</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> org.slf4j.Logger logger = LoggerFactory.getLogger(FastDFSClient.class);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * 初始化加载FastDFS的TrackerServer配置</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">static</span> &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			String filePath = <span class="keyword">new</span> ClassPathResource(<span class="string">&quot;fdfs_client.conf&quot;</span>).getFile().getAbsolutePath();</span><br><span class="line">			ClientGlobal.init(filePath);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			logger.error(<span class="string">&quot;FastDFS Client Init Fail!&quot;</span>,e);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * 文件上传</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String[] upload(FastDFSFile file) &#123;</span><br><span class="line">		<span class="comment">//获取文件的作者</span></span><br><span class="line">		NameValuePair[] meta_list = <span class="keyword">new</span> NameValuePair[<span class="number">1</span>];</span><br><span class="line">		meta_list[<span class="number">0</span>] = <span class="keyword">new</span> NameValuePair(<span class="string">&quot;author&quot;</span>, file.getAuthor());</span><br><span class="line"></span><br><span class="line">		<span class="comment">//接收返回数据</span></span><br><span class="line">		String[] uploadResults = <span class="keyword">null</span>;</span><br><span class="line">		StorageClient storageClient=<span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">//创建StorageClient客户端对象</span></span><br><span class="line">			storageClient = getTrackerClient();</span><br><span class="line"></span><br><span class="line">			<span class="comment">/***</span></span><br><span class="line"><span class="comment">			 * 文件上传</span></span><br><span class="line"><span class="comment">			 * 1)文件字节数组</span></span><br><span class="line"><span class="comment">			 * 2)文件扩展名</span></span><br><span class="line"><span class="comment">			 * 3)文件作者</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line">			uploadResults = storageClient.upload_file(file.getContent(), file.getExt(), meta_list);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			logger.error(<span class="string">&quot;Exception when uploadind the file:&quot;</span> + file.getName(), e);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (uploadResults == <span class="keyword">null</span> &amp;&amp; storageClient!=<span class="keyword">null</span>) &#123;</span><br><span class="line">			logger.error(<span class="string">&quot;upload file fail, error code:&quot;</span> + storageClient.getErrorCode());</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//获取组名</span></span><br><span class="line">		String groupName = uploadResults[<span class="number">0</span>];</span><br><span class="line">		<span class="comment">//获取文件存储路径</span></span><br><span class="line">		String remoteFileName = uploadResults[<span class="number">1</span>];</span><br><span class="line">		<span class="keyword">return</span> uploadResults;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * 获取文件信息</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> groupName:组名</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> remoteFileName：文件存储完整名</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> FileInfo <span class="title">getFile</span><span class="params">(String groupName, String remoteFileName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			StorageClient storageClient = getTrackerClient();</span><br><span class="line">			<span class="keyword">return</span> storageClient.get_file_info(groupName, remoteFileName);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			logger.error(<span class="string">&quot;Exception: Get File from Fast DFS failed&quot;</span>, e);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * 文件下载</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> groupName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> remoteFileName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InputStream <span class="title">downFile</span><span class="params">(String groupName, String remoteFileName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">//创建StorageClient</span></span><br><span class="line">			StorageClient storageClient = getTrackerClient();</span><br><span class="line"></span><br><span class="line">			<span class="comment">//下载文件</span></span><br><span class="line">			<span class="keyword">byte</span>[] fileByte = storageClient.download_file(groupName, remoteFileName);</span><br><span class="line">			InputStream ins = <span class="keyword">new</span> ByteArrayInputStream(fileByte);</span><br><span class="line">			<span class="keyword">return</span> ins;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			logger.error(<span class="string">&quot;Exception: Get File from Fast DFS failed&quot;</span>, e);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * 文件删除</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> groupName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> remoteFileName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteFile</span><span class="params">(String groupName, String remoteFileName)</span></span></span><br><span class="line"><span class="function">			<span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		<span class="comment">//创建StorageClient</span></span><br><span class="line">		StorageClient storageClient = getTrackerClient();</span><br><span class="line"></span><br><span class="line">		<span class="comment">//删除文件</span></span><br><span class="line">		<span class="keyword">int</span> i = storageClient.delete_file(groupName, remoteFileName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * 获取Storage组</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> groupName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> StorageServer[] getStoreStorages(String groupName)</span><br><span class="line">			<span class="keyword">throws</span> IOException &#123;</span><br><span class="line">		<span class="comment">//创建TrackerClient</span></span><br><span class="line">		TrackerClient trackerClient = <span class="keyword">new</span> TrackerClient();</span><br><span class="line">		<span class="comment">//获取TrackerServer</span></span><br><span class="line">		TrackerServer trackerServer = trackerClient.getConnection();</span><br><span class="line">		<span class="comment">//获取Storage组</span></span><br><span class="line">		<span class="keyword">return</span> trackerClient.getStoreStorages(trackerServer, groupName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * 获取Storage信息,IP和端口</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> groupName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> remoteFileName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> ServerInfo[] getFetchStorages(String groupName,</span><br><span class="line">												String remoteFileName) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">		TrackerClient trackerClient = <span class="keyword">new</span> TrackerClient();</span><br><span class="line">		TrackerServer trackerServer = trackerClient.getConnection();</span><br><span class="line">		<span class="keyword">return</span> trackerClient.getFetchStorages(trackerServer, groupName, remoteFileName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * 获取Tracker服务地址</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getTrackerUrl</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;http://&quot;</span>+getTrackerServer().getInetSocketAddress().getHostString()+<span class="string">&quot;:&quot;</span>+ClientGlobal.getG_tracker_http_port()+<span class="string">&quot;/&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * 获取Storage客户端</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> StorageClient <span class="title">getTrackerClient</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		TrackerServer trackerServer = getTrackerServer();</span><br><span class="line">		StorageClient storageClient = <span class="keyword">new</span> StorageClient(trackerServer, <span class="keyword">null</span>);</span><br><span class="line">		<span class="keyword">return</span>  storageClient;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * 获取Tracker</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> TrackerServer <span class="title">getTrackerServer</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		TrackerClient trackerClient = <span class="keyword">new</span> TrackerClient();</span><br><span class="line">		TrackerServer trackerServer = trackerClient.getConnection();</span><br><span class="line">		<span class="keyword">return</span>  trackerServer;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-3-文件上传"><a href="#4-3-文件上传" class="headerlink" title="4.3 文件上传"></a>4.3 文件上传</h4><p>创建一个FileController，在该控制器中实现文件上传操作，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/file&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">uploadFile</span><span class="params">(MultipartFile file)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//判断文件是否存在</span></span><br><span class="line">            <span class="keyword">if</span> (file == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;文件不存在&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取文件的完整名称</span></span><br><span class="line">            String originalFilename = file.getOriginalFilename();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(originalFilename))&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;文件不存在&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取文件的扩展名称  abc.jpg   jpg</span></span><br><span class="line">            String extName = originalFilename.substring(originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>) + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取文件内容</span></span><br><span class="line">            <span class="keyword">byte</span>[] content = file.getBytes();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//创建文件上传的封装实体类</span></span><br><span class="line">            FastDFSFile fastDFSFile = <span class="keyword">new</span> FastDFSFile(originalFilename,content,extName);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//基于工具类进行文件上传,并接受返回参数  String[]</span></span><br><span class="line">            String[] uploadResult = FastDFSClient.upload(fastDFSFile);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//封装返回结果</span></span><br><span class="line">            String url = FastDFSClient.getTrackerUrl()+uploadResult[<span class="number">0</span>]+<span class="string">&quot;/&quot;</span>+uploadResult[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;文件上传成功&quot;</span>,url);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">false</span>, StatusCode.ERROR,<span class="string">&quot;文件上传失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-Postman测试文件上传"><a href="#5-Postman测试文件上传" class="headerlink" title="5 Postman测试文件上传"></a>5 Postman测试文件上传</h3><p>步骤：</p>
<p>1、选择post请求方式，输入请求地址  <a href="http://localhost:9008/file/upload">http://localhost:9008/file/upload</a></p>
<p>2、填写Headers</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">Key：Content-Type</span></span><br><span class="line"><span class="attr">Value：multipart/form-data</span></span><br></pre></td></tr></table></figure>

<p>3、填写body</p>
<p>选择form-data   然后选择文件file   点击添加文件，最后发送即可。</p>
]]></content>
      <tags>
        <tag>FastDFS</tag>
      </tags>
  </entry>
  <entry>
    <title>freemarker</title>
    <url>/2019/09/12/freemarker/freemarker%20%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="freemarker-入门"><a href="#freemarker-入门" class="headerlink" title="freemarker 入门"></a>freemarker 入门</h1><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="java代码"><a href="#java代码" class="headerlink" title="java代码"></a>java代码</h2><h3 id="FreemarkerTest-java"><a href="#FreemarkerTest-java" class="headerlink" title="FreemarkerTest.java"></a>FreemarkerTest.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> freemarker.template.Configuration;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.Template;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FreemarkerTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//创建freemarker的配置对象</span></span><br><span class="line">        Configuration configuration = <span class="keyword">new</span> Configuration(Configuration.getVersion());</span><br><span class="line">        <span class="comment">//设置模板文件所在目录</span></span><br><span class="line">        configuration.setDirectoryForTemplateLoading(<span class="keyword">new</span> File(<span class="string">&quot;d:\\ftl&quot;</span>));</span><br><span class="line">        <span class="comment">//设置字符集</span></span><br><span class="line">        configuration.setDefaultEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//加载模板文件</span></span><br><span class="line">        Template template = configuration.getTemplate(<span class="string">&quot;test.ftl&quot;</span>);</span><br><span class="line">        <span class="comment">//准备模板文件中所需要的数据，通常是通过Map进行构造</span></span><br><span class="line">        Map map = <span class="keyword">new</span> HashMap();</span><br><span class="line">        map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;itcast&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;hello freemarker!!&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;success&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        List goodsList=<span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">        Map goods1=<span class="keyword">new</span> HashMap();</span><br><span class="line">        goods1.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;苹果&quot;</span>);</span><br><span class="line">        goods1.put(<span class="string">&quot;price&quot;</span>, <span class="number">5.8</span>);</span><br><span class="line"></span><br><span class="line">        Map goods2=<span class="keyword">new</span> HashMap();</span><br><span class="line">        goods2.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;香蕉&quot;</span>);</span><br><span class="line">        goods2.put(<span class="string">&quot;price&quot;</span>, <span class="number">2.5</span>);</span><br><span class="line"></span><br><span class="line">        Map goods3=<span class="keyword">new</span> HashMap();</span><br><span class="line">        goods3.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;橘子&quot;</span>);</span><br><span class="line">        goods3.put(<span class="string">&quot;price&quot;</span>, <span class="number">3.2</span>);</span><br><span class="line"></span><br><span class="line">        goodsList.add(goods1);</span><br><span class="line">        goodsList.add(goods2);</span><br><span class="line">        goodsList.add(goods3);</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">&quot;goodsList&quot;</span>, goodsList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//准备输出流对象，用于输出静态文件</span></span><br><span class="line">        Writer writer = <span class="keyword">new</span> FileWriter(<span class="string">&quot;d:\\ftl\\test.html&quot;</span>);</span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        template.process(map,writer);</span><br><span class="line">        <span class="comment">//关闭流</span></span><br><span class="line">        writer.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="模版文件"><a href="#模版文件" class="headerlink" title="模版文件"></a>模版文件</h2><h3 id="01-assign"><a href="#01-assign" class="headerlink" title="01 assign"></a>01 assign</h3><h3 id="02-if"><a href="#02-if" class="headerlink" title="02 if"></a>02 if</h3><h3 id="03-list"><a href="#03-list" class="headerlink" title="03 list"></a>03 list</h3><p><strong>test.ftl</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>Freemarker入门<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	&lt;#include &quot;head.ftl&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;#--我只是一个注释，我不会有任何输出  </span><br><span class="line">            head.ftl    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    --&gt;</span><br><span class="line">    </span><br><span class="line">    $&#123;name&#125;你好，$&#123;message&#125;</span><br><span class="line">	<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">	&lt;#assign linkman=&quot;周先生&quot;&gt;</span><br><span class="line">	联系人：$&#123;linkman&#125;</span><br><span class="line">	<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">	&lt;#assign info=&#123;&quot;mobile&quot;:&quot;13812345678&quot;,&#x27;address&#x27;:&#x27;北京市昌平区&#x27;&#125; &gt;</span><br><span class="line">	电话：$&#123;info.mobile&#125;  地址：$&#123;info.address&#125;</span><br><span class="line">	<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">	&lt;#assign success=false&gt;</span><br><span class="line">	&lt;#if success=true&gt;</span><br><span class="line">	  你已通过实名认证</span><br><span class="line">	&lt;#else&gt;  </span><br><span class="line">	  你未通过实名认证</span><br><span class="line">	&lt;/#if&gt;</span><br><span class="line">	<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">	&lt;#list goodsList as goods&gt;</span><br><span class="line">	  商品名称： $&#123;goods.name&#125; 价格：$&#123;goods.price&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">	&lt;/#list&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="spring配置文件"><a href="#spring配置文件" class="headerlink" title="spring配置文件"></a>spring配置文件</h2><h3 id="spring-service-xml"><a href="#spring-service-xml" class="headerlink" title="spring-service.xml"></a>spring-service.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;freemarkerConfig&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定模板文件所在目录--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateLoaderPath&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/ftl/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定字符集--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--加载属性文件，后期在java代码中会使用到属性文件中定义的key和value--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:freemarker.properties&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="freemarker-properties"><a href="#freemarker-properties" class="headerlink" title="freemarker.properties"></a>freemarker.properties</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">out_put_path</span>=<span class="string">D:/itcastProject/health_parent/health_mobile/src/main/webapp/pages</span></span><br></pre></td></tr></table></figure>

<h2 id="spring-的java代码"><a href="#spring-的java代码" class="headerlink" title="spring 的java代码"></a>spring 的java代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> FreeMarkerConfigurer freeMarkerConfigurer;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;out_put_path&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String outPutPath;<span class="comment">//从属性文件中读取要生成的html对应的目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//通用的方法，用于生成静态页面</span></span><br><span class="line"><span class="comment">//templateName 如mobile_setmeal_detail.ftl 模版名字</span></span><br><span class="line"><span class="comment">//htmlPageName 如&quot;setmeal_detail_&quot; + setmeal.getId() + &quot;.html&quot; 生成的html路径</span></span><br><span class="line"><span class="comment">//map map集合 给模版里的参数赋值 key要与模版里的参数相同</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generteHtml</span><span class="params">(String templateName,String htmlPageName,Map map)</span></span>&#123;</span><br><span class="line">        Configuration configuration = freeMarkerConfigurer.getConfiguration();<span class="comment">//获得配置对象</span></span><br><span class="line">        Writer out = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Template template = configuration.getTemplate(templateName);</span><br><span class="line">            <span class="comment">//构造输出流</span></span><br><span class="line">            out = <span class="keyword">new</span> FileWriter(<span class="keyword">new</span> File(outPutPath + <span class="string">&quot;/&quot;</span> + htmlPageName));</span><br><span class="line">            <span class="comment">//输出文件</span></span><br><span class="line">            template.process(map,out);</span><br><span class="line">            out.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>页面静态化技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Feign</title>
    <url>/2020/01/04/feign/Feign%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="Feign"><a href="#Feign" class="headerlink" title="Feign"></a>Feign</h1><h2 id="1-Feign-概述"><a href="#1-Feign-概述" class="headerlink" title="1-Feign-概述"></a>1-Feign-概述</h2><p>• Feign 是一个声明式的 REST 客户端，它用了基于接口的注解方式，很方便实现客户端配置。<br>• Feign 最初由 Netflix 公司提供，但不支持SpringMVC注解，后由 SpringCloud 对其封装，支持了SpringMVC注<br>解，让使用者更易于接受</p>
<p>![1587540970425](E:/上课资料/24 SpringCloud/day02/讲义/img/1587540970425.png)</p>
<h2 id="2-Feign-入门"><a href="#2-Feign-入门" class="headerlink" title="2-Feign-入门"></a>2-Feign-入门</h2><ol>
<li>在消费端引入 open-feign 依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--feign--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<ol start="2">
<li>编写Feign调用接口</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wingone.consumer.feign;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.wingone.consumer.config.FeignLogConfig;</span><br><span class="line"><span class="keyword">import</span> com.wingone.consumer.domain.Goods;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * feign声明式接口。发起远程调用的。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> String url = &quot;http://FEIGN-PROVIDER/goods/findOne/&quot;+id;</span></span><br><span class="line"><span class="comment"> Goods goods = restTemplate.getForObject(url, Goods.class);</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 1. 定义接口</span></span><br><span class="line"><span class="comment"> * 2. 接口上添加注解 <span class="doctag">@FeignClient</span>,设置value属性为 服务提供者的 应用名称</span></span><br><span class="line"><span class="comment"> * 3. 编写调用接口，接口的声明规则 和 提供方接口保持一致。</span></span><br><span class="line"><span class="comment"> * 4. 注入该接口对象，调用接口方法完成远程调用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;FEIGN-PROVIDER&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GoodsFeignClient</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/goods/findOne/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Goods <span class="title">findGoodsById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OrderController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wingone.consumer.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.wingone.consumer.domain.Goods;</span><br><span class="line"><span class="keyword">import</span> com.wingone.consumer.feign.GoodsFeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/order&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GoodsFeignClient goodsFeignClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/goods/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Goods <span class="title">findGoodsById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        String url = &quot;http://FEIGN-PROVIDER/goods/findOne/&quot;+id;</span></span><br><span class="line"><span class="comment">        // 3. 调用方法</span></span><br><span class="line"><span class="comment">        Goods goods = restTemplate.getForObject(url, Goods.class);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        return goods;*/</span></span><br><span class="line"></span><br><span class="line">        Goods goods = goodsFeignClient.findGoodsById(id);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> goods;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>goodsFeignClient报红，不影响使用</p>
<p>![1587541824858](E:/上课资料/24 SpringCloud/day02/讲义/img/1587541824858.png)</p>
<ol start="3">
<li>在启动类 添加 @EnableFeignClients 注解，开启Feign功能</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wingone.consumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span> <span class="comment">// 激活DiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableFeignClients</span> <span class="comment">//开启Feign的功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerApp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConsumerApp.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>测试调用</li>
</ol>
<h2 id="3-Feign超时配置"><a href="#3-Feign超时配置" class="headerlink" title="3-Feign超时配置"></a>3-Feign超时配置</h2><p>• Feign 底层依赖于 Ribbon 实现负载均衡和远程调用。<br>• Ribbon默认1秒超时。<br>• 超时配置：</p>
<p>feign-consumer  application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置Ribbon的超时时间</span></span><br><span class="line"><span class="attr">ribbon:</span></span><br><span class="line">  <span class="attr">ConnectTimeout:</span> <span class="number">1000</span> <span class="comment"># 连接超时时间 默认1s  默认单位毫秒</span></span><br><span class="line">  <span class="attr">ReadTimeout:</span> <span class="number">3000</span> <span class="comment"># 逻辑处理的超时时间 默认1s 默认单位毫秒</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Feign</tag>
      </tags>
  </entry>
  <entry>
    <title>mata标签</title>
    <url>/2020/09/03/html/meta%E6%A0%87%E7%AD%BE%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h3 id="meta标签的应用"><a href="#meta标签的应用" class="headerlink" title="meta标签的应用"></a>meta标签的应用</h3><h4 id="1-声明字符的编码-防止出现乱码"><a href="#1-声明字符的编码-防止出现乱码" class="headerlink" title="1.声明字符的编码**防止出现乱码"></a>1.声明字符的编码**防止出现乱码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-设置无法放大、缩小网页"><a href="#2-设置无法放大、缩小网页" class="headerlink" title="2.设置无法放大、缩小网页"></a>2.设置无法放大、缩小网页</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no,viewport-fit=cover&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-删除默认的苹果工具栏和菜单栏"><a href="#3-删除默认的苹果工具栏和菜单栏" class="headerlink" title="3.删除默认的苹果工具栏和菜单栏"></a>3.删除默认的苹果工具栏和菜单栏</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;apple-mobile-web-app-capable&quot;</span> <span class="attr">content</span>=<span class="string">&quot;yes&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-Edge模式告诉IE以最高级-模式渲染文档，也就是任何IE版本都以当前版本所支持的最高级标准模式渲染，避免版本升级造成的影响。"><a href="#4-Edge模式告诉IE以最高级-模式渲染文档，也就是任何IE版本都以当前版本所支持的最高级标准模式渲染，避免版本升级造成的影响。" class="headerlink" title="4.Edge模式告诉IE以最高级 模式渲染文档，也就是任何IE版本都以当前版本所支持的最高级标准模式渲染，避免版本升级造成的影响。"></a>4.Edge模式告诉IE以最高级 模式渲染文档，也就是任何IE版本都以当前版本所支持的最高级标准模式渲染，避免版本升级造成的影响。</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge,chrome=1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-禁止默认的将数字识别为可点击的telephone"><a href="#5-禁止默认的将数字识别为可点击的telephone" class="headerlink" title="5.禁止默认的将数字识别为可点击的telephone"></a>5.禁止默认的将数字识别为可点击的telephone</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&#x27;telephone=no&#x27;</span> <span class="attr">name</span>=<span class="string">&#x27;format-detection&#x27;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="6-禁止默认的将数字识别为可点击的telephone"><a href="#6-禁止默认的将数字识别为可点击的telephone" class="headerlink" title="6.禁止默认的将数字识别为可点击的telephone"></a>6.禁止默认的将数字识别为可点击的telephone</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&#x27;email=no&#x27;</span> <span class="attr">name</span>=<span class="string">&#x27;format-detection&#x27;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="7-网站关键词，有助于seo"><a href="#7-网站关键词，有助于seo" class="headerlink" title="7.网站关键词，有助于seo"></a>7.网站关键词，有助于seo</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&#x27;keywords&#x27;</span> <span class="attr">content</span>=<span class="string">&quot;&#123;% block keywords %&#125;&#123;% endblock %&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="8-网站描述，有助于seo"><a href="#8-网站描述，有助于seo" class="headerlink" title="8.网站描述，有助于seo"></a>8.网站描述，有助于seo</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&#x27;description&#x27;</span> <span class="attr">content</span>=<span class="string">&quot;&#123;% block description %&#125;&#123;% endblock %&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="9-topic、subject用来告诉搜索引擎你的网站主旨、主题"><a href="#9-topic、subject用来告诉搜索引擎你的网站主旨、主题" class="headerlink" title="9.topic、subject用来告诉搜索引擎你的网站主旨、主题"></a>9.topic、subject用来告诉搜索引擎你的网站主旨、主题</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;topic&quot;</span> <span class="attr">content</span>=<span class="string">&quot;your website&#x27;s topic&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;subject&quot;</span> <span class="attr">content</span>=<span class="string">&quot;your website&#x27;s subject&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="10-copyright用来说明网站版权信息。"><a href="#10-copyright用来说明网站版权信息。" class="headerlink" title="10.copyright用来说明网站版权信息。"></a>10.copyright用来说明网站版权信息。</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;copyright&quot;</span> <span class="attr">content</span>=<span class="string">&quot;XXX&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="11-网站只属于PC电脑端的页面"><a href="#11-网站只属于PC电脑端的页面" class="headerlink" title="11.网站只属于PC电脑端的页面"></a>11.网站只属于PC电脑端的页面</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">PC站:<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;applicable-device&quot;</span> <span class="attr">content</span>=<span class="string">&quot;pc&quot;</span>&gt;</span></span><br><span class="line">手机站：<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;applicable-device&quot;</span> <span class="attr">content</span>=<span class="string">&quot;mobile&quot;</span> /&gt;</span></span><br><span class="line">响应式网页可标识：<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;applicable-device&quot;</span><span class="attr">content</span>=<span class="string">&quot;pc,mobile&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="12-用户通过百度移动搜索或者其他bai方式访问站点的PC页（首页或者内容页）时，站点将其自动适配到该PC页面对应的手机页，并为之选择合适的页面版本，前提是你需要做两套网站，一套是在pc端访问的，一套是在手机端访问的。"><a href="#12-用户通过百度移动搜索或者其他bai方式访问站点的PC页（首页或者内容页）时，站点将其自动适配到该PC页面对应的手机页，并为之选择合适的页面版本，前提是你需要做两套网站，一套是在pc端访问的，一套是在手机端访问的。" class="headerlink" title="12.用户通过百度移动搜索或者其他bai方式访问站点的PC页（首页或者内容页）时，站点将其自动适配到该PC页面对应的手机页，并为之选择合适的页面版本，前提是你需要做两套网站，一套是在pc端访问的，一套是在手机端访问的。"></a>12.用户通过百度移动搜索或者其他bai方式访问站点的PC页（首页或者内容页）时，站点将其自动适配到该PC页面对应的手机页，并为之选择合适的页面版本，前提是你需要做两套网站，一套是在pc端访问的，一套是在手机端访问的。</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;mobile-agent&quot;</span> <span class="attr">content</span>=<span class="string">&quot;format=html5;url=&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="13-代表禁止浏览器从本地计算机的缓存中访问页面内容-这样设定，访问者将无法脱机浏览。"><a href="#13-代表禁止浏览器从本地计算机的缓存中访问页面内容-这样设定，访问者将无法脱机浏览。" class="headerlink" title="13.代表禁止浏览器从本地计算机的缓存中访问页面内容,这样设定，访问者将无法脱机浏览。"></a>13.代表禁止浏览器从本地计算机的缓存中访问页面内容,这样设定，访问者将无法脱机浏览。</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;cache-control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>linux命令</title>
    <url>/2019/11/20/linux/linux%E4%B8%8B%E7%9A%84jdk%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="linux命令"><a href="#linux命令" class="headerlink" title="linux命令"></a>linux命令</h1><h3 id="linux下的jdk安装"><a href="#linux下的jdk安装" class="headerlink" title="linux下的jdk安装"></a>linux下的jdk安装</h3><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf tar -zxvf jdk-9.0.1_linux-x64_bin.tar.gz </span><br></pre></td></tr></table></figure>

<h4 id="配置JAVA-HOME："><a href="#配置JAVA-HOME：" class="headerlink" title="配置JAVA_HOME："></a>配置JAVA_HOME：</h4><p>/root/es/es/elasticsearch-7.4.0/jdk</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure>

<h4 id="内容如下："><a href="#内容如下：" class="headerlink" title="内容如下："></a>内容如下：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/jdk-<span class="number">9.0</span><span class="number">.1</span></span><br><span class="line">export JRE_HOME=/usr/local/jdk-<span class="number">9.0</span><span class="number">.1</span>/jre</span><br><span class="line">export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br></pre></td></tr></table></figure>

<h4 id="4-使修改生效："><a href="#4-使修改生效：" class="headerlink" title="4.使修改生效："></a>4.使修改生效：</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<h4 id="5-验证是否安装成功："><a href="#5-验证是否安装成功：" class="headerlink" title="5.验证是否安装成功："></a>5.验证是否安装成功：</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>

<p>成功！</p>
<h4 id="解决Linux下更换jdk版本，source-etc-profile还是原来的版本问题"><a href="#解决Linux下更换jdk版本，source-etc-profile还是原来的版本问题" class="headerlink" title="解决Linux下更换jdk版本，source /etc/profile还是原来的版本问题"></a>解决Linux下更换jdk版本，source /etc/profile还是原来的版本问题</h4><p>在服务器上更新了新的 jdk，也在 /etc/profile 中设置了新的 JAVA_HOME，并且 source /etc/profile</p>
<p>然后使用<a href="http://lib.csdn.net/base/javase">Java</a> -version 和 javac -version 发现版本还是老版本，死活没有使用我新指定的。</p>
<p>中间各种排查，这里就不废话了，下面是文件的根源和解决方法：</p>
<p>使用which java 和 which javac 分别可以看到</p>
<p>[root@localhost ~]# which java<br>/usr/bin/java<br>[root@localhost ~]# which javac<br>/usr/bin/javac</p>
<p>简单说一下，就是把这2个文件ln -s 到我们新的jdk 下的 java 和 javac 上，命令如下：</p>
<p>rm -rf /usr/bin/java</p>
<p>rm -rf /usr/bin/javac</p>
<p>ln -s $JAVA_HOME/bin/javac /usr/bin/javac</p>
<p>ln -s $JAVA_HOME/bin/java /usr/bin/java</p>
<p>如果以上不行则直接把path目录下的java和javac拷贝到/usr/bin/下，path目录中就是 $JAVA_HOME/bin/，</p>
<p>有的不是安装而是免安装的解压包，一样的，一般免安装包在/usr/java下，这个看自己目录来。</p>
<p>最终最重要的一点，/usr/bin/下的java和javac都要改权限，chmod 755 java、chmod 755 javac，</p>
<p>如果是免安装解压缩包，则解压后的包整个目录要改权限 chmod 755 /usr/java/jdk1.8.0_181/ -R (我的免安装包版本是1.8.0_181，放在了/usr/java/目录下，不改则使用java命令起服务起不来)</p>
<p>这样执行以后，然后 java -version 、 javac -version </p>
<p>ps aux | grep elasticsearch</p>
<p>kill - 9 进程ID</p>
<p>查找一个文件</p>
<p>find / -name jvm.options</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>分模块开发maven高级</title>
    <url>/2018/09/18/maven/%E5%88%86%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91maven%E9%AB%98%E7%BA%A7/</url>
    <content><![CDATA[<h1 id="分模块开发maven高级"><a href="#分模块开发maven高级" class="headerlink" title="分模块开发maven高级"></a>分模块开发maven高级</h1><p>创建五个模块</p>
<p><img src="/2018/09/18/maven/%E5%88%86%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91maven%E9%AB%98%E7%BA%A7/Users\14154\AppData\Local\Temp\1602117935431.png" alt="1602117935431"></p>
<h3 id="1、创建父模块maven"><a href="#1、创建父模块maven" class="headerlink" title="1、创建父模块maven"></a>1、创建父模块maven</h3><h4 id="1-1编辑pom文件"><a href="#1-1编辑pom文件" class="headerlink" title="1.1编辑pom文件"></a>1.1编辑pom文件</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>maven_pojo<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>maven_dao<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>maven_service<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>maven_controller<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--jackson--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--spring&amp;springmvc--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--servlet--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--aop的注解支持&amp;切点表达式支持--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2、创建子模块maven-pojo"><a href="#2、创建子模块maven-pojo" class="headerlink" title="2、创建子模块maven_pojo"></a>2、创建子模块maven_pojo</h3><h4 id="2-1创建实体类User"><a href="#2-1创建实体类User" class="headerlink" title="2.1创建实体类User"></a>2.1创建实体类User</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="2-1编辑pojo的-pom"><a href="#2-1编辑pojo的-pom" class="headerlink" title="2.1编辑pojo的 pom"></a>2.1编辑pojo的 pom</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_pojo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3、创建子模块maven-dao"><a href="#3、创建子模块maven-dao" class="headerlink" title="3、创建子模块maven_dao"></a>3、创建子模块maven_dao</h3><h4 id="3-1-编辑dao的pom文件"><a href="#3-1-编辑dao的pom文件" class="headerlink" title="3.1 编辑dao的pom文件"></a>3.1 编辑dao的pom文件</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_dao<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_pojo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-2-创建配置文件-applicationContext-dao-xml"><a href="#3-2-创建配置文件-applicationContext-dao-xml" class="headerlink" title="3.2 创建配置文件 applicationContext_dao.xml"></a>3.2 创建配置文件 applicationContext_dao.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mybatis管理的dao--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:property-placeholder</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;scannerConfigurer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--扫描dao包下的所有接口，创建代理对象--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;wang.yinggang.dao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-3-创建配置文件jdbc-properties"><a href="#3-3-创建配置文件jdbc-properties" class="headerlink" title="3.3 创建配置文件jdbc.properties"></a>3.3 创建配置文件jdbc.properties</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://106.54.95.74:3306/spring01</span></span><br><span class="line"><span class="meta">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure>

<h4 id="3-4-创建UserDao"><a href="#3-4-创建UserDao" class="headerlink" title="3.4 创建UserDao"></a>3.4 创建UserDao</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> wang.yinggang.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user_t&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4、创建子模块maven-service"><a href="#4、创建子模块maven-service" class="headerlink" title="4、创建子模块maven_service"></a>4、创建子模块maven_service</h3><h4 id="4-1-编辑pom文件"><a href="#4-1-编辑pom文件" class="headerlink" title="4.1 编辑pom文件"></a>4.1 编辑pom文件</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_dao<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-2-编辑applicationContext-service-xml"><a href="#4-2-编辑applicationContext-service-xml" class="headerlink" title="4.2 编辑applicationContext_service.xml"></a>4.2 编辑applicationContext_service.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;wang.yinggang.service&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-3-编辑UserService"><a href="#4-3-编辑UserService" class="headerlink" title="4.3 编辑UserService"></a>4.3 编辑UserService</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> wang.yinggang.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-4-编辑UserServiceImpl"><a href="#4-4-编辑UserServiceImpl" class="headerlink" title="4.4 编辑UserServiceImpl"></a>4.4 编辑UserServiceImpl</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">package wang.yinggang.service.impl;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line">import wang.yinggang.dao.UserDao;</span><br><span class="line">import wang.yinggang.domain.User;</span><br><span class="line">import wang.yinggang.service.UserService;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">public class UserServiceImpl implements UserService &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private UserDao userDao;</span><br><span class="line">    public List<span class="tag">&lt;<span class="name">User</span>&gt;</span> findAll() &#123;</span><br><span class="line">        return userDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="4、创建子模块maven-controller"><a href="#4、创建子模块maven-controller" class="headerlink" title="4、创建子模块maven_controller"></a>4、创建子模块maven_controller</h3><h4 id="4-1-编辑pom文件-1"><a href="#4-1-编辑pom文件-1" class="headerlink" title="4.1 编辑pom文件"></a>4.1 编辑pom文件</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_controller<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="4-2-编辑web-xml"><a href="#4-2-编辑web-xml" class="headerlink" title="4.2  编辑web.xml"></a>4.2  编辑web.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--spring--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:applicationContext_*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--springmvc--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-3-创建spring-mvc-xml"><a href="#4-3-创建spring-mvc-xml" class="headerlink" title="4.3 创建spring-mvc.xml"></a>4.3 创建spring-mvc.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;wang.yinggang.controller&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-4-UserController-java"><a href="#4-4-UserController-java" class="headerlink" title="4.4 UserController.java"></a>4.4 UserController.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> wang.yinggang.domain.User;</span><br><span class="line"><span class="keyword">import</span> wang.yinggang.service.UserService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>常用maven依赖</title>
    <url>/2018/09/07/maven/%E5%B8%B8%E7%94%A8maven%E4%BE%9D%E8%B5%96/</url>
    <content><![CDATA[<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><h2 id="JDK编译插件"><a href="#JDK编译插件" class="headerlink" title="JDK编译插件"></a>JDK编译插件</h2><p>如果不配置该插件，那么IDEA在进行项目编译的时候会自动将编译语法降到1.5</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--jdk编译插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--tomcat插件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="编译配置文件的配置"><a href="#编译配置文件的配置" class="headerlink" title="编译配置文件的配置"></a>编译配置文件的配置</h2><p>如果配置文件不能编译到classess目录，就使用该配置。放在build标签下即可。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resource<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.tld<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><h2 id="Junit"><a href="#Junit" class="headerlink" title="Junit"></a>Junit</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--servlet--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="MySql"><a href="#MySql" class="headerlink" title="MySql"></a>MySql</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Druid连接池"><a href="#Druid连接池" class="headerlink" title="Druid连接池"></a>Druid连接池</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--druid连接池--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="C3P0连接池"><a href="#C3P0连接池" class="headerlink" title="C3P0连接池"></a>C3P0连接池</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--c3p0连接池--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Druid连接池-1"><a href="#Druid连接池-1" class="headerlink" title="Druid连接池"></a>Druid连接池</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--druid连接池--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="JdbcTemplate"><a href="#JdbcTemplate" class="headerlink" title="JdbcTemplate"></a>JdbcTemplate</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--jdbcTemplate--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="BeanUtils"><a href="#BeanUtils" class="headerlink" title="BeanUtils"></a>BeanUtils</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--beanUtils--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Jackson"><a href="#Jackson" class="headerlink" title="Jackson"></a>Jackson</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--jackson--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Javamail"><a href="#Javamail" class="headerlink" title="Javamail"></a>Javamail</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Javamail--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.mail<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.mail-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.mail<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Jedis"><a href="#Jedis" class="headerlink" title="Jedis"></a>Jedis</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Jedis--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文件上传--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--日志--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Lombok"><a href="#Lombok" class="headerlink" title="Lombok"></a>Lombok</h2><p>可能1.18.4可能会有坑，需要降级或者升级,可以使用1.16.6</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Lombok--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Quartz"><a href="#Quartz" class="headerlink" title="Quartz"></a>Quartz</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz‐scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz‐scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz‐jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Spring核心"><a href="#Spring核心" class="headerlink" title="Spring核心"></a>Spring核心</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Spring核心--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Spring集成Junit测试"><a href="#Spring集成Junit测试" class="headerlink" title="Spring集成Junit测试"></a>Spring集成Junit测试</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Spring集成Junit测试--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Spring切面"><a href="#Spring切面" class="headerlink" title="Spring切面"></a>Spring切面</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Spring集成Aspect切面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Spring事物"><a href="#Spring事物" class="headerlink" title="Spring事物"></a>Spring事物</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Spring整合Mybatis"><a href="#Spring整合Mybatis" class="headerlink" title="Spring整合Mybatis"></a>Spring整合Mybatis</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring集成mybatis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="SpringMVC核心"><a href="#SpringMVC核心" class="headerlink" title="SpringMVC核心"></a>SpringMVC核心</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a>mybatis</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="mybatis分页插件"><a href="#mybatis分页插件" class="headerlink" title="mybatis分页插件"></a>mybatis分页插件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>集成到mybatis中的配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="Dubbo"><a href="#Dubbo" class="headerlink" title="Dubbo"></a>Dubbo</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dubbo.version</span>&gt;</span>2.7.3<span class="tag">&lt;/<span class="name">dubbo.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">zookeeper.version</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">zookeeper.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Dubbo的起步依赖，版本2.7之后统一为rg.apache.dubb --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;dubbo.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--ZooKeeper客户端实现 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;zookeeper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--ZooKeeper客户端实现 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;zookeeper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qiniu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>qiniu-java-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>7.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="定时触发quartz"><a href="#定时触发quartz" class="headerlink" title="定时触发quartz"></a>定时触发quartz</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入quartz依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="freemarker"><a href="#freemarker" class="headerlink" title="freemarker"></a>freemarker</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="springcloud"><a href="#springcloud" class="headerlink" title="springcloud"></a>springcloud</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring cloud 版本--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Greenwich.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入Spring Cloud 依赖</span></span><br><span class="line"><span class="comment">版本管理</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">&lt;!-- eureka-server --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Thymeleaf</title>
    <url>/2020/05/04/thymeleaf/Thymeleaf/</url>
    <content><![CDATA[<h1 id="Thymeleaf"><a href="#Thymeleaf" class="headerlink" title="Thymeleaf"></a>Thymeleaf</h1><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><ul>
<li>Thymeleaf的介绍   si mei li fu</li>
<li>Thymeleaf的入门</li>
<li>Thymeleaf的语法及标签</li>
<li>搜索页面渲染</li>
<li>商品详情页静态化功能实现</li>
</ul>
<h2 id="1-Thymeleaf介绍"><a href="#1-Thymeleaf介绍" class="headerlink" title="1.Thymeleaf介绍"></a>1.Thymeleaf介绍</h2><p>​    thymeleaf是一个XML/XHTML/HTML5模板引擎，可用于Web与非Web环境中的应用开发。它是一个开源的Java库，基于Apache License 2.0许可，由Daniel Fernández创建，该作者还是Java加密库Jasypt的作者。</p>
<p>Thymeleaf提供了一个用于整合Spring MVC的可选模块，在应用开发中，你可以使用Thymeleaf来完全代替JSP或其他模板引擎，如Velocity、FreeMarker等。Thymeleaf的主要目标在于提供一种可被浏览器正确显示的、格式良好的模板创建方式，因此也可以用作静态建模。你可以使用它创建经过验证的XML与HTML模板。相对于编写逻辑或代码，开发者只需将标签属性添加到模板中即可。接下来，这些标签属性就会在DOM（文档对象模型）上执行预先制定好的逻辑。</p>
<p>它的特点便是：开箱即用，Thymeleaf允许您处理六种模板，每种模板称为模板模式：</p>
<ul>
<li>XML</li>
<li>有效的XML</li>
<li>XHTML</li>
<li>有效的XHTML</li>
<li>HTML5</li>
<li>旧版HTML5</li>
</ul>
<p>所有这些模式都指的是格式良好的XML文件，但<em>Legacy HTML5</em>模式除外，它允许您处理HTML5文件，其中包含独立（非关闭）标记，没有值的标记属性或不在引号之间写入的标记属性。为了在这种特定模式下处理文件，Thymeleaf将首先执行转换，将您的文件转换为格式良好的XML文件，这些文件仍然是完全有效的HTML5（实际上是创建HTML5代码的推荐方法）<a href="https://www.thymeleaf.org/doc/tutorials/2.1/usingthymeleaf.html#fn1">1</a>。</p>
<p>另请注意，验证仅适用于XML和XHTML模板。</p>
<p>然而，这些并不是Thymeleaf可以处理的唯一模板类型，并且用户始终能够通过指定在此模式下<em>解析</em>模板的方法和<em>编写</em>结果的方式来定义他/她自己的模式。这样，任何可以建模为DOM树（无论是否为XML）的东西都可以被Thymeleaf有效地作为模板处理。</p>
<p><strong>应用场景:</strong></p>
<p><strong>对于一些不经常发生改变  并且被频繁访问的页面  我们就可以使用Thymeleaf模板引擎技术</strong></p>
<p>好处:</p>
<ul>
<li><strong>加快当前用户的响应速度</strong></li>
<li><strong>减轻服务端的访问压力</strong></li>
</ul>
<h2 id="2-Springboot整合thymeleaf"><a href="#2-Springboot整合thymeleaf" class="headerlink" title="2.Springboot整合thymeleaf"></a>2.Springboot整合thymeleaf</h2><p>使用springboot 来集成使用Thymeleaf可以大大减少单纯使用thymleaf的代码量，所以我们接下来使用springboot集成使用thymeleaf.</p>
<p>实现的步骤为：</p>
<ul>
<li>创建一个sprinboot项目</li>
<li>添加thymeleaf的起步依赖</li>
<li>添加spring web的起步依赖</li>
<li>编写html 使用thymeleaf的语法获取变量对应后台传递的值</li>
<li>编写controller 设置变量的值到model中</li>
</ul>
<p>(1)创建工程</p>
<p>创建一个独立的工程springboot-thymeleaf,该工程为案例工程，不需要放到changgou工程中。</p>
<p><strong>pom.xml依赖</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--web起步依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--thymeleaf配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>(2)创建包com.itheima.thymeleaf.并创建启动类ThymeleafApplication</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThymeleafApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ThymeleafApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>(3)创建application.yml</p>
<p>设置thymeleaf的缓存设置，设置为false。默认加缓存的，用于测试。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>



<p>(4)控制层</p>
<p>创建controller用于测试后台 设置数据到model中。</p>
<p>创建com.itheima.controller.TestController，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 访问/test/hello  跳转到demo1页面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;hello welcome&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;demo&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>(2)创建html</p>
<p>在resources中创建templates目录，在templates目录创建 demo.html,代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Thymeleaf的入门<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--输出hello数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;hello&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>解释：</p>
<p><code>&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</code>:这句声明使用thymeleaf标签</p>
<p><code>&lt;p th:text=&quot;$&#123;hello&#125;&quot;&gt;&lt;/p&gt;</code>:这句使用 th:text=”${变量名}” 表示 使用thymeleaf获取文本数据，类似于EL表达式。</p>
<p>(5)测试</p>
<p>启动系统，并在浏览器访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8080&#x2F;test&#x2F;hello</span><br></pre></td></tr></table></figure>

<p><img src="images/1560936996326.png" alt="1560936996326"></p>
<h2 id="3-Thymeleaf基本语法"><a href="#3-Thymeleaf基本语法" class="headerlink" title="3 Thymeleaf基本语法"></a>3 Thymeleaf基本语法</h2><p>(1)th:action</p>
<p>定义后台控制器路径，类似<code>&lt;form&gt;</code>标签的action属性。 </p>
<p>例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/test/hello&#125;&quot;</span> &gt;</span>    <span class="comment">&lt;!--@&#123;...&#125; 链接url表达式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:type</span>=<span class="string">&quot;text&quot;</span>  <span class="attr">th:name</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>(2)th:each</p>
<p>对象遍历，功能类似jstl中的<code>&lt;c:forEach&gt;</code>标签。 </p>
<p>创建com.itheima.model.User,代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="comment">//..get..set</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>Controller添加数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 访问/test/hello  跳转到demo1页面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    model.addAttribute(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;hello welcome&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//集合数据</span></span><br><span class="line">    List&lt;User&gt; users = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line">    users.add(<span class="keyword">new</span> User(<span class="number">1</span>,<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;深圳&quot;</span>));</span><br><span class="line">    users.add(<span class="keyword">new</span> User(<span class="number">2</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;北京&quot;</span>));</span><br><span class="line">    users.add(<span class="keyword">new</span> User(<span class="number">3</span>,<span class="string">&quot;王五&quot;</span>,<span class="string">&quot;武汉&quot;</span>));</span><br><span class="line">    model.addAttribute(<span class="string">&quot;users&quot;</span>,users);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;demo1&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>页面输出</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>下标<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>住址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;user,userStat:$&#123;users&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            下标:<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;userStat.index&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.address&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>测试效果</p>
<p><img src="images/1560941932553.png" alt="1560941932553"></p>
<p>(3)Map输出</p>
<p>后台添加Map</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Map定义</span></span><br><span class="line">Map&lt;String,Object&gt; dataMap = <span class="keyword">new</span> HashMap&lt;String,Object&gt;();</span><br><span class="line">dataMap.put(<span class="string">&quot;No&quot;</span>,<span class="string">&quot;123&quot;</span>);</span><br><span class="line">dataMap.put(<span class="string">&quot;address&quot;</span>,<span class="string">&quot;深圳&quot;</span>);</span><br><span class="line">model.addAttribute(<span class="string">&quot;dataMap&quot;</span>,dataMap);</span><br></pre></td></tr></table></figure>





<p>页面输出</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;map,mapStat:$&#123;dataMap&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;map&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    key:<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;mapStat.current.key&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    value:<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;mapStat.current.value&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    ==============================================</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>测试效果</p>
<p><img src="images/1560942024009.png" alt="1560942024009"></p>
<p>(4)数组输出</p>
<p>后台添加数组</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//存储一个数组</span></span><br><span class="line">String[] names = &#123;<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span>&#125;;</span><br><span class="line">model.addAttribute(<span class="string">&quot;names&quot;</span>,names);</span><br></pre></td></tr></table></figure>

<p>页面输出</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;nm,nmStat:$&#123;names&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;nmStat.count&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;nm&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    ==============================================</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>测试效果</p>
<p><img src="images/1560942589016.png" alt="1560942589016"></p>
<p>(5)Date输出</p>
<p>后台添加日期</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//日期</span></span><br><span class="line">model.addAttribute(<span class="string">&quot;now&quot;</span>,<span class="keyword">new</span> Date());</span><br></pre></td></tr></table></figure>

<p>页面输出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;span th:text&#x3D;&quot;$&#123;#dates.format(now,&#39;yyyy-MM-dd hh:ss:mm&#39;)&#125;&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>



<p>测试效果</p>
<p><img src="images/1560942631925.png" alt="1560942631925"></p>
<p>(6)th:if条件</p>
<p>后台添加年龄</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//if条件</span></span><br><span class="line">model.addAttribute(<span class="string">&quot;age&quot;</span>,<span class="number">22</span>);</span><br></pre></td></tr></table></figure>



<p>页面输出</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;(age&gt;=18)&#125;&quot;</span>&gt;</span>终于长大了！<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>测试效果</p>
<p><img src="images/1560942782470.png" alt="1560942782470"></p>
<p>(7)th:fragment 定义一个模块</p>
<p>可以定义一个独立的模块，创建一个footer.html代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>fragment<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;C&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;copy&quot;</span> &gt;</span></span><br><span class="line">    关于我们<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>(8)th:include</p>
<p>可以直接引入<code>th:fragment</code>,在demo1.html中引入如下代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;A&quot;</span> <span class="attr">th:include</span>=<span class="string">&quot;footer::copy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>效果如下：</p>
<p><img src="images/1560943006665.png" alt="1560943006665"></p>
]]></content>
      <tags>
        <tag>页面静态化技术</tag>
      </tags>
  </entry>
  <entry>
    <title>springMVC</title>
    <url>/2018/10/11/springMVC/1%E3%80%81springMVC%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<h4 id="1-导入坐标-pom-xml"><a href="#1-导入坐标-pom-xml" class="headerlink" title="1.导入坐标(pom.xml)"></a>1.导入坐标(pom.xml)</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>SpringMVCTest<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>SpringMVCTest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- servlet3.1规范的坐标 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--jsp坐标--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring的坐标--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring web的坐标--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--springmvc的坐标--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="2-创建web-xml-web-xml"><a href="#2-创建web-xml-web-xml" class="headerlink" title="2.创建web.xml(web.xml)"></a>2.创建web.xml(web.xml)</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        &lt;lo</span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line">        </span><br></pre></td></tr></table></figure>

<h4 id><a href="#" class="headerlink" title></a></h4><h4 id="3-定义springmvc-等同于applicationContext"><a href="#3-定义springmvc-等同于applicationContext" class="headerlink" title="3.定义springmvc,等同于applicationContext"></a>3.定义springmvc,等同于applicationContext</h4><ol>
<li><strong>配置包扫描所有包含bean 的类（springmvc.xml)</strong></li>
<li><strong>读取bean中上方标注@RequestMapping的内容</strong></li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;wang.yinggang&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="4-定义表现层业务处理器controller-并配成spring的bean-等同于servlet"><a href="#4-定义表现层业务处理器controller-并配成spring的bean-等同于servlet" class="headerlink" title="4.定义表现层业务处理器controller,并配成spring的bean 等同于servlet"></a>4.定义表现层业务处理器controller,并配成spring的bean 等同于servlet</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;UserController....save&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success.jsp&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5-定义UserServlet-success-jsp"><a href="#5-定义UserServlet-success-jsp" class="headerlink" title="5.定义UserServlet(success.jsp)"></a>5.定义UserServlet(success.jsp)</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;第一个mvc界面&lt;/h1&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>springmvc</tag>
      </tags>
  </entry>
  <entry>
    <title>TKMybatis</title>
    <url>/2020/05/04/tkmapper/TKMybatis/</url>
    <content><![CDATA[<h3 id="1-启动类"><a href="#1-启动类" class="headerlink" title="1.启动类"></a>1.启动类</h3><p>创建包com.changgou.goods 包下创建启动类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@MapperScan(basePackages = &#123;&quot;dao&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(GoodsApplication.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong><em>注意：@MapperScan是tk.mybatis.spring.annotation包下的，用于扫描Mapper接口</em></strong> </p>
<h2 id><a href="#" class="headerlink" title></a></h2><h3 id="2-表结构分析"><a href="#2-表结构分析" class="headerlink" title="2 表结构分析"></a>2 表结构分析</h3><p>tb_brand表</p>
<table>
<thead>
<tr>
<th>字段名称</th>
<th>字段含义</th>
<th>字段类型</th>
<th>字段长度</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>品牌id</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>name</td>
<td>品牌名称</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>image</td>
<td>品牌图片地址</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>letter</td>
<td>品牌的首字母</td>
<td>CHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>seq</td>
<td>排序</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="3 代码实现"></a>3 代码实现</h3><h4 id="3-1-findAll"><a href="#3-1-findAll" class="headerlink" title="3.1 findAll()"></a>3.1 findAll()</h4><p>（1）创建pojo包，包下创建Brand实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Table(name=&quot;tb_brand&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Brand</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="keyword">private</span> Integer id;<span class="comment">//品牌id</span></span><br><span class="line">	<span class="keyword">private</span> String name;<span class="comment">//品牌名称</span></span><br><span class="line">	<span class="keyword">private</span> String image;<span class="comment">//品牌图片地址</span></span><br><span class="line">	<span class="keyword">private</span> String letter;<span class="comment">//品牌的首字母</span></span><br><span class="line">	<span class="keyword">private</span> Integer seq;<span class="comment">//排序</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// getter and setter  .....(省略)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>implements Serializable 实现序列化</p>
<p>@Table和@Id都是JPA注解，</p>
<p>@Table用于配置表与实体类的映射关系，</p>
<p>@Id用于标识主键属性。</p>
<p>（2）Dao创建</p>
<p>创建dao.BrandMapper接口，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BrandMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Brand</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>继承了Mapper接口，</strong>就自动实现了增删改查的常用方法。</p>
<p>（3）业务层</p>
<p>创建service.BrandService接口，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BrandService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 查询所有品牌</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span>  List&lt;Brand&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>创建service.impl包，包下创建服务实现类 BrandServiceImpl，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BrandServiceImpl</span> <span class="keyword">implements</span> <span class="title">BrandService</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BrandMapper brandMapper;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Brand&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> brandMapper.selectAll();</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3）控制层</p>
<p>控制层  com.changgou.goods包下创建controller包  ，包下创建类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/brand&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BrandController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BrandService brandService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Brand&gt; brandList = brandService.findAll();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>, StatusCode.OK,<span class="string">&quot;查询成功&quot;</span>,brandList) ;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-2-根据ID查询"><a href="#3-2-根据ID查询" class="headerlink" title="3.2 根据ID查询"></a>3.2 根据ID查询</h4><p>（1） 业务层接口</p>
<p>修改service.BrandService接口，添加根据ID查询品牌数据方法，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据ID查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Brand <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（2）业务层实现</p>
<p>修改service.impl.BrandServiceImpl新增方法，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据ID查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Brand <span class="title">findById</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>  brandMapper.selectByPrimaryKey(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3） 控制层</p>
<p>BrandController新增方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 根据ID查询品牌数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">findById</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span></span>&#123;</span><br><span class="line">    Brand brand = brandService.findById(id);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;查询成功&quot;</span>,brand);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-3-新增"><a href="#3-3-新增" class="headerlink" title="3.3 新增"></a>3.3 新增</h4><p>（1）业务层接口    修改service.BrandService，新增方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 新增品牌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> brand</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Brand brand)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（2）业务层实现  修改service.impl.BrandServiceImpl，新增增加品牌方法代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 增加</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> brand</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Brand brand)</span></span>&#123;</span><br><span class="line">    brandMapper.insertSelective(brand);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3）控制层    BrandController新增方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 新增品牌数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> brand</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">add</span><span class="params">(<span class="meta">@RequestBody</span> Brand brand)</span></span>&#123;</span><br><span class="line">    brandService.add(brand);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-4-修改"><a href="#3-4-修改" class="headerlink" title="3.4 修改"></a>3.4 修改</h4><p>（1） 业务层接口</p>
<p>需改service.BrandService,添加修改品牌方法，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 修改品牌数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> brand</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Brand brand)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（2）业务层实现   修改service.impl.BrandServiceImpl，添加修改品牌方法，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> brand</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Brand brand)</span></span>&#123;</span><br><span class="line">    brandMapper.updateByPrimaryKeySelective(brand);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3）控制层</p>
<p>BrandController新增方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 修改品牌数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> brand</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PutMapping(value=&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">update</span><span class="params">(<span class="meta">@RequestBody</span> Brand brand,<span class="meta">@PathVariable</span> Integer id)</span></span>&#123;</span><br><span class="line">    brand.setId(id);</span><br><span class="line">    brandService.update(brand);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-5-删除"><a href="#3-5-删除" class="headerlink" title="3.5 删除"></a>3.5 删除</h4><p>（1）业务层接口</p>
<p>修改service.BrandService，添加删除品牌方法，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 删除品牌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（2）业务层实现  修改service.impl.BrandServiceImpl，新增删除品牌方法，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">    brandMapper.deleteByPrimaryKey(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3）控制层  BrandController新增方法  </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 根据ID删除品牌数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@DeleteMapping(value = &quot;/&#123;id&#125;&quot; )</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span></span>&#123;</span><br><span class="line">    brandService.delete(id);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-6-条件查询"><a href="#3-6-条件查询" class="headerlink" title="3.6 条件查询"></a>3.6 条件查询</h4><p>（1） 业务层接口</p>
<p>修改service.BrandService，增加根据条件搜索品牌方法，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 多条件搜索品牌方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> searchMap</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Brand&gt; <span class="title">findList</span><span class="params">(Map&lt;String, Object&gt; searchMap)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（2）业务层实现  修改service.impl.BrandServiceImpl，添加根据多条件搜索品牌方法的实现，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 条件查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> searchMap</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Brand&gt; <span class="title">findList</span><span class="params">(Map&lt;String, Object&gt; searchMap)</span></span>&#123;</span><br><span class="line">	Example example=<span class="keyword">new</span> Example(Brand.class);</span><br><span class="line">    Example.Criteria criteria = example.createCriteria();</span><br><span class="line">	<span class="keyword">if</span>(searchMap!=<span class="keyword">null</span>)&#123;</span><br><span class="line">		<span class="comment">// 品牌名称</span></span><br><span class="line">		<span class="keyword">if</span>(searchMap.get(<span class="string">&quot;name&quot;</span>)!=<span class="keyword">null</span> &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(searchMap.get(<span class="string">&quot;name&quot;</span>)))&#123;</span><br><span class="line">			criteria.andLike(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;%&quot;</span>+searchMap.get(<span class="string">&quot;name&quot;</span>)+<span class="string">&quot;%&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 品牌的首字母</span></span><br><span class="line">		<span class="keyword">if</span>(searchMap.get(<span class="string">&quot;letter&quot;</span>)!=<span class="keyword">null</span> &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(searchMap.get(<span class="string">&quot;letter&quot;</span>)))&#123;</span><br><span class="line">			criteria.andEqualTo(<span class="string">&quot;letter&quot;</span>,searchMap.get(<span class="string">&quot;letter&quot;</span>));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> brandMapper.selectByExample(example);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3） 控制层   BrandController新增方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 多条件搜索品牌数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> searchMap</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(value = &quot;/search&quot; )</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">findList</span><span class="params">(<span class="meta">@RequestParam</span> Map searchMap)</span></span>&#123;</span><br><span class="line">	List&lt;Brand&gt; list = brandService.findList(searchMap);</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;查询成功&quot;</span>,list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>测试：Get请求：localhost:9011/brand/search?letter=C&amp;name=传智</strong></p>
<h4 id="3-7-列表分页查询"><a href="#3-7-列表分页查询" class="headerlink" title="3.7 列表分页查询"></a>3.7 列表分页查询</h4><p>（1） 业务层接口  修改service.BrandService添加分页方法，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 分页查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> size</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Page&lt;Brand&gt; <span class="title">findPage</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">int</span> size)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（2）业务层实现  修改service.impl.BrandServiceImpl添加分页方法实现，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> size</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Page&lt;Brand&gt; <span class="title">findPage</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">    PageHelper.startPage(page,size);</span><br><span class="line">    <span class="keyword">return</span> (Page&lt;Brand&gt;)brandMapper.selectAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3） 控制层 BrandController新增方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 分页搜索实现</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> size</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(value = &quot;/search/&#123;page&#125;/&#123;size&#125;&quot; )</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">findPage</span><span class="params">(<span class="meta">@PathVariable</span>  <span class="keyword">int</span> page, <span class="meta">@PathVariable</span>  <span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">	Page&lt;Brand&gt; pageList = brandService.findPage(page, size);</span><br><span class="line">	PageResult pageResult=<span class="keyword">new</span> PageResult(pageList.getTotal(),pageList.getResult());</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;查询成功&quot;</span>,pageResult);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>测试：Get请求：localhost:9011/brand/search/1/3</strong></p>
<h4 id="3-8-列表条件-分页查询"><a href="#3-8-列表条件-分页查询" class="headerlink" title="3.8 列表条件+分页查询"></a>3.8 列表条件+分页查询</h4><p>（1） 业务层接口  修改service.BrandService，增加多条件分页查询方法，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 多条件分页查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> searchMap</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> size</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Page&lt;Brand&gt; <span class="title">findPage</span><span class="params">(Map&lt;String, Object&gt; searchMap, <span class="keyword">int</span> page, <span class="keyword">int</span> size)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（2）业务层实现  修改service.impl.BrandServiceImpl，添加多条件分页查询方法代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 条件+分页查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> searchMap 查询条件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page 页码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> size 页大小</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 分页结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Page&lt;Brand&gt; <span class="title">findPage</span><span class="params">(Map&lt;String,Object&gt; searchMap, <span class="keyword">int</span> page, <span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">    PageHelper.startPage(page,size);</span><br><span class="line">    Example example=<span class="keyword">new</span> Example(Brand.class);</span><br><span class="line">    Example.Criteria criteria = example.createCriteria();</span><br><span class="line">    <span class="keyword">if</span>(searchMap!=<span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="comment">// 品牌名称</span></span><br><span class="line">        <span class="keyword">if</span>(searchMap.get(<span class="string">&quot;name&quot;</span>)!=<span class="keyword">null</span> &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(searchMap.get(<span class="string">&quot;name&quot;</span>)))&#123;</span><br><span class="line">            criteria.andLike(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;%&quot;</span>+searchMap.get(<span class="string">&quot;name&quot;</span>)+<span class="string">&quot;%&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 品牌的首字母</span></span><br><span class="line">        <span class="keyword">if</span>(searchMap.get(<span class="string">&quot;letter&quot;</span>)!=<span class="keyword">null</span> &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(searchMap.get(<span class="string">&quot;letter&quot;</span>)))&#123;</span><br><span class="line">            criteria.andEqualTo(<span class="string">&quot;letter&quot;</span>,searchMap.get(<span class="string">&quot;letter&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (Page&lt;Brand&gt;)brandMapper.selectByExample(example);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3）控制层  BrandController新增方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 分页搜索实现</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> searchMap</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> size</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(value = &quot;/search/&#123;page&#125;/&#123;size&#125;&quot; )</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">findPage</span><span class="params">(<span class="meta">@RequestParam</span> Map searchMap, <span class="meta">@PathVariable</span>  <span class="keyword">int</span> page, <span class="meta">@PathVariable</span>  <span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">	Page&lt;Brand&gt; pageList = brandService.findPage(searchMap, page, size);</span><br><span class="line">	PageResult pageResult=<span class="keyword">new</span> PageResult(pageList.getTotal(),pageList.getResult());</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;查询成功&quot;</span>,pageResult);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试：Get请求：localhost:9011/brand/searchPage/1/3/?letter=C</p>
]]></content>
      <tags>
        <tag>TKMybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>vue</title>
    <url>/2020/05/14/vue/vue%E7%9A%84%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82/</url>
    <content><![CDATA[<h3 id="vue的异步请求"><a href="#vue的异步请求" class="headerlink" title="vue的异步请求"></a>vue的异步请求</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&quot;#div&quot;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            name:<span class="string">&quot;张三&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            <span class="function"><span class="title">send</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="comment">// GET方式请求</span></span><br><span class="line">                <span class="comment">// axios.get(&quot;testServlet?name=&quot; + this.name)</span></span><br><span class="line">                <span class="comment">//     .then(resp =&gt; &#123;</span></span><br><span class="line">                <span class="comment">//         alert(resp.data);</span></span><br><span class="line">                <span class="comment">//     &#125;)</span></span><br><span class="line">                <span class="comment">//     .catch(error =&gt; &#123;</span></span><br><span class="line">                <span class="comment">//         alert(error);</span></span><br><span class="line">                <span class="comment">//     &#125;)</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// POST方式请求</span></span><br><span class="line">                axios.post(<span class="string">&quot;testServlet&quot;</span>,<span class="string">&quot;name=&quot;</span>+<span class="built_in">this</span>.name)</span><br><span class="line">                    .then(<span class="function"><span class="params">resp</span> =&gt;</span> &#123;</span><br><span class="line">                        alert(resp.data);</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                        alert(error);</span><br><span class="line">                    &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式ID生成解决方案</title>
    <url>/2020/03/04/%E5%88%86%E5%B8%83%E5%BC%8Fid/%E5%88%86%E5%B8%83%E5%BC%8Fid/</url>
    <content><![CDATA[<h2 id="分布式ID生成解决方案"><a href="#分布式ID生成解决方案" class="headerlink" title="分布式ID生成解决方案"></a>分布式ID生成解决方案</h2><h3 id="1-分布式ID生成解决方案"><a href="#1-分布式ID生成解决方案" class="headerlink" title="1 分布式ID生成解决方案"></a>1 分布式ID生成解决方案</h3><h4 id="1-1-UUID"><a href="#1-1-UUID" class="headerlink" title="1.1 UUID"></a>1.1 UUID</h4><p>常见的方式。可以利用数据库也可以利用程序生成，一般来说保证id全局唯一。</p>
<p>优点：</p>
<p>1）简单，代码方便。</p>
<p>2）生成ID性能非常好，基本不会有性能问题。</p>
<p>3）全局唯一，在遇见数据迁移，系统数据合并，或者数据库变更等情况下，可以从容应对。</p>
<p> 缺点：</p>
<p>1）<strong>没有排序</strong>，无法保证趋势递增。</p>
<p>2）UUID往往是使用<strong>字符串存储</strong>，<strong>查询的效率</strong>比较低。</p>
<p>3）<strong>存储空间比较大</strong>，如果是海量数据库，就需要考虑存储量的问题。</p>
<p>4）<strong>传输数据量</strong>大</p>
<p>5）<strong>不可读</strong>。</p>
<h4 id="1-2-Redis"><a href="#1-2-Redis" class="headerlink" title="1.2 Redis"></a>1.2 Redis</h4><p>当使用数据库来生成ID性能不够要求的时候，我们可以尝试使用Redis来生成ID。这主要依赖于Redis是单线程的，所以也可以用生成全局唯一的ID。可以用Redis的原子操作 INCR和INCRBY来实现。</p>
<p>优点：</p>
<p>1）不依赖于数据库，灵活方便，且性能优于数据库。</p>
<p>2）数字ID天然排序，对分页或者需要排序的结果很有帮助。</p>
<p>缺点：</p>
<p>1）如果系统中没有Redis，还需要<strong>引入新的组件</strong>，增加系统复杂度。</p>
<p>2）需要编码和配置的工作量比较大。</p>
<p>3）<strong>网络传输</strong>造成性能下降。</p>
<h4 id="1-3-开源算法snowflake"><a href="#1-3-开源算法snowflake" class="headerlink" title="1.3 开源算法snowflake"></a>1.3 开源算法snowflake</h4><p> snowflake是Twitter开源的分布式ID生成算法，结果是一个long型的ID。其核心思想是：</p>
<p>使用：</p>
<p>41bit作为毫秒数，</p>
<p>10bit作为机器的ID（5个bit是数据中心，5个bit的机器ID），</p>
<p>12bit作为毫秒内的流水号（意味着每个节点在每毫秒可以产生 4096 个 ID），</p>
<p>最后还有一个符号位，永远是0</p>
<p><img src="/2020/03/04/%E5%88%86%E5%B8%83%E5%BC%8Fid/%E5%88%86%E5%B8%83%E5%BC%8Fid/4-2.png"></p>
<h3 id="2-snowflake快速入门"><a href="#2-snowflake快速入门" class="headerlink" title="2 snowflake快速入门"></a>2 snowflake快速入门</h3><h4 id="2-1-快速入门"><a href="#2-1-快速入门" class="headerlink" title="2.1 快速入门"></a>2.1 快速入门</h4><p>（1）新建工程，将资料/工具类下的IdWorker.java拷贝到工程中。</p>
<p>（2）编写代码</p>
<p>5个bit是数据中心，5个bit的机器ID</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">IdWorker idWorker=<span class="keyword">new</span> IdWorker(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10000</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">long</span> id = idWorker.nextId();</span><br><span class="line">    System.out.println(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-2-配置分布式ID生成器"><a href="#2-2-配置分布式ID生成器" class="headerlink" title="2.2 配置分布式ID生成器"></a>2.2 配置分布式ID生成器</h4><p>（1）IdWorker.java拷贝到yigou_common工程com.yigou.util包中</p>
<p>（2）yigou_service_goods的application.yml添加配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">workerId:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">datacenterId:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>（3）修改GoodsApplication，增加代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;workerId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Integer workerId;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value(&quot;$&#123;datacenterId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Integer datacenterId;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> IdWorker <span class="title">idWorker</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> IdWorker(workerId,datacenterId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>分布式ID</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper_javaAPI操作</title>
    <url>/2019/12/09/zookeeper/zookeeper_javaAPI%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="zookeeper-javaAPI操作"><a href="#zookeeper-javaAPI操作" class="headerlink" title="zookeeper_javaAPI操作"></a>zookeeper_javaAPI操作</h1><h2 id="1、建立连接"><a href="#1、建立连接" class="headerlink" title="1、建立连接"></a>1、建立连接</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 建立连接</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param connectString       连接字符串。zk server 地址和端口 &quot;192.168.149.135:2181,192.168.149.136:2181&quot;</span></span><br><span class="line"><span class="comment">     * @param sessionTimeoutMs    会话超时时间 单位ms</span></span><br><span class="line"><span class="comment">     * @param connectionTimeoutMs 连接超时时间 单位ms</span></span><br><span class="line"><span class="comment">     * @param retryPolicy         重试策略</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   <span class="comment">/* //重试策略</span></span><br><span class="line"><span class="comment">    RetryPolicy retryPolicy = new ExponentialBackoffRetry(3000,10);</span></span><br><span class="line"><span class="comment">    //1.第一种方式</span></span><br><span class="line"><span class="comment">    CuratorFramework client = CuratorFrameworkFactory.newClient(&quot;192.168.149.135:2181&quot;,</span></span><br><span class="line"><span class="comment">            60 * 1000, 15 * 1000, retryPolicy);*/</span></span><br><span class="line">    <span class="comment">//重试策略</span></span><br><span class="line">    RetryPolicy retryPolicy = <span class="keyword">new</span> ExponentialBackoffRetry(<span class="number">3000</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="comment">//2.第二种方式</span></span><br><span class="line">    <span class="comment">//CuratorFrameworkFactory.builder();</span></span><br><span class="line">    client = CuratorFrameworkFactory.builder()</span><br><span class="line">            .connectString(<span class="string">&quot;192.168.149.135:2181&quot;</span>)</span><br><span class="line">            .sessionTimeoutMs(<span class="number">60</span> * <span class="number">1000</span>)</span><br><span class="line">            .connectionTimeoutMs(<span class="number">15</span> * <span class="number">1000</span>)</span><br><span class="line">            .retryPolicy(retryPolicy)</span><br><span class="line">            .namespace(<span class="string">&quot;itheima&quot;</span>)</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开启连接</span></span><br><span class="line">    client.start();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2、操作节点"><a href="#2、操作节点" class="headerlink" title="2、操作节点"></a>2、操作节点</h2><h3 id="2-1-创建节点"><a href="#2-1-创建节点" class="headerlink" title="2.1 创建节点"></a>2.1 创建节点</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//==============================create=============================================================================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建节点：create 持久 临时 顺序 数据</span></span><br><span class="line"><span class="comment">     * 1. 基本创建 ：create().forPath(&quot;&quot;)</span></span><br><span class="line"><span class="comment">     * 2. 创建节点 带有数据:create().forPath(&quot;&quot;,data)</span></span><br><span class="line"><span class="comment">     * 3. 设置节点的类型：create().withMode().forPath(&quot;&quot;,data)</span></span><br><span class="line"><span class="comment">     * 4. 创建多级节点  /app1/p1 ：create().creatingParentsIfNeeded().forPath(&quot;&quot;,data)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCreate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//2. 创建节点 带有数据</span></span><br><span class="line">        <span class="comment">//如果创建节点，没有指定数据，则默认将当前客户端的ip作为数据存储</span></span><br><span class="line">        String path = client.create().forPath(<span class="string">&quot;/app2&quot;</span>, <span class="string">&quot;hehe&quot;</span>.getBytes());</span><br><span class="line">        System.out.println(path);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCreate2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1. 基本创建</span></span><br><span class="line">        <span class="comment">//如果创建节点，没有指定数据，则默认将当前客户端的ip作为数据存储</span></span><br><span class="line">        String path = client.create().forPath(<span class="string">&quot;/app1&quot;</span>);</span><br><span class="line">        System.out.println(path);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCreate3</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//3. 设置节点的类型</span></span><br><span class="line">        <span class="comment">//默认类型：持久化</span></span><br><span class="line">        String path = client.create().withMode(CreateMode.EPHEMERAL).forPath(<span class="string">&quot;/app3&quot;</span>);</span><br><span class="line">        System.out.println(path);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCreate4</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//4. 创建多级节点  /app1/p1</span></span><br><span class="line">        <span class="comment">//creatingParentsIfNeeded():如果父节点不存在，则创建父节点</span></span><br><span class="line">        String path = client.create().creatingParentsIfNeeded().forPath(<span class="string">&quot;/app4/p1&quot;</span>);</span><br><span class="line">        System.out.println(path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-2-查询节点"><a href="#2-2-查询节点" class="headerlink" title="2.2 查询节点"></a>2.2 查询节点</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//===========================get================================================================================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询节点：</span></span><br><span class="line"><span class="comment">     * 1. 查询数据：get: getData().forPath()</span></span><br><span class="line"><span class="comment">     * 2. 查询子节点： ls: getChildren().forPath()</span></span><br><span class="line"><span class="comment">     * 3. 查询节点状态信息：ls -s:getData().storingStatIn(状态对象).forPath()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGet1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1. 查询数据：get</span></span><br><span class="line">        <span class="keyword">byte</span>[] data = client.getData().forPath(<span class="string">&quot;/app1&quot;</span>);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(data));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGet2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 2. 查询子节点： ls</span></span><br><span class="line">        List&lt;String&gt; path = client.getChildren().forPath(<span class="string">&quot;/&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGet3</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Stat status = <span class="keyword">new</span> Stat();</span><br><span class="line">        System.out.println(status);</span><br><span class="line">        <span class="comment">//3. 查询节点状态信息：ls -s</span></span><br><span class="line">        client.getData().storingStatIn(status).forPath(<span class="string">&quot;/app1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(status);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<h3 id="2-3-修改数据"><a href="#2-3-修改数据" class="headerlink" title="2.3 修改数据"></a>2.3 修改数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//===========================set================================================================================</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 修改数据</span></span><br><span class="line"><span class="comment">  * 1. 基本修改数据：setData().forPath()</span></span><br><span class="line"><span class="comment">  * 2. 根据版本修改: setData().withVersion().forPath()</span></span><br><span class="line"><span class="comment">  * * version 是通过查询出来的。目的就是为了让其他客户端或者线程不干扰我。</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">     client.setData().forPath(<span class="string">&quot;/app1&quot;</span>, <span class="string">&quot;itcast&quot;</span>.getBytes());</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSetForVersion</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">     Stat status = <span class="keyword">new</span> Stat();</span><br><span class="line">     <span class="comment">//3. 查询节点状态信息：ls -s</span></span><br><span class="line">     client.getData().storingStatIn(status).forPath(<span class="string">&quot;/app1&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="keyword">int</span> version = status.getVersion();<span class="comment">//查询出来的 3</span></span><br><span class="line">     System.out.println(version);</span><br><span class="line">     client.setData().withVersion(version).forPath(<span class="string">&quot;/app1&quot;</span>, <span class="string">&quot;hehe&quot;</span>.getBytes());</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-4-删除节点"><a href="#2-4-删除节点" class="headerlink" title="2.4  删除节点"></a>2.4  删除节点</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//===========================delete================================================================================</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 删除节点： delete deleteall</span></span><br><span class="line"><span class="comment">   * 1. 删除单个节点:delete().forPath(&quot;/app1&quot;);</span></span><br><span class="line"><span class="comment">   * 2. 删除带有子节点的节点:delete().deletingChildrenIfNeeded().forPath(&quot;/app1&quot;);</span></span><br><span class="line"><span class="comment">   * 3. 必须成功的删除:为了防止网络抖动。本质就是重试。  client.delete().guaranteed().forPath(&quot;/app2&quot;);</span></span><br><span class="line"><span class="comment">   * 4. 回调：inBackground</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">// 1. 删除单个节点</span></span><br><span class="line">      client.delete().forPath(<span class="string">&quot;/app1&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">//2. 删除带有子节点的节点</span></span><br><span class="line">      client.delete().deletingChildrenIfNeeded().forPath(<span class="string">&quot;/app4&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete3</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">//3. 必须成功的删除</span></span><br><span class="line">      client.delete().guaranteed().forPath(<span class="string">&quot;/app2&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete4</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">//4. 回调</span></span><br><span class="line">      client.delete().guaranteed().inBackground(<span class="keyword">new</span> BackgroundCallback()&#123;</span><br><span class="line"></span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processResult</span><span class="params">(CuratorFramework client, CuratorEvent event)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">              System.out.println(<span class="string">&quot;我被删除了~&quot;</span>);</span><br><span class="line">              System.out.println(event);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;).forPath(<span class="string">&quot;/app1&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@After</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (client != <span class="keyword">null</span>) &#123;</span><br><span class="line">          client.close();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3、watch监听"><a href="#3、watch监听" class="headerlink" title="3、watch监听"></a>3、watch监听</h2><h3 id="3-1-NodeCache"><a href="#3-1-NodeCache" class="headerlink" title="3.1 NodeCache"></a>3.1 NodeCache</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 演示 NodeCache：给指定一个节点注册监听器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testNodeCache</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//1. 创建NodeCache对象</span></span><br><span class="line">    <span class="keyword">final</span> NodeCache nodeCache = <span class="keyword">new</span> NodeCache(client,<span class="string">&quot;/app1&quot;</span>);</span><br><span class="line">    <span class="comment">//2. 注册监听</span></span><br><span class="line">    nodeCache.getListenable().addListener(<span class="keyword">new</span> NodeCacheListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">nodeChanged</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;节点变化了~&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取修改节点后的数据</span></span><br><span class="line">            <span class="keyword">byte</span>[] data = nodeCache.getCurrentData().getData();</span><br><span class="line">            System.out.println(<span class="keyword">new</span> String(data));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 开启监听.如果设置为true，则开启监听是，加载缓冲数据</span></span><br><span class="line">    nodeCache.start(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-2-PathChildrenCache"><a href="#3-2-PathChildrenCache" class="headerlink" title="3.2 PathChildrenCache"></a>3.2 PathChildrenCache</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 演示 PathChildrenCache：监听某个节点的所有子节点们</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPathChildrenCache</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建监听对象</span></span><br><span class="line">    PathChildrenCache pathChildrenCache = <span class="keyword">new</span> PathChildrenCache(client,<span class="string">&quot;/app2&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 绑定监听器</span></span><br><span class="line">    pathChildrenCache.getListenable().addListener(<span class="keyword">new</span> PathChildrenCacheListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">childEvent</span><span class="params">(CuratorFramework client, PathChildrenCacheEvent event)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;子节点变化了~&quot;</span>);</span><br><span class="line">            System.out.println(event);</span><br><span class="line">            <span class="comment">//监听子节点的数据变更，并且拿到变更后的数据</span></span><br><span class="line">            <span class="comment">//1.获取类型</span></span><br><span class="line">            PathChildrenCacheEvent.Type type = event.getType();</span><br><span class="line">            <span class="comment">//2.判断类型是否是update</span></span><br><span class="line">            <span class="keyword">if</span>(type.equals(PathChildrenCacheEvent.Type.CHILD_UPDATED))&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;数据变了！！！&quot;</span>);</span><br><span class="line">                <span class="keyword">byte</span>[] data = event.getData().getData();</span><br><span class="line">                System.out.println(<span class="keyword">new</span> String(data));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//3. 开启</span></span><br><span class="line">    pathChildrenCache.start();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-3-TreeCache"><a href="#3-3-TreeCache" class="headerlink" title="3.3 TreeCache"></a>3.3 TreeCache</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 演示 TreeCache：监听某个节点自己和所有子节点们</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTreeCache</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//1. 创建监听器</span></span><br><span class="line">    TreeCache treeCache = <span class="keyword">new</span> TreeCache(client,<span class="string">&quot;/app2&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 注册监听</span></span><br><span class="line">    treeCache.getListenable().addListener(<span class="keyword">new</span> TreeCacheListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">childEvent</span><span class="params">(CuratorFramework client, TreeCacheEvent event)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;节点变化了&quot;</span>);</span><br><span class="line">            System.out.println(event);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 开启</span></span><br><span class="line">    treeCache.start();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>POI工具类</title>
    <url>/2019/11/07/%E5%B7%A5%E5%85%B7%E7%B1%BB/POI%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="POI工具类"><a href="#POI工具类" class="headerlink" title="POI工具类"></a>POI工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Cell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Row;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Sheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">POIUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String xls = <span class="string">&quot;xls&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String xlsx = <span class="string">&quot;xlsx&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DATE_FORMAT = <span class="string">&quot;yyyy/MM/dd&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读入excel文件，解析后返回</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;String[]&gt; readExcel(MultipartFile file) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//检查文件</span></span><br><span class="line">        checkFile(file);</span><br><span class="line">        <span class="comment">//获得Workbook工作薄对象</span></span><br><span class="line">        Workbook workbook = getWorkBook(file);</span><br><span class="line">        <span class="comment">//创建返回对象，把每行中的值作为一个数组，所有行作为一个集合返回</span></span><br><span class="line">        List&lt;String[]&gt; list = <span class="keyword">new</span> ArrayList&lt;String[]&gt;();</span><br><span class="line">        <span class="keyword">if</span>(workbook != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> sheetNum = <span class="number">0</span>;sheetNum &lt; workbook.getNumberOfSheets();sheetNum++)&#123;</span><br><span class="line">                <span class="comment">//获得当前sheet工作表</span></span><br><span class="line">                Sheet sheet = workbook.getSheetAt(sheetNum);</span><br><span class="line">                <span class="keyword">if</span>(sheet == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//获得当前sheet的开始行</span></span><br><span class="line">                <span class="keyword">int</span> firstRowNum  = sheet.getFirstRowNum();</span><br><span class="line">                <span class="comment">//获得当前sheet的结束行</span></span><br><span class="line">                <span class="keyword">int</span> lastRowNum = sheet.getLastRowNum();</span><br><span class="line">                <span class="comment">//循环除了第一行的所有行</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> rowNum = firstRowNum+<span class="number">1</span>;rowNum &lt;= lastRowNum;rowNum++)&#123;</span><br><span class="line">                    <span class="comment">//获得当前行</span></span><br><span class="line">                    Row row = sheet.getRow(rowNum);</span><br><span class="line">                    <span class="keyword">if</span>(row == <span class="keyword">null</span>)&#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//获得当前行的开始列</span></span><br><span class="line">                    <span class="keyword">int</span> firstCellNum = row.getFirstCellNum();</span><br><span class="line">                    <span class="comment">//获得当前行的列数</span></span><br><span class="line">                    <span class="keyword">int</span> lastCellNum = row.getPhysicalNumberOfCells();</span><br><span class="line">                    String[] cells = <span class="keyword">new</span> String[row.getPhysicalNumberOfCells()];</span><br><span class="line">                    <span class="comment">//循环当前行</span></span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> cellNum = firstCellNum; cellNum &lt; lastCellNum;cellNum++)&#123;</span><br><span class="line">                        Cell cell = row.getCell(cellNum);</span><br><span class="line">                        cells[cellNum] = getCellValue(cell);</span><br><span class="line">                    &#125;</span><br><span class="line">                    list.add(cells);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            workbook.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//校验文件是否合法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkFile</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        <span class="comment">//判断文件是否存在</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == file)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> FileNotFoundException(<span class="string">&quot;文件不存在！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获得文件名</span></span><br><span class="line">        String fileName = file.getOriginalFilename();</span><br><span class="line">        <span class="comment">//判断文件是否是excel文件</span></span><br><span class="line">        <span class="keyword">if</span>(!fileName.endsWith(xls) &amp;&amp; !fileName.endsWith(xlsx))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IOException(fileName + <span class="string">&quot;不是excel文件&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Workbook <span class="title">getWorkBook</span><span class="params">(MultipartFile file)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获得文件名</span></span><br><span class="line">        String fileName = file.getOriginalFilename();</span><br><span class="line">        <span class="comment">//创建Workbook工作薄对象，表示整个excel</span></span><br><span class="line">        Workbook workbook = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取excel文件的io流</span></span><br><span class="line">            InputStream is = file.getInputStream();</span><br><span class="line">            <span class="comment">//根据文件后缀名不同(xls和xlsx)获得不同的Workbook实现类对象</span></span><br><span class="line">            <span class="keyword">if</span>(fileName.endsWith(xls))&#123;</span><br><span class="line">                <span class="comment">//2003</span></span><br><span class="line">                workbook = <span class="keyword">new</span> HSSFWorkbook(is);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(fileName.endsWith(xlsx))&#123;</span><br><span class="line">                <span class="comment">//2007</span></span><br><span class="line">                workbook = <span class="keyword">new</span> XSSFWorkbook(is);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> workbook;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCellValue</span><span class="params">(Cell cell)</span></span>&#123;</span><br><span class="line">        String cellValue = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(cell == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> cellValue;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果当前单元格内容为日期类型，需要特殊处理</span></span><br><span class="line">        String dataFormatString = cell.getCellStyle().getDataFormatString();</span><br><span class="line">        <span class="keyword">if</span>(dataFormatString.equals(<span class="string">&quot;m/d/yy&quot;</span>))&#123;</span><br><span class="line">            cellValue = <span class="keyword">new</span> SimpleDateFormat(DATE_FORMAT).format(cell.getDateCellValue());</span><br><span class="line">            <span class="keyword">return</span> cellValue;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//把数字当成String来读，避免出现1读成1.0的情况</span></span><br><span class="line">        <span class="keyword">if</span>(cell.getCellType() == Cell.CELL_TYPE_NUMERIC)&#123;</span><br><span class="line">            cell.setCellType(Cell.CELL_TYPE_STRING);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断数据的类型</span></span><br><span class="line">        <span class="keyword">switch</span> (cell.getCellType())&#123;</span><br><span class="line">            <span class="keyword">case</span> Cell.CELL_TYPE_NUMERIC: <span class="comment">//数字</span></span><br><span class="line">                cellValue = String.valueOf(cell.getNumericCellValue());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> Cell.CELL_TYPE_STRING: <span class="comment">//字符串</span></span><br><span class="line">                cellValue = String.valueOf(cell.getStringCellValue());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> Cell.CELL_TYPE_BOOLEAN: <span class="comment">//Boolean</span></span><br><span class="line">                cellValue = String.valueOf(cell.getBooleanCellValue());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> Cell.CELL_TYPE_FORMULA: <span class="comment">//公式</span></span><br><span class="line">                cellValue = String.valueOf(cell.getCellFormula());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> Cell.CELL_TYPE_BLANK: <span class="comment">//空值</span></span><br><span class="line">                cellValue = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> Cell.CELL_TYPE_ERROR: <span class="comment">//故障</span></span><br><span class="line">                cellValue = <span class="string">&quot;非法字符&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                cellValue = <span class="string">&quot;未知类型&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cellValue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>七牛云工具类</title>
    <url>/2019/08/07/%E5%B7%A5%E5%85%B7%E7%B1%BB/QiniuUtils%20%E4%B8%83%E7%89%9B%E4%BA%91%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="QiniuUtils-七牛云工具类"><a href="#QiniuUtils-七牛云工具类" class="headerlink" title="QiniuUtils 七牛云工具类"></a>QiniuUtils 七牛云工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.qiniu;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.common.QiniuException;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.common.Zone;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.http.Response;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.storage.BucketManager;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.storage.Configuration;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.storage.UploadManager;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.storage.model.DefaultPutRet;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.util.Auth;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 七牛云工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QiniuUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> String accessKey = <span class="string">&quot;KDo9LL8F4WU1xY54mAjLlPp-Kz9IHyhtfApTmtNIg&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> String secretKey = <span class="string">&quot;U5ahF9J_KdiPgiX3PNdFyUsZOcyGKwKSke9Uigzrq&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> String bucket = <span class="string">&quot;wangyinggang&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">upload2Qiniu</span><span class="params">(String filePath,String fileName)</span></span>&#123;</span><br><span class="line">        <span class="comment">//构造一个带指定 Region 对象的配置类</span></span><br><span class="line">        Configuration cfg = <span class="keyword">new</span> Configuration(Zone.zone2());</span><br><span class="line"><span class="comment">//...其他参数参考类注释</span></span><br><span class="line"></span><br><span class="line">        UploadManager uploadManager = <span class="keyword">new</span> UploadManager(cfg);</span><br><span class="line"><span class="comment">//...生成上传凭证，然后准备上传</span></span><br><span class="line"></span><br><span class="line">        String localFilePath = filePath;</span><br><span class="line"><span class="comment">//默认不指定key的情况下，以文件内容的hash值作为文件名</span></span><br><span class="line">        String key = fileName;</span><br><span class="line"></span><br><span class="line">        Auth auth = Auth.create(accessKey, secretKey);</span><br><span class="line">        String upToken = auth.uploadToken(bucket);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Response response = uploadManager.put(localFilePath, key, upToken);</span><br><span class="line">            <span class="comment">//解析上传成功的结果</span></span><br><span class="line">            DefaultPutRet putRet = <span class="keyword">new</span> Gson().fromJson(response.bodyString(), DefaultPutRet.class);</span><br><span class="line">            System.out.println(putRet.key);</span><br><span class="line">            System.out.println(putRet.hash);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (QiniuException ex) &#123;</span><br><span class="line">            Response r = ex.response;</span><br><span class="line">            System.err.println(r.toString());</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.err.println(r.bodyString());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (QiniuException ex2) &#123;</span><br><span class="line">                <span class="comment">//ignore</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//上传文件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">upload2Qiniu</span><span class="params">(<span class="keyword">byte</span>[] bytes, String fileName)</span></span>&#123;</span><br><span class="line">        <span class="comment">//构造一个带指定Zone对象的配置类</span></span><br><span class="line">        Configuration cfg = <span class="keyword">new</span> Configuration(Zone.zone2());</span><br><span class="line">        <span class="comment">//...其他参数参考类注释</span></span><br><span class="line">        UploadManager uploadManager = <span class="keyword">new</span> UploadManager(cfg);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//默认不指定key的情况下，以文件内容的hash值作为文件名</span></span><br><span class="line">        String key = fileName;</span><br><span class="line">        Auth auth = Auth.create(accessKey, secretKey);</span><br><span class="line">        String upToken = auth.uploadToken(bucket);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Response response = uploadManager.put(bytes, key, upToken);</span><br><span class="line">            <span class="comment">//解析上传成功的结果</span></span><br><span class="line">            DefaultPutRet putRet = <span class="keyword">new</span> Gson().fromJson(response.bodyString(), DefaultPutRet.class);</span><br><span class="line">            System.out.println(putRet.key);</span><br><span class="line">            System.out.println(putRet.hash);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (QiniuException ex) &#123;</span><br><span class="line">            Response r = ex.response;</span><br><span class="line">            System.err.println(r.toString());</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.err.println(r.bodyString());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (QiniuException ex2) &#123;</span><br><span class="line">                <span class="comment">//ignore</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除文件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteFileFromQiniu</span><span class="params">(String fileName)</span></span>&#123;</span><br><span class="line">        <span class="comment">//构造一个带指定 Region 对象的配置类</span></span><br><span class="line">        Configuration cfg = <span class="keyword">new</span> Configuration(Zone.zone2());</span><br><span class="line"><span class="comment">//...其他参数参考类注释</span></span><br><span class="line"></span><br><span class="line">        String key = fileName;</span><br><span class="line"></span><br><span class="line">        Auth auth = Auth.create(accessKey, secretKey);</span><br><span class="line">        BucketManager bucketManager = <span class="keyword">new</span> BucketManager(auth, cfg);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            bucketManager.delete(bucket, key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (QiniuException ex) &#123;</span><br><span class="line">            <span class="comment">//如果遇到异常，说明删除失败</span></span><br><span class="line">            System.err.println(ex.code());</span><br><span class="line">            System.err.println(ex.response.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>日期转换工具类</title>
    <url>/2019/11/07/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E6%97%A5%E6%9C%9F%E8%BD%AC%E6%8D%A2%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="日期转换工具类"><a href="#日期转换工具类" class="headerlink" title="日期转换工具类"></a>日期转换工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日期操作工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 日期转换-  String -&gt; Date</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dateString 字符串时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Date类型信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception 抛出异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">parseString2Date</span><span class="params">(String dateString)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dateString == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parseString2Date(dateString, <span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 日期转换-  String -&gt; Date</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dateString 字符串时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pattern    格式模板</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Date类型信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception 抛出异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">parseString2Date</span><span class="params">(String dateString, String pattern)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dateString == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(pattern);</span><br><span class="line">        Date date = sdf.parse(dateString);</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 日期转换 Date -&gt; String</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date Date类型信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 字符串时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception 抛出异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">parseDate2String</span><span class="params">(Date date)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (date == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parseDate2String(date, <span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 日期转换 Date -&gt; String</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date    Date类型信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pattern 格式模板</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 字符串时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception 抛出异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">parseDate2String</span><span class="params">(Date date, String pattern)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (date == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(pattern);</span><br><span class="line">        String strDate = sdf.format(date);</span><br><span class="line">        <span class="keyword">return</span> strDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前日期的本周一是几号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 本周一的日期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getThisWeekMonday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Calendar cal = Calendar.getInstance();</span><br><span class="line">        cal.setTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="comment">// 获得当前日期是一个星期的第几天</span></span><br><span class="line">        <span class="keyword">int</span> dayWeek = cal.get(Calendar.DAY_OF_WEEK);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span> == dayWeek) &#123;</span><br><span class="line">            cal.add(Calendar.DAY_OF_MONTH, -<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置一个星期的第一天，按中国的习惯一个星期的第一天是星期一</span></span><br><span class="line">        cal.setFirstDayOfWeek(Calendar.MONDAY);</span><br><span class="line">        <span class="comment">// 获得当前日期是一个星期的第几天</span></span><br><span class="line">        <span class="keyword">int</span> day = cal.get(Calendar.DAY_OF_WEEK);</span><br><span class="line">        <span class="comment">// 根据日历的规则，给当前日期减去星期几与一个星期第一天的差值</span></span><br><span class="line">        cal.add(Calendar.DATE, cal.getFirstDayOfWeek() - day);</span><br><span class="line">        <span class="keyword">return</span> cal.getTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前日期周的最后一天</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 当前日期周的最后一天</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getSundayOfThisWeek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Calendar c = Calendar.getInstance();</span><br><span class="line">        <span class="keyword">int</span> dayOfWeek = c.get(Calendar.DAY_OF_WEEK) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (dayOfWeek == <span class="number">0</span>) &#123;</span><br><span class="line">            dayOfWeek = <span class="number">7</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        c.add(Calendar.DATE, -dayOfWeek + <span class="number">7</span>);</span><br><span class="line">        <span class="keyword">return</span> c.getTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据日期区间获取月份列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> minDate 开始时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maxDate 结束时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 月份列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">getMonthBetween</span><span class="params">(String minDate, String maxDate, String format)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Calendar min = Calendar.getInstance();</span><br><span class="line">        Calendar max = Calendar.getInstance();</span><br><span class="line"></span><br><span class="line">        min.setTime(sdf.parse(minDate));</span><br><span class="line">        min.set(min.get(Calendar.YEAR), min.get(Calendar.MONTH), <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        max.setTime(sdf.parse(maxDate));</span><br><span class="line">        max.set(max.get(Calendar.YEAR), max.get(Calendar.MONTH), <span class="number">2</span>);</span><br><span class="line">        SimpleDateFormat sdf2 = <span class="keyword">new</span> SimpleDateFormat(format);</span><br><span class="line"></span><br><span class="line">        Calendar curr = min;</span><br><span class="line">        <span class="keyword">while</span> (curr.before(max)) &#123;</span><br><span class="line">            result.add(sdf2.format(curr.getTime()));</span><br><span class="line">            curr.add(Calendar.MONTH, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据日期获取年度中的周索引</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date 日期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 周索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">getWeekOfYear</span><span class="params">(String date)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Date useDate = parseString2Date(date);</span><br><span class="line">        Calendar cal = Calendar.getInstance();</span><br><span class="line">        cal.setTime(useDate);</span><br><span class="line">        <span class="keyword">return</span> cal.get(Calendar.WEEK_OF_YEAR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据年份获取年中周列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> year 年分</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 周列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;Integer, String&gt; <span class="title">getWeeksOfYear</span><span class="params">(String year)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Date useDate = parseString2Date(year, <span class="string">&quot;yyyy&quot;</span>);</span><br><span class="line">        Calendar cal = Calendar.getInstance();</span><br><span class="line">        cal.setTime(useDate);</span><br><span class="line">        <span class="comment">//获取年中周数量</span></span><br><span class="line">        <span class="keyword">int</span> weeksCount = cal.getWeeksInWeekYear();</span><br><span class="line">        Map&lt;Integer, String&gt; mapWeeks = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">55</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; weeksCount; i++) &#123;</span><br><span class="line">            cal.get(Calendar.DAY_OF_YEAR);</span><br><span class="line">            mapWeeks.put(i + <span class="number">1</span>, parseDate2String(getFirstDayOfWeek(cal.get(Calendar.YEAR), i)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mapWeeks;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取某年的第几周的开始日期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> year 年分</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> week 周索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 开始日期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getFirstDayOfWeek</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> week)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Calendar c = <span class="keyword">new</span> GregorianCalendar();</span><br><span class="line">        c.set(Calendar.YEAR, year);</span><br><span class="line">        c.set(Calendar.MONTH, Calendar.JANUARY);</span><br><span class="line">        c.set(Calendar.DATE, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        Calendar cal = (GregorianCalendar) c.clone();</span><br><span class="line">        cal.add(Calendar.DATE, week * <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> getFirstDayOfWeek(cal.getTime());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取某年的第几周的结束日期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> year 年份</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> week 周索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结束日期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getLastDayOfWeek</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> week)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Calendar c = <span class="keyword">new</span> GregorianCalendar();</span><br><span class="line">        c.set(Calendar.YEAR, year);</span><br><span class="line">        c.set(Calendar.MONTH, Calendar.JANUARY);</span><br><span class="line">        c.set(Calendar.DATE, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        Calendar cal = (GregorianCalendar) c.clone();</span><br><span class="line">        cal.add(Calendar.DATE, week * <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> getLastDayOfWeek(cal.getTime());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前时间所在周的开始日期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date 当前时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 开始时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getFirstDayOfWeek</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">        Calendar c = <span class="keyword">new</span> GregorianCalendar();</span><br><span class="line">        c.setFirstDayOfWeek(Calendar.SUNDAY);</span><br><span class="line">        c.setTime(date);</span><br><span class="line">        c.set(Calendar.DAY_OF_WEEK, c.getFirstDayOfWeek());</span><br><span class="line">        <span class="keyword">return</span> c.getTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前时间所在周的结束日期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date 当前时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结束日期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getLastDayOfWeek</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">        Calendar c = <span class="keyword">new</span> GregorianCalendar();</span><br><span class="line">        c.setFirstDayOfWeek(Calendar.SUNDAY);</span><br><span class="line">        c.setTime(date);</span><br><span class="line">        c.set(Calendar.DAY_OF_WEEK, c.getFirstDayOfWeek() + <span class="number">6</span>);</span><br><span class="line">        <span class="keyword">return</span> c.getTime();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获得上周一的日期</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">geLastWeekMonday</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">        Calendar cal = Calendar.getInstance();</span><br><span class="line">        cal.setTime(getThisWeekMonday(date));</span><br><span class="line">        cal.add(Calendar.DATE, -<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">return</span> cal.getTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得本周一的日期</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getThisWeekMonday</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">        Calendar cal = Calendar.getInstance();</span><br><span class="line">        cal.setTime(date);</span><br><span class="line">        <span class="comment">// 获得当前日期是一个星期的第几天</span></span><br><span class="line">        <span class="keyword">int</span> dayWeek = cal.get(Calendar.DAY_OF_WEEK);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span> == dayWeek) &#123;</span><br><span class="line">            cal.add(Calendar.DAY_OF_MONTH, -<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置一个星期的第一天，按中国的习惯一个星期的第一天是星期一</span></span><br><span class="line">        cal.setFirstDayOfWeek(Calendar.MONDAY);</span><br><span class="line">        <span class="comment">// 获得当前日期是一个星期的第几天</span></span><br><span class="line">        <span class="keyword">int</span> day = cal.get(Calendar.DAY_OF_WEEK);</span><br><span class="line">        <span class="comment">// 根据日历的规则，给当前日期减去星期几与一个星期第一天的差值</span></span><br><span class="line">        cal.add(Calendar.DATE, cal.getFirstDayOfWeek() - day);</span><br><span class="line">        <span class="keyword">return</span> cal.getTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得下周一的日期</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getNextWeekMonday</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">        Calendar cal = Calendar.getInstance();</span><br><span class="line">        cal.setTime(getThisWeekMonday(date));</span><br><span class="line">        cal.add(Calendar.DATE, <span class="number">7</span>);</span><br><span class="line">        <span class="keyword">return</span> cal.getTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得今天日期</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getToday</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Date();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得本月一日的日期</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getFirstDay4ThisMonth</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        calendar.set(Calendar.DAY_OF_MONTH,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> calendar.getTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;本周一&quot;</span> + parseDate2String(getThisWeekMonday()));</span><br><span class="line">            System.out.println(<span class="string">&quot;本月一日&quot;</span> + parseDate2String(getFirstDay4ThisMonth()));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务网关Gateway</title>
    <url>/2020/05/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83JWT/</url>
    <content><![CDATA[<h2 id="Gateway"><a href="#Gateway" class="headerlink" title="Gateway"></a>Gateway</h2><h3 id="1-1-微服务网关概述"><a href="#1-1-微服务网关概述" class="headerlink" title="1.1 微服务网关概述"></a>1.1 微服务网关概述</h3><p>​    不同的微服务一般会有不同的网络地址，而外部客户端可能需要调用多个服务的接口才能完成一个业务需求，如果让客户端直接与各个微服务通信，会有以下的问题：</p>
<ul>
<li>客户端会多次<strong>请求不同的微服务</strong>，增加了客户端的复杂性</li>
<li>存在<strong>跨域</strong>请求，在一定场景下处理相对复杂</li>
<li><strong>认证复杂</strong>，每个服务都需要独立认证</li>
<li><strong>难以重构</strong>，随着项目的迭代，可能需要重新划分微服务。例如，可能将多个服务合并成一个或者将一个服务拆分成多个。如果客户端直接与微服务通信，那么重构将会很难实施</li>
</ul>
<p>以上这些问题可以借助网关解决。</p>
<p>网关是介于<strong>客户端</strong>和<strong>服务器</strong>端之间的<strong>中间层</strong>，所有的外部请求都会先经过 网关这一层。也就是说，API 的实现方面更多的考虑业务逻辑，而安全、性能、监控可以交由 网关来做，这样既提高业务灵活性又不缺安全性，典型的架构图如图所示：</p>
<p><img src="images/1557824391432.png" alt="1557824391432"></p>
<p><strong>优点：</strong></p>
<ul>
<li><strong>安全</strong> ，只有网关系统对外进行暴露，微服务可以隐藏在内网，通过防火墙保护。</li>
<li><strong>易于监控</strong>。可以在网关收集监控数据并将其推送到外部系统进行分析。</li>
<li>易于<strong>统一认证授权</strong>。可以在网关上进行认证，然后再将请求转发到后端的微服务，而无须在每个微服务中进行认证。</li>
<li>减少了<strong>客户端与各个微服务</strong>之间的<strong>交互</strong>次数</li>
</ul>
<p>总结：微服务网关就是一个系统，通过暴露该微服务网关系统，方便我们进行相关的鉴权，安全控制，日志统一处理，易于监控的相关功能。</p>
<p>实现微服务网关的技术有很多，</p>
<ul>
<li>nginx  Nginx (engine x) 是一个高性能的<a href="https://baike.baidu.com/item/HTTP">HTTP</a>和<a href="https://baike.baidu.com/item/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/7793488">反向代理</a>web服务器，同时也提供了IMAP/POP3/SMTP服务</li>
<li>zuul ,Zuul 是 Netflix 出品的一个基于 JVM 路由和服务端的负载均衡器。</li>
<li>spring-cloud-gateway, 是spring 出品的 基于spring 的网关项目，集成断路器，路径重写，性能比Zuul好。</li>
</ul>
<p>我们使用gateway这个网关技术，无缝衔接到基于spring cloud的微服务开发中来。</p>
<p>gateway官网：</p>
<p><a href="https://spring.io/projects/spring-cloud-gateway">https://spring.io/projects/spring-cloud-gateway</a></p>
<h3 id="1-2-微服务网关微服务搭建"><a href="#1-2-微服务网关微服务搭建" class="headerlink" title="1.2 微服务网关微服务搭建"></a>1.2 微服务网关微服务搭建</h3><p>​    由于我们开发的系统 有包括前台系统和后台系统，后台的系统给管理员使用。那么也需要调用各种微服务，所以我们针对管理后台搭建一个网关微服务。分析如下：</p>
<p><img src="images/4-1.png" alt="1557825607685"></p>
<p><strong>搭建步骤：</strong></p>
<p><img src="/2020/05/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83JWT/images%5Cimage111.png" alt="image-20201205200402289"></p>
<p>（1）在yigou_gateway工程中，创建yigou_gateway_system工程，pom.xml:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>（2）创建包com.yigou.system, 创建引导类：GatewayApplication</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(GatewayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3）在resources下创建application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sysgateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">goods</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://goods</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/goods/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">StripPrefix=</span> <span class="number">1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">system</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://system</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/system/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">StripPrefix=</span> <span class="number">1</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9101</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:6868/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>uri: lb://goods</p>
<p>  会根据lb的动态路由协议 动态的找到goods的服务</p>
</li>
<li><p>StripPrefix= 1</p>
<p>  会忽略掉第一个斜线后面的值</p>
</li>
<li><p>Path=/goods/**</p>
<p>  匹配的路径</p>
</li>
</ul>
<p>参考官方手册：</p>
<p><a href="https://cloud.spring.io/spring-cloud-gateway/spring-cloud-gateway.html#_stripprefix_gatewayfilter_factory">https://cloud.spring.io/spring-cloud-gateway/spring-cloud-gateway.html#_stripprefix_gatewayfilter_factory</a></p>
<h3 id="1-3-微服务网关跨域"><a href="#1-3-微服务网关跨域" class="headerlink" title="1.3 微服务网关跨域"></a>1.3 微服务网关跨域</h3><p>修改application.yml  ,在spring.cloud.gateway节点添加配置，</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">globalcors:</span></span><br><span class="line">  <span class="attr">cors-configurations:</span></span><br><span class="line">    <span class="string">&#x27;[/**]&#x27;</span><span class="string">:</span> <span class="comment"># 匹配所有请求</span></span><br><span class="line">      <span class="attr">allowedOrigins:</span> <span class="string">&quot;*&quot;</span> <span class="comment">#跨域处理 允许所有的域</span></span><br><span class="line">      <span class="attr">allowedMethods:</span> <span class="comment"># 支持的方法</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GET</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POST</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUT</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DELETE</span></span><br></pre></td></tr></table></figure>

<p>最终配置文件如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sysgateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 解决跨域的问题</span></span><br><span class="line">      <span class="attr">globalcors:</span></span><br><span class="line">        <span class="attr">cors-configurations:</span></span><br><span class="line">          <span class="string">&#x27;[/**]&#x27;</span><span class="string">:</span> <span class="comment"># 匹配所有请求</span></span><br><span class="line">            <span class="attr">allowedOrigins:</span> <span class="string">&quot;*&quot;</span> <span class="comment">#跨域处理 允许所有的域</span></span><br><span class="line">            <span class="attr">allowedMethods:</span> <span class="comment"># 支持的方法</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">GET</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POST</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PUT</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">DELETE</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">goods</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://goods</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/goods/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">StripPrefix=</span> <span class="number">1</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9101</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:6868/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="1-4-微服务网关过滤器"><a href="#1-4-微服务网关过滤器" class="headerlink" title="1.4 微服务网关过滤器"></a>1.4 微服务网关过滤器</h3><p>我们可以通过网关过滤器，实现一些逻辑的处理，比如ip黑白名单拦截、特定地址的拦截等。下面的代码中做了两个过滤器，并且设定的先后顺序，只演示过滤器与运行效果。</p>
<p>（1）yigou_gateway_system创建IpFilter</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IpFilter</span> <span class="keyword">implements</span> <span class="title">GlobalFilter</span>, <span class="title">Ordered</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> </span>&#123;</span><br><span class="line"><span class="comment">//获取客户端的访问ip</span></span><br><span class="line">        System.out.println(<span class="string">&quot;经过第1个过滤器IpFilter&quot;</span>);</span><br><span class="line">        ServerHttpRequest request = exchange.getRequest();</span><br><span class="line">        InetSocketAddress remoteAddress = request.getRemoteAddress();</span><br><span class="line">        System.out.println(<span class="string">&quot;ip:&quot;</span>+remoteAddress.getHostName());</span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange);<span class="comment">//放行</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>filter(ServerWebExchange exchange, GatewayFilterChain chain)   方法里面要执行的都是一些具体的逻辑</p>
<p>getOrder() 定义执行的优先级  <strong>值越小</strong> 执行的优先级就越高</p>
<p>（2）yigou_gateway_system创建UrlFilter</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UrlFilter</span> <span class="keyword">implements</span> <span class="title">GlobalFilter</span>, <span class="title">Ordered</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取客户端的访问url</span></span><br><span class="line">        System.out.println(<span class="string">&quot;经过第2个过滤器UrlFilter&quot;</span>);</span><br><span class="line">        ServerHttpRequest request = exchange.getRequest();</span><br><span class="line">        String url = request.getURI().getPath();</span><br><span class="line">        System.out.println(<span class="string">&quot;url:&quot;</span>+url);</span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试，观察控制台输出。</p>
<h2 id="2-网关限流"><a href="#2-网关限流" class="headerlink" title="2 网关限流"></a>2 网关限流</h2><p>​    我们之前说过，网关可以做很多的事情，比如，限流，当我们的系统被频繁的请求的时候，就有可能将系统压垮，所以为了解决这个问题，需要在每一个微服务中做限流操作，但是如果有了网关，那么就可以在网关系统做限流，因为所有的请求都需要先通过网关系统才能路由到微服务中。</p>
<h3 id="2-1-思路分析"><a href="#2-1-思路分析" class="headerlink" title="2.1 思路分析"></a>2.1 思路分析</h3><p><img src="images/1557909861570.png" alt="1557909861570"></p>
<h3 id="2-2-令牌桶算法"><a href="#2-2-令牌桶算法" class="headerlink" title="2.2 令牌桶算法"></a>2.2 令牌桶算法</h3><p>令牌桶算法是比较常见的限流算法之一，大概描述如下：<br>1）所有的请求在处理之前都需要拿到一个可用的令牌才会被处理；<br>2）根据限流大小，设置按照一定的速率往桶里添加令牌；<br>3）桶设置最大的放置令牌限制，当桶满时、新添加的令牌就被丢弃或者拒绝；<br>4）请求达到后首先要获取令牌桶中的令牌，拿着令牌才可以进行其他的业务逻辑，处理完业务逻辑之后，将令牌直接删除；<br>5）令牌桶有最低限额，当桶中的令牌达到最低限额的时候，请求处理完之后将不会删除令牌，以此保证足够的限流</p>
<p>如下图：</p>
<p><img src="images/1557910299016.png" alt="1557910299016"></p>
<p>这个算法的实现，有很多技术，Guava(读音: 瓜哇)是其中之一，redis客户端也有其实现。</p>
<h3 id="2-3-网关限流代码实现"><a href="#2-3-网关限流代码实现" class="headerlink" title="2.3 网关限流代码实现"></a>2.3 网关限流代码实现</h3><p>需求：每个ip地址1秒内只能发送1次请求，多出来的请求返回429错误。</p>
<p>代码实现：</p>
<p>（1）spring cloud gateway 默认使用<strong>redis的RateLimter限流算法</strong>来实现。所以我们要使用首先需要引入redis的依赖   </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis-reactive<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>（2）定义KeyResolver</p>
<p>在<strong>GatewayApplicatioin引导类</strong>中添加如下代码，KeyResolver用于计算某一个类型的限流的KEY也就是说，可以通过<strong>KeyResolver</strong>来指定限流的Key。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义一个KeyResolver</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> KeyResolver <span class="title">ipKeyResolver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> KeyResolver() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Mono&lt;String&gt; <span class="title">resolve</span><span class="params">(ServerWebExchange exchange)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Mono.just(exchange.getRequest().getRemoteAddress().getHostName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>just 限制</p>
<p>exchange.getRequest().getRemoteAddress().getHostName() 获取到客户端的访问IP</p>
<p>（3）修改application.yml中配置项，指定限制流量的配置以及配置Redis，</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">RequestRateLimiter</span> <span class="comment">#请求数限流 名字不能随便写 </span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">      <span class="attr">key-resolver:</span> <span class="string">&quot;#&#123;@ipKeyResolver&#125;&quot;</span> <span class="comment">#引用刚才我们在启动类下面声明的bean</span></span><br><span class="line">      <span class="attr">redis-rate-limiter.replenishRate:</span> <span class="number">1</span> <span class="comment">#令牌桶每秒填充平均速率 每秒声明1个</span></span><br><span class="line">      <span class="attr">redis-rate-limiter.burstCapacity:</span> <span class="number">1</span> <span class="comment">#令牌桶总容量</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">        <span class="comment"># 配置Redis 127.0.0.1可以省略配置</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.200</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure>





<p>修改后最终配置如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sysgateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">globalcors:</span></span><br><span class="line">        <span class="attr">cors-configurations:</span></span><br><span class="line">          <span class="string">&#x27;[/**]&#x27;</span><span class="string">:</span> <span class="comment"># 匹配所有请求</span></span><br><span class="line">            <span class="attr">allowedOrigins:</span> <span class="string">&quot;*&quot;</span> <span class="comment">#跨域处理 允许所有的域</span></span><br><span class="line">            <span class="attr">allowedMethods:</span> <span class="comment"># 支持的方法</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">GET</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POST</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PUT</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">DELETE</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">goods</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://goods</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/goods/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">StripPrefix=</span> <span class="number">1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">RequestRateLimiter</span> <span class="comment">#请求数限流 名字不能随便写 </span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="attr">key-resolver:</span> <span class="string">&quot;#&#123;@ipKeyResolver&#125;&quot;</span></span><br><span class="line">            <span class="attr">redis-rate-limiter.replenishRate:</span> <span class="number">1</span> <span class="comment">#令牌桶每秒填充平均速率</span></span><br><span class="line">            <span class="attr">redis-rate-limiter.burstCapacity:</span> <span class="number">1</span> <span class="comment">#令牌桶总容量</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">system</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://system</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/system/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">StripPrefix=</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># 配置Redis 127.0.0.1可以省略配置</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.200</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9101</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:6868/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>解释：</p>
<ul>
<li>burstCapacity：令牌桶总容量。</li>
<li>replenishRate：令牌桶每秒填充平均速率。</li>
<li>key-resolver：用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象。</li>
</ul>
<p>通过在<code>replenishRate</code>和中设置相同的值来实现稳定的速率<code>burstCapacity</code>。设置<code>burstCapacity</code>高于时，可以允许临时突发<code>replenishRate</code>。在这种情况下，需要在突发之间允许速率限制器一段时间（根据<code>replenishRate</code>），因为2次连续突发将导致请求被丢弃（<code>HTTP 429 - Too Many Requests</code>）</p>
<p> key-resolver: “#{@userKeyResolver}” 用于通过SPEL表达式来指定使用哪一个KeyResolver.</p>
<p>如上配置：</p>
<p>表示 一秒内，允许 一个请求通过，令牌桶的填充速率也是一秒钟添加一个令牌。</p>
<p>最大突发状况 也只允许 一秒内有一次请求，可以根据业务来调整 。</p>
<p>（4）测试</p>
<p>启动redis </p>
<p>启动注册中心</p>
<p>启动商品微服务</p>
<p>启动gateway网关</p>
<p>打开浏览器  <a href="http://localhost:9101/goods/brand">http://localhost:9101/goods/brand</a></p>
<p>快速刷新，当1秒内发送多次请求，就会返回429错误。</p>
]]></content>
      <tags>
        <tag>Gateway</tag>
      </tags>
  </entry>
  <entry>
    <title>分页查询</title>
    <url>/2019/10/15/%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h1><h2 id="1-QueryPageBean对象"><a href="#1-QueryPageBean对象" class="headerlink" title="1.QueryPageBean对象"></a>1.QueryPageBean对象</h2><h4 id="currentPage-当前页"><a href="#currentPage-当前页" class="headerlink" title="currentPage 当前页"></a>currentPage 当前页</h4><h4 id="pageSize-每页显示条数"><a href="#pageSize-每页显示条数" class="headerlink" title="pageSize 每页显示条数"></a>pageSize 每页显示条数</h4><h4 id="queryString-查询条件"><a href="#queryString-查询条件" class="headerlink" title="queryString 查询条件"></a>queryString 查询条件</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 封装查询条件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryPageBean</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer currentPage;<span class="comment">//页码</span></span><br><span class="line">    <span class="keyword">private</span> Integer pageSize;<span class="comment">//每页记录数</span></span><br><span class="line">    <span class="keyword">private</span> String queryString;<span class="comment">//查询条件</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getCurrentPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> currentPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCurrentPage</span><span class="params">(Integer currentPage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.currentPage = currentPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getPageSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageSize</span><span class="params">(Integer pageSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getQueryString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> queryString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setQueryString</span><span class="params">(String queryString)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.queryString = queryString;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-controller层"><a href="#2-controller层" class="headerlink" title="2.controller层"></a>2.controller层</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/findPage&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageResult <span class="title">findPage</span><span class="params">(<span class="meta">@RequestBody</span> QueryPageBean queryPageBean)</span> </span>&#123;</span><br><span class="line">        PageResult pageResult = checkItemService.pageQurey(queryPageBean);</span><br><span class="line">        <span class="keyword">return</span> pageResult;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-service层"><a href="#3-service层" class="headerlink" title="3.service层"></a>3.service层</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> PageResult <span class="title">pageQurey</span><span class="params">(QueryPageBean queryPageBean)</span> </span>&#123;</span><br><span class="line">       Integer currentPage = queryPageBean.getCurrentPage();</span><br><span class="line">       Integer pageSize = queryPageBean.getPageSize();</span><br><span class="line">       String queryString = queryPageBean.getQueryString();</span><br><span class="line"></span><br><span class="line">       <span class="comment">//基于mybatis</span></span><br><span class="line">       PageHelper.startPage(currentPage,pageSize);</span><br><span class="line"></span><br><span class="line">       Page&lt;CheckItem&gt; page = checkItemDao.selectByCondition(queryString);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">long</span> total = page.getTotal(); <span class="comment">//总条数</span></span><br><span class="line">       List&lt;CheckItem&gt; rows = page.getResult(); <span class="comment">//查询出来的数据</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> PageResult(total,rows);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-dao层"><a href="#4-dao层" class="headerlink" title="4.dao层"></a>4.dao层</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByCondition&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;wang.yinggang.pojo.CheckItem&quot;</span>&gt;</span></span><br><span class="line">        select * from t_checkitem</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;value != null and value.length &gt; 0&quot;</span>&gt;</span></span><br><span class="line">            where code = #&#123;value&#125; or name = #&#123;value&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>分页查询</tag>
      </tags>
  </entry>
  <entry>
    <title>多表查询</title>
    <url>/2018/10/30/%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h1><h2 id="1-套餐"><a href="#1-套餐" class="headerlink" title="1.套餐"></a>1.套餐</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">Setmeal <span class="title">mobileFindById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure>

<h3 id="mobileFindById"><a href="#mobileFindById" class="headerlink" title="mobileFindById"></a><strong>mobileFindById</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;mobileFindById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;findByIdResultMap&quot;</span>&gt;</span></span><br><span class="line">        select * from t_setmeal where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="findByIdResultMap"><a href="#findByIdResultMap" class="headerlink" title="findByIdResultMap"></a>findByIdResultMap</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;baseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;wang.yinggang.pojo.Setmeal&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;code&quot;</span> <span class="attr">property</span>=<span class="string">&quot;code&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;helpCode&quot;</span> <span class="attr">property</span>=<span class="string">&quot;helpCode&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;price&quot;</span> <span class="attr">property</span>=<span class="string">&quot;price&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;remark&quot;</span> <span class="attr">property</span>=<span class="string">&quot;remark&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;attention&quot;</span> <span class="attr">property</span>=<span class="string">&quot;attention&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;img&quot;</span> <span class="attr">property</span>=<span class="string">&quot;img&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;findByIdResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;wang.yinggang.pojo.Setmeal&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;baseResultMap&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--多对多映射--&gt;</span></span><br><span class="line">    &lt;collection</span><br><span class="line">            property=&quot;checkGroups&quot;</span><br><span class="line">            ofType=&quot;wang.yinggang.pojo.CheckGroup&quot;</span><br><span class="line">            select=&quot;wang.yinggang.dao.CheckGroupDao.findCheckGroupById&quot;</span><br><span class="line">            column=&quot;id&quot;</span><br><span class="line">    &gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="2-检查组"><a href="#2-检查组" class="headerlink" title="2.检查组"></a>2.检查组</h2><h3 id="findCheckGroupById"><a href="#findCheckGroupById" class="headerlink" title="findCheckGroupById"></a><strong>findCheckGroupById</strong></h3><p><strong>wang.yinggang.dao.CheckGroupDao.findCheckGroupById</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">CheckGroup <span class="title">findCheckGroupById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCheckGroupById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;findByIdResultMap&quot;</span>&gt;</span></span><br><span class="line">        select * from t_checkgroup where id in (select checkgroup_id from t_setmeal_checkgroup where setmeal_id = #&#123;setmeal_id&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="findByIdResultMap-1"><a href="#findByIdResultMap-1" class="headerlink" title="findByIdResultMap"></a>findByIdResultMap</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;baseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;wang.yinggang.pojo.CheckGroup&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;code&quot;</span> <span class="attr">property</span>=<span class="string">&quot;code&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;helpCode&quot;</span> <span class="attr">property</span>=<span class="string">&quot;helpCode&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;remark&quot;</span> <span class="attr">property</span>=<span class="string">&quot;remark&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;attention&quot;</span> <span class="attr">property</span>=<span class="string">&quot;attention&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;findByIdResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;wang.yinggang.pojo.CheckGroup&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;baseResultMap&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--检查组和检查项多对多关联查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;checkItems&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">ofType</span>=<span class="string">&quot;wang.yinggang.pojo.CheckItem&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">column</span>=<span class="string">&quot;id&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">select</span>=<span class="string">&quot;wang.yinggang.dao.CheckItemDao.findCheckItemById&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-检查项"><a href="#3-检查项" class="headerlink" title="3.检查项"></a>3.检查项</h2><h3 id="findCheckItemById"><a href="#findCheckItemById" class="headerlink" title="findCheckItemById"></a>findCheckItemById</h3><p><strong>wang.yinggang.dao.CheckItemDao.findCheckItemById</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">CheckItem <span class="title">findCheckItemById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure>

<h3 id="findCheckItemById-1"><a href="#findCheckItemById-1" class="headerlink" title="findCheckItemById"></a>findCheckItemById</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCheckItemById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;wang.yinggang.pojo.CheckItem&quot;</span>&gt;</span></span><br><span class="line">    select * from t_checkitem</span><br><span class="line">    where id</span><br><span class="line">   in (select checkitem_id from t_checkgroup_checkitem where checkgroup_id=#&#123;id&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>多表查询</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot+mybatis-plus</title>
    <url>/2018/12/22/mybatis/mybatisplus/springboot+mybatisplus/</url>
    <content><![CDATA[<h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maybatisplus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>maybatisplus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;scope&gt;runtime&lt;/scope&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="引导类"><a href="#引导类" class="headerlink" title="引导类"></a>引导类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.maybatisplus;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;wang.yinggang&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaybatisplusApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MaybatisplusApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*重要 mybatis对应的数据库的属性字段的命名不可以用《大写》</span></span><br><span class="line"><span class="comment">数据库的字段命名方式为使用下划线连接，对应的实体类应该是驼峰命名方式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@TableName(&quot;tb_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/*查询不能被查出*/</span></span><br><span class="line">    <span class="meta">@TableField(select = false)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="comment">/*名词不匹配的时候*/</span></span><br><span class="line">    <span class="meta">@TableField(value = &quot;email&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    数据库中不存在这个字段</span></span><br><span class="line"><span class="comment">    @TableField(exist = false)</span></span><br><span class="line"><span class="comment">    private String address;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name, Integer age, String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="mapper"><a href="#mapper" class="headerlink" title="mapper"></a>mapper</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> wang.yinggang.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="分页查询配置文件"><a href="#分页查询配置文件" class="headerlink" title="分页查询配置文件"></a>分页查询配置文件</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.maybatisplus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.optimize.JsqlParserCountOptimize;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Spring boot方式</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;wang.yinggang&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        PaginationInterceptor paginationInterceptor = <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">        <span class="comment">// 设置请求的页面大于最大页后操作， true调回到首页，false 继续请求  默认false</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setOverflow(false);</span></span><br><span class="line">        <span class="comment">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setLimit(500);</span></span><br><span class="line">        <span class="comment">// 开启 count 的 join 优化,只针对部分 left join</span></span><br><span class="line">        paginationInterceptor.setCountSqlParser(<span class="keyword">new</span> JsqlParserCountOptimize(<span class="keyword">true</span>));</span><br><span class="line">        <span class="keyword">return</span> paginationInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://106.54.95.74:3306/aa?characterEncoding=UTF-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">***</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br></pre></td></tr></table></figure>



<h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.maybatisplus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> wang.yinggang.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> wang.yinggang.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.jws.soap.SOAPBinding;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MaybatisplusApplicationTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"><span class="comment">/*查询全部*/</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">selectList</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">        List&lt;User&gt; userList = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">selectList2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.like(<span class="string">&quot;email&quot;</span>,<span class="string">&quot;@&quot;</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; userList = userMapper.selectList(wrapper);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">selectPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//current 当前页 size 每页查询条数</span></span><br><span class="line">        Page&lt;User&gt; page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        wrapper.like(<span class="string">&quot;email&quot;</span>,<span class="string">&quot;@&quot;</span>);</span><br><span class="line"></span><br><span class="line">        IPage&lt;User&gt; ipage = userMapper.selectPage(page, wrapper);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;获取分页信息&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;总条数&quot;</span>+ipage.getTotal());</span><br><span class="line">        System.out.println(<span class="string">&quot;当前页码&quot;</span>+ipage.getCurrent());</span><br><span class="line">        System.out.println(<span class="string">&quot;总页码&quot;</span>+ipage.getPages());</span><br><span class="line">        System.out.println(<span class="string">&quot;每页显示的条数&quot;</span>+ipage.getSize());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//结果</span></span><br><span class="line">        List&lt;User&gt; records = ipage.getRecords();</span><br><span class="line">        <span class="keyword">for</span> (User record : records) &#123;</span><br><span class="line">            System.out.println(record);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">selectById</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">        User user = userMapper.selectById(<span class="number">5</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 根据id做批量查询</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectBatchIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectBatchIds(Arrays.asList(<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>));</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 查询一条数据</span></span><br><span class="line"><span class="comment">     * 当数据是多条时候会报错</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">selectOne</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setAge(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;(user);</span><br><span class="line">        User Queryuser = userMapper.selectOne(wrapper);</span><br><span class="line">        System.out.println(Queryuser);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 查询数据条数</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">selectCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        wrapper.gt(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>);<span class="comment">//年龄大于20岁</span></span><br><span class="line">        Integer count = userMapper.selectCount(wrapper);</span><br><span class="line"></span><br><span class="line">        System.out.println(count);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*插入一条数据*/</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="keyword">null</span>,<span class="string">&quot;lisi&quot;</span>,<span class="number">14</span>,<span class="string">&quot;12345@qq.com&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> i = userMapper.insert(user);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;插入数据成功&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;插入数据失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 根据ID更新</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateById</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="number">1</span>,<span class="string">&quot;lisi&quot;</span>,<span class="number">14</span>,<span class="string">&quot;12345@qq.com&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> i = userMapper.updateById(user);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;更新数据成功&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;更新数据失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 根据条件进行更新</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*更新的内容为将age 设置为20*/</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setAge(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        <span class="comment">/*查询根据name为lisi的数据进行更新*/</span></span><br><span class="line">        wrapper.eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;lisi&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = userMapper.update(user, wrapper);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;更新数据成功&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;更新数据失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 根据条件进行更新</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        UpdateWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> UpdateWrapper&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        wrapper.set(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>).set(<span class="string">&quot;age&quot;</span>,<span class="number">13</span>)<span class="comment">//更新的字段</span></span><br><span class="line">        .eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;lisi&quot;</span>);<span class="comment">//更新的条件</span></span><br><span class="line">        <span class="keyword">int</span> i = userMapper.update(<span class="keyword">null</span>, wrapper);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;更新数据成功&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;更新数据失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*删除一条数据*/</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteById</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">        <span class="keyword">int</span> i = userMapper.deleteById(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数据删除成功&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数据删除失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*根据条件删除数据*/</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteByMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">        <span class="comment">/*删除条件*/</span></span><br><span class="line">        HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;age&quot;</span>,<span class="number">13</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = userMapper.deleteByMap(map);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;成功删除&quot;</span>+i+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数据删除失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*根据条件删除数据01*/</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">        <span class="comment">/*删除条件*/</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setAge(<span class="number">20</span>);</span><br><span class="line">       QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;(user);</span><br><span class="line">        <span class="comment">/*根据包装/条件 删除*/</span></span><br><span class="line">        <span class="keyword">int</span> i = userMapper.delete(wrapper);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;成功删除&quot;</span>+i+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数据删除失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*根据条件删除数据02*/</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line">        <span class="comment">/*删除条件*/</span></span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;lisi&quot;</span>)</span><br><span class="line">                .eq(<span class="string">&quot;age&quot;</span>,<span class="number">13</span>);</span><br><span class="line">        <span class="comment">/*根据包装/条件 删除*/</span></span><br><span class="line">        <span class="keyword">int</span> i = userMapper.delete(wrapper);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;成功删除&quot;</span>+i+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数据删除失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBatchIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="string">&quot;----- selectAll method test ------&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = userMapper.deleteBatchIds(Arrays.asList(<span class="number">3</span>,<span class="number">4</span>));</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;成功删除&quot;</span>+i+<span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数据删除失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>dobbo入门</title>
    <url>/2019/10/04/dubbo/dubbo/</url>
    <content><![CDATA[<h1 id="dubbo"><a href="#dubbo" class="headerlink" title="dubbo"></a>dubbo</h1><h2 id="1-基础知识"><a href="#1-基础知识" class="headerlink" title="1 基础知识"></a>1 基础知识</h2><p>​        系统间服务调用方式有三种，浏览器直接访问，通过ajax或者jsonp方式请求。第二种，httpclient方式发起http协议的请求，是后台调用。第三种基于RPC方式的远程过程调用协议的请求。DUBBO是一个分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，是阿里巴巴SOA服务化治理方案的核心框架，每天为2,000+个服务提供3,000,000,000+次访问量支持，并被广泛应用于阿里巴巴集团的各成员站点。</p>
<p> Dubbo是阿里巴巴SOA服务化治理方案的核心框架。</p>
<p>  <strong>SOA</strong>（Service Oriented Architecture）就是面向服务的体系结构。Dubbo的核心功能就是提供透明化的远程方法调用。</p>
<p>  <strong>Zookeeper</strong>是一个为分布式应用提供一致性服务的软件。我们的实验需要使用zookeeper作为服务的注册中心，也是阿里官方推荐使用的注册中心。</p>
<h3 id="1-1-Dubbo是什么？"><a href="#1-1-Dubbo是什么？" class="headerlink" title="1.1.Dubbo是什么？"></a>1.1.Dubbo是什么？</h3><p>   Dubbo是一个分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案。简单的说，dubbo就是个服务框架，如果没有分布式的需求，其实是不需要用的，只有在分布式的时候，才有dubbo这样的分布式服务框架的需求，并且本质上是个服务调用的框架，其实就是个远程服务调用的分布式框架（告别Web Service模式中的WSdl，以服务者与消费者的方式在dubbo上注册）</p>
<p>   其核心部分包含:<br>     \1. 远程通讯: 提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式。<br>     \2. 集群容错: 提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。<br>     \3. 自动发现: 基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。</p>
<p>   主要核心部件</p>
<p>​     \1. Remoting: 网络通信框架，实现了 sync-over-async 和 request-response 消息机制.</p>
<p>​     \2. RPC: 一个远程过程调用的抽象，支持负载均衡、容灾和集群功能</p>
<p>​     \3.Registry: 服务目录框架用于服务的注册和服务事件发布和订阅</p>
<h3 id="1-2-Dubbo能做什么？"><a href="#1-2-Dubbo能做什么？" class="headerlink" title="1.2.Dubbo能做什么？"></a>1.2.Dubbo能做什么？</h3><p>  \1.透明化的远程方法调用，就像调用本地方法一样调用远程方法，只需简单配置，没有任何API侵入。   </p>
<p>  \2.软负载均衡及容错机制，可在内网替代F5等硬件负载均衡器，降低成本，减少单点。</p>
<p>  \3. 服务自动注册与发现，不再需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或删除服务提供者。</p>
<p>  Dubbo采用全Spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可，Dubbo基于Spring的Schema扩展进行加载。</p>
<h3 id="1-3-dubbo的背景"><a href="#1-3-dubbo的背景" class="headerlink" title="1.3.dubbo的背景"></a>1.3.dubbo的背景</h3><p>  随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，亟需一个治理系统确保架构有条不紊的演进。</p>
<p><strong>· 单一应用架构</strong></p>
<p>  · 当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。</p>
<p>  · 此时，用于简化增删改查工作量的 数据访问框架(ORM) 是关键。</p>
<p><strong>· 垂直应用架构</strong></p>
<p>  · 当访问量逐渐增大，单一应用增加机器带来的加速度越来越小，将应用拆成互不相干的几个应用，以提升效率。</p>
<p>  · 此时，用于加速前端页面开发的 Web框架(MVC) 是关键。</p>
<p><strong>· 分布式服务架构</strong></p>
<p>  · 当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。</p>
<p>  · 此时，用于提高业务复用及整合的 分布式服务框架(RPC) 是关键。</p>
<p><strong>· 流动计算架构</strong></p>
<p>  · 当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。</p>
<p>  · 此时，用于提高机器利用率的 资源调度和治理中心(SOA) 是关键。</p>
<h2 id="2-项目结构"><a href="#2-项目结构" class="headerlink" title="2 项目结构"></a>2 项目结构</h2><p><img src="/2019/10/04/dubbo/dubbo/../../../../img/image-20201009092847222.png" alt="image-20201009092847222"></p>
<h2 id="3-创建service层接口模块"><a href="#3-创建service层接口模块" class="headerlink" title="3 创建service层接口模块"></a>3 创建service层接口模块</h2><p><strong>因为service和controller层都需要用到service的接口，所以创建这个接口的模块，将坐标添加到service和controller里面。</strong></p>
<h2 id="4-service层修改"><a href="#4-service层修改" class="headerlink" title="4 service层修改"></a>4 service层修改</h2><h3 id="4-1-修改注解"><a href="#4-1-修改注解" class="headerlink" title="4.1 修改注解"></a>4.1 修改注解</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Service;</span><br><span class="line"><span class="comment">//注解修改为dubbo包下的</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> wang.yinggang.service.UserService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-2-修改applicationContext-xml"><a href="#4-2-修改applicationContext-xml" class="headerlink" title="4.2 修改applicationContext.xml"></a>4.2 修改applicationContext.xml</h3><p><strong>将spring扫包修改为dubbo提供者的配置</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:dubbo</span>=<span class="string">&quot;http://dubbo.apache.org/schema/dubbo&quot;</span> <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">&lt;!--   &lt;context:component-scan base-package=&quot;wang.yinggang.service&quot;&gt;&lt;/context:component-scan&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--dubbo的配置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--1.配置项目的名称,唯一--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">&quot;dubbo_service&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--2.配置注册中心的地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">address</span>=<span class="string">&quot;zookeeper://106.54.95.74:2181&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--3.配置dubbo包扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:annotation</span> <span class="attr">package</span>=<span class="string">&quot;wang.yinggang.service.impl&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-3-修改service模块的pom依赖文件"><a href="#4-3-修改service模块的pom依赖文件" class="headerlink" title="4.3 修改service模块的pom依赖文件"></a>4.3 修改service模块的pom依赖文件</h3><p>​        <strong>1-将默认的打包方式jar包 修改为war包</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dobbo_service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dubbo.version</span>&gt;</span>2.7.3<span class="tag">&lt;/<span class="name">dubbo.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">zookeeper.version</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">zookeeper.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- servlet3.0规范的坐标 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring的坐标--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springmvc的坐标--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Dubbo的起步依赖，版本2.7之后统一为rg.apache.dubb --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;dubbo.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--ZooKeeper客户端实现 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;zookeeper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--ZooKeeper客户端实现 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;zookeeper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dobbo_interface<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--tomcat插件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>9999<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>​        <strong>2-创建webapp-WEB-INF-web.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;2.5&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:spring/applicationContext*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="5-controller层修改"><a href="#5-controller层修改" class="headerlink" title="5 controller层修改"></a>5 controller层修改</h2><h3 id="5-1-修改controller模块的pom依赖文件"><a href="#5-1-修改controller模块的pom依赖文件" class="headerlink" title="5.1 修改controller模块的pom依赖文件"></a>5.1 修改controller模块的pom依赖文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dobbo_controller<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dubbo.version</span>&gt;</span>2.7.3<span class="tag">&lt;/<span class="name">dubbo.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">zookeeper.version</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">zookeeper.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- servlet3.0规范的坐标 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring的坐标--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springmvc的坐标--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Dubbo的起步依赖，版本2.7之后统一为rg.apache.dubb --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;dubbo.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--ZooKeeper客户端实现 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;zookeeper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--ZooKeeper客户端实现 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;zookeeper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--&lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;wang.yinggang&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;dobbo_service&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wang.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dobbo_interface<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--tomcat插件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8888<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-2-修改controller注解"><a href="#5-2-修改controller注解" class="headerlink" title="5.2 修改controller注解"></a>5.2 修改controller注解</h3><p><strong>将spring注入修改为dubbo包下的Reference</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> wang.yinggang.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Reference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> wang.yinggang.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@Autowired</span></span><br><span class="line">    <span class="meta">@Reference</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/say&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.sayHello();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-3-修改-springmvc-xml"><a href="#5-3-修改-springmvc-xml" class="headerlink" title="5.3 修改 springmvc.xml"></a>5.3 修改 springmvc.xml</h3><p><strong>添加提供者的配置文件</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:dubbo</span>=<span class="string">&quot;http://dubbo.apache.org/schema/dubbo&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">         http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;wang.yinggang.controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--dubbo的配置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--1.配置项目的名称,唯一--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">&quot;dubbo_web&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dubbo:parameter</span> <span class="attr">key</span>=<span class="string">&quot;qos.port&quot;</span> <span class="attr">value</span>=<span class="string">&quot;33333&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dubbo:application</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--2.配置注册中心的地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">address</span>=<span class="string">&quot;zookeeper://106.54.95.74:2181&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--3.配置dubbo包扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:annotation</span> <span class="attr">package</span>=<span class="string">&quot;wang.yinggang.controller&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-4-修改web-xml"><a href="#5-4-修改web-xml" class="headerlink" title="5.4 修改web.xml"></a>5.4 修改web.xml</h3><p><strong>删除扫描spring 配置文件的配置</strong></p>
<hr>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;2.5&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;context-param&gt;</span></span><br><span class="line"><span class="comment">        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span></span><br><span class="line"><span class="comment">        &lt;param-value&gt;classpath*:spring/applicationContext*.xml&lt;/param-value&gt;</span></span><br><span class="line"><span class="comment">    &lt;/context-param&gt;</span></span><br><span class="line"><span class="comment">    &lt;listener&gt;</span></span><br><span class="line"><span class="comment">        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span></span><br><span class="line"><span class="comment">    &lt;/listener&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Springmvc --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定加载的配置文件 ，通过参数contextConfigLocation加载--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>dobbo</tag>
      </tags>
  </entry>
  <entry>
    <title>SPU与SKU</title>
    <url>/2020/01/04/sku_spu/SPU%E4%B8%8ESKU/</url>
    <content><![CDATA[<h3 id="1概念与表结构分析"><a href="#1概念与表结构分析" class="headerlink" title="1概念与表结构分析"></a>1概念与表结构分析</h3><h4 id="1-1-SPU与SKU概念"><a href="#1-1-SPU与SKU概念" class="headerlink" title="1.1 SPU与SKU概念"></a>1.1 SPU与SKU概念</h4><p><strong>SPU = Standard Product Unit  （标准产品单位）</strong></p>
<ul>
<li><p>概念 : SPU 是商品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个产品的特性。</p>
</li>
<li><p>通俗点讲，属性值、特性相同的货品就可以称为一个 SPU</p>
<p>例如：<strong>华为P30 就是一个 SPU</strong></p>
</li>
</ul>
<p><strong>SKU=stock keeping unit( 库存量单位)</strong></p>
<ul>
<li><p>SKU 即库存进出计量的单位， 可以是以件、盒、托盘等为单位。</p>
</li>
<li><p>SKU 是物理上不可分割的最小存货单元。在使用时要根据不同业态，不同管理模式来处理。</p>
</li>
<li><p>在服装、鞋类商品中使用最多最普遍。</p>
<p>例如：<strong>华为P30 红色 64G 就是一个 SKU</strong></p>
</li>
</ul>
<h4 id="1-2-表结构分析"><a href="#1-2-表结构分析" class="headerlink" title="1.2 表结构分析"></a>1.2 表结构分析</h4><p>tb_spu  表 （SPU表）</p>
<table>
<thead>
<tr>
<th>字段名称</th>
<th>字段含义</th>
<th>字段类型</th>
<th>字段长度</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>主键</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>sn</td>
<td>货号</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>name</td>
<td>SPU名</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>caption</td>
<td>副标题</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>brand_id</td>
<td>品牌ID</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>category1_id</td>
<td>一级分类</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>category2_id</td>
<td>二级分类</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>category3_id</td>
<td>三级分类</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>template_id</td>
<td>模板ID</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>freight_id</td>
<td>运费模板id</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>image</td>
<td>图片</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>images</td>
<td>图片列表</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>sale_service</td>
<td>售后服务</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>introduction</td>
<td>介绍</td>
<td>TEXT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>spec_items</td>
<td>规格列表</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>para_items</td>
<td>参数列表</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>sale_num</td>
<td>销量</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>comment_num</td>
<td>评论数</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>is_marketable</td>
<td>是否上架</td>
<td>CHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>is_enable_spec</td>
<td>是否启用规格</td>
<td>CHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>is_delete</td>
<td>是否删除</td>
<td>CHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>status</td>
<td>审核状态</td>
<td>CHAR</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>tb_sku  表（SKU商品表）</p>
<table>
<thead>
<tr>
<th>字段名称</th>
<th>字段含义</th>
<th>字段类型</th>
<th>字段长度</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>商品id</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>sn</td>
<td>商品条码</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>name</td>
<td>SKU名称</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>price</td>
<td>价格（分）</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>num</td>
<td>库存数量</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>alert_num</td>
<td>库存预警数量</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>image</td>
<td>商品图片</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>images</td>
<td>商品图片列表</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>weight</td>
<td>重量（克）</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>create_time</td>
<td>创建时间</td>
<td>DATETIME</td>
<td></td>
<td></td>
</tr>
<tr>
<td>update_time</td>
<td>更新时间</td>
<td>DATETIME</td>
<td></td>
<td></td>
</tr>
<tr>
<td>spu_id</td>
<td>SPUID</td>
<td>BIGINT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>category_id</td>
<td>类目ID</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>category_name</td>
<td>类目名称</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>brand_name</td>
<td>品牌名称</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>spec</td>
<td>规格</td>
<td>VARCHAR</td>
<td></td>
<td></td>
</tr>
<tr>
<td>sale_num</td>
<td>销量</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>comment_num</td>
<td>评论数</td>
<td>INT</td>
<td></td>
<td></td>
</tr>
<tr>
<td>status</td>
<td>商品状态 1-正常，2-下架，3-删除</td>
<td>CHAR</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="2-2-实现思路"><a href="#2-2-实现思路" class="headerlink" title="2.2 实现思路"></a>2.2 实现思路</h3><p>前端传递给后端的数据格式 是一个spu对象和sku列表组成的对象。   Goods</p>
<p>private Spu sup;</p>
<p>private List<sku> list;</sku></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;spu&quot;</span>: &#123;</span><br><span class="line">      	<span class="attr">&quot;name&quot;</span>: <span class="string">&quot;这个是商品名称&quot;</span>,</span><br><span class="line">      	<span class="attr">&quot;caption&quot;</span>: <span class="string">&quot;这个是副标题&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;brandId&quot;</span>: <span class="number">1115</span>,</span><br><span class="line">		<span class="attr">&quot;category1Id&quot;</span>: <span class="number">558</span>,</span><br><span class="line">		<span class="attr">&quot;category2Id&quot;</span>: <span class="number">559</span>,</span><br><span class="line">		<span class="attr">&quot;category3Id&quot;</span>: <span class="number">560</span>,</span><br><span class="line">		<span class="attr">&quot;freightId&quot;</span>: <span class="number">10</span>,</span><br><span class="line">		<span class="attr">&quot;image&quot;</span>: <span class="string">&quot;http://www.yigou.com/image/1.jpg&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;http://www.yigou.com/image/1.jpg,http://www.yigou.com/image/2.jpg&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;introduction&quot;</span>: <span class="string">&quot;这个是商品详情，html代码&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;paraItems&quot;</span>: <span class="string">&quot;&#123;&#x27;出厂年份&#x27;:&#x27;2019&#x27;,&#x27;赠品&#x27;:&#x27;充电器&#x27;&#125;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;saleService&quot;</span>: <span class="string">&quot;七天包退,闪电退货&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;sn&quot;</span>: <span class="string">&quot;020102331&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;specItems&quot;</span>:  <span class="string">&quot;&#123;&#x27;颜色&#x27;:[&#x27;红&#x27;,&#x27;绿&#x27;],&#x27;机身内存&#x27;:[&#x27;64G&#x27;,&#x27;8G&#x27;]&#125;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;templateId&quot;</span>: <span class="number">42</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;skuList&quot;</span>: [&#123;</span><br><span class="line">		<span class="attr">&quot;sn&quot;</span>: <span class="string">&quot;10192010292&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;num&quot;</span>: <span class="number">100</span>,</span><br><span class="line">      	 <span class="attr">&quot;alertNum&quot;</span>: <span class="number">20</span>,</span><br><span class="line">		 <span class="attr">&quot;price&quot;</span>: <span class="number">900000</span>,</span><br><span class="line">         <span class="attr">&quot;spec&quot;</span>: <span class="string">&quot;&#123;&#x27;颜色&#x27;:&#x27;红&#x27;,&#x27;机身内存&#x27;:&#x27;64G&#x27;&#125;&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;image&quot;</span>: <span class="string">&quot;http://www.yigou.com/image/1.jpg&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;http://www.yigou.com/image/1.jpg,http://www.yigou.com/image/2.jpg&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;status&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;weight&quot;</span>: <span class="number">130</span></span><br><span class="line">	&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">		<span class="attr">&quot;sn&quot;</span>: <span class="string">&quot;10192010293&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;num&quot;</span>: <span class="number">100</span>,</span><br><span class="line">      	 <span class="attr">&quot;alertNum&quot;</span>: <span class="number">20</span>,</span><br><span class="line">		 <span class="attr">&quot;price&quot;</span>: <span class="number">600000</span>,</span><br><span class="line">         <span class="attr">&quot;spec&quot;</span>: <span class="string">&quot;&#123;&#x27;颜色&#x27;:&#x27;蓝&#x27;,&#x27;机身内存&#x27;:&#x27;128G&#x27;&#125;&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;image&quot;</span>: <span class="string">&quot;http://www.yigou.com/image/1.jpg&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;http://www.yigou.com/image/1.jpg,http://www.yigou.com/image/2.jpg&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;status&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;weight&quot;</span>: <span class="number">130</span></span><br><span class="line">	&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里我们需要定义一个Goods实体对前端传过来的参数进行封装：</p>
<p><img src="/2020/01/04/sku_spu/SPU%E4%B8%8ESKU/Users\gao\AppData\Roaming\Typora\typora-user-images\1574418879507.png" alt="1574418879507"></p>
<h3 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="3 代码实现"></a>3 代码实现</h3><h4 id="3-1-SPU与SKU列表的保存"><a href="#3-1-SPU与SKU列表的保存" class="headerlink" title="3.1 SPU与SKU列表的保存"></a>3.1 SPU与SKU列表的保存</h4><p>代码实现：</p>
<p>（1）yigou_service_goods_api工程创建组合实体类Goods</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品组合实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Goods</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Spu spu;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Sku&gt; skuList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Spu <span class="title">getSpu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> spu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSpu</span><span class="params">(Spu spu)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.spu = spu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Sku&gt; <span class="title">getSkuList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> skuList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSkuList</span><span class="params">(List&lt;Sku&gt; skuList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.skuList = skuList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（2）yigou_service_goods工程SpuService新增方法add(Goods goods)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 新增</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> goods</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(Goods goods)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（3）yigou_service_goods工程SpuServiceImpl实现此方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CategoryMapper categoryMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> SkuMapper skuMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> BrandMapper brandMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> IdWorker idWorker;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 保存商品 SPU+SKU列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> goods 商品组合实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Goods goods)</span> </span>&#123;</span><br><span class="line">    Spu spu = goods.getSpu();</span><br><span class="line">    <span class="keyword">long</span> spuId = idWorker.nextId();</span><br><span class="line">    spu.setId(String.valueOf(spuId));</span><br><span class="line">    spu.setIsDelete(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    spu.setIsMarketable(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    spu.setStatus(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    spuMapper.insertSelective(spu);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//保存sku集合数据到数据库</span></span><br><span class="line">    saveSkuList(goods);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 保存sku列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> goods</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">saveSkuList</span><span class="params">(Goods goods)</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取spu对象</span></span><br><span class="line">    Spu spu = goods.getSpu();</span><br><span class="line">    <span class="comment">//当前日期</span></span><br><span class="line">    Date date = <span class="keyword">new</span> Date();</span><br><span class="line">    <span class="comment">//获取品牌对象</span></span><br><span class="line">    Brand brand = brandMapper.selectByPrimaryKey(spu.getBrandId());</span><br><span class="line">    <span class="comment">//获取分类对象</span></span><br><span class="line">    Category category = categoryMapper.selectByPrimaryKey(spu.getCategory3Id());</span><br><span class="line">    <span class="comment">//获取sku集合对象</span></span><br><span class="line">    List&lt;Sku&gt; skuList = goods.getSkuList();</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (skuList != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (Sku sku : skuList) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//设置sku主键ID 分布式id</span></span><br><span class="line">            sku.setId(String.valueOf(idWorker.nextId()));</span><br><span class="line">             </span><br><span class="line">            <span class="comment">//设置sku规格 如果前端没有传数据 设置为null  &#123;&#125;</span></span><br><span class="line">            <span class="keyword">if</span> (sku.getSpec() == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(sku.getSpec())) &#123;</span><br><span class="line">                sku.setSpec(<span class="string">&quot;&#123;&#125;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//设置sku名称</span></span><br><span class="line">            <span class="comment">//(spau商品名称 + 规格)</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            String name = spu.getName();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//将规格json字符串转换成Map</span></span><br><span class="line">            Map&lt;String, String&gt; specMap = JSON.parseObject(sku.getSpec(), Map.class);</span><br><span class="line">            <span class="comment">//获取Map中的所有value</span></span><br><span class="line">            <span class="keyword">if</span> (specMap != <span class="keyword">null</span> &amp;&amp; specMap.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span>(String value : specMap.values())&#123;</span><br><span class="line">                    name += <span class="string">&quot; &quot;</span>+ value;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            sku.setName(name);<span class="comment">//名称</span></span><br><span class="line">            sku.setSpuId(spu.getId());<span class="comment">//设置spu的ID</span></span><br><span class="line">            sku.setCreateTime(date);<span class="comment">//创建日期</span></span><br><span class="line">            sku.setUpdateTime(date);<span class="comment">//修改日期</span></span><br><span class="line">            sku.setCategoryId(category.getId());<span class="comment">//商品分类ID</span></span><br><span class="line">            sku.setCategoryName(category.getName());<span class="comment">//商品分类名称</span></span><br><span class="line">            sku.setBrandName(brand.getName());<span class="comment">//品牌名称</span></span><br><span class="line">            skuMapper.insertSelective(sku);<span class="comment">//插入sku表数据</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<p>（3）修改SpuController的add方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 新增数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> goods</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">add</span><span class="params">(<span class="meta">@RequestBody</span> Goods goods)</span></span>&#123;</span><br><span class="line">    spuService.add(goods);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>application.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">goods</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.200.128:3306/yigou_goods?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;allowMultiQueries=true&amp;serverTimezone=GMT%2b8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">allow-bean-definition-overriding:</span> <span class="literal">true</span> <span class="comment">#当遇到同样名字的时候，是否允许覆盖注册</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:6868/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">default:</span>   <span class="comment">#配置全局的feign的调用超时时间  如果 有指定的服务配置 默认的配置不会生效</span></span><br><span class="line">        <span class="attr">connectTimeout:</span> <span class="number">60000</span> <span class="comment"># 指定的是 消费者 连接服务提供者的连接超时时间 是否能连接  单位是毫秒</span></span><br><span class="line">        <span class="attr">readTimeout:</span> <span class="number">20000</span>  <span class="comment"># 指定的是调用服务提供者的 服务 的超时时间（）  单位是毫秒</span></span><br><span class="line"><span class="comment">#hystrix 配置</span></span><br><span class="line"><span class="attr">hystrix:</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">    <span class="attr">default:</span></span><br><span class="line">      <span class="attr">execution:</span></span><br><span class="line">        <span class="attr">timeout:</span></span><br><span class="line">          <span class="comment">#如果enabled设置为false，则请求超时交给ribbon控制</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">isolation:</span></span><br><span class="line">          <span class="attr">strategy:</span> <span class="string">SEMAPHORE</span></span><br><span class="line">          <span class="attr">thread:</span></span><br><span class="line">            <span class="comment"># 熔断器超时时间，默认：1000/毫秒</span></span><br><span class="line">            <span class="attr">timeoutInMilliseconds:</span> <span class="number">20000</span></span><br><span class="line"><span class="attr">workerId:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">datacenterId:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>































<h4 id="3-2-品牌与分类关联"><a href="#3-2-品牌与分类关联" class="headerlink" title="3.2 品牌与分类关联"></a>3.2 品牌与分类关联</h4><p>实现思路：</p>
<p>将分类ID与SPU的品牌ID 一起插入到tb_category_brand表中</p>
<p>（1）创建实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Table(name=&quot;tb_category_brand&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryBrand</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="keyword">private</span> Integer categoryId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="keyword">private</span> Integer brandId;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getCategoryId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> categoryId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCategoryId</span><span class="params">(Integer categoryId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.categoryId = categoryId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getBrandId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> brandId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBrandId</span><span class="params">(Integer brandId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.brandId = brandId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个表是联合主键，所以templateId和brandId都有@Id注解</p>
<p>（2）新建数据访问接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CategoryBrandMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">CategoryBrand</span>&gt; </span>&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3）SpuServiceImpl引入</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CategoryBrandMapper categoryBrandMapper;</span><br></pre></td></tr></table></figure>

<p>（4）修改SpuServiceImpl的saveSkuList方法，添加分类与品牌之间的关联, </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 添加分类与品牌之间的关联</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       CategoryBrand categoryBrand = <span class="keyword">new</span> CategoryBrand();</span><br><span class="line">       categoryBrand.setBrandId(spu.getBrandId());</span><br><span class="line">       categoryBrand.setCategoryId(spu.getCategory3Id());</span><br><span class="line">       <span class="keyword">int</span> count = categoryBrandMapper.selectCount(categoryBrand);</span><br><span class="line">       <span class="comment">//判断是否有这个品牌和分类的关系数据</span></span><br><span class="line">       <span class="keyword">if</span>(count == <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="comment">//如果没有关系数据则添加品牌和分类关系数据</span></span><br><span class="line">           categoryBrandMapper.insert(categoryBrand);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>修改后代码如下:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">saveSkuList</span><span class="params">(Goods goods)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取spu对象</span></span><br><span class="line">        Spu spu = goods.getSpu();</span><br><span class="line">        <span class="comment">//当前日期</span></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        <span class="comment">//获取品牌对象</span></span><br><span class="line">        Brand brand = brandMapper.selectByPrimaryKey(spu.getBrandId());</span><br><span class="line">        <span class="comment">//获取分类对象</span></span><br><span class="line">        Category category = categoryMapper.selectByPrimaryKey(spu.getCategory3Id());</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加分类与品牌之间的关联</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        CategoryBrand categoryBrand = <span class="keyword">new</span> CategoryBrand();</span><br><span class="line">        categoryBrand.setBrandId(spu.getBrandId());</span><br><span class="line">        categoryBrand.setCategoryId(spu.getCategory3Id());</span><br><span class="line">        <span class="keyword">int</span> count = categoryBrandMapper.selectCount(categoryBrand);</span><br><span class="line">        <span class="comment">//判断是否有这个品牌和分类的关系数据</span></span><br><span class="line">        <span class="keyword">if</span>(count == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//如果没有关系数据则添加品牌和分类关系数据</span></span><br><span class="line">            categoryBrandMapper.insert(categoryBrand);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取sku集合对象</span></span><br><span class="line">        List&lt;Sku&gt; skuList = goods.getSkuList();</span><br><span class="line">        <span class="keyword">if</span> (skuList != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Sku sku : skuList) &#123;</span><br><span class="line">                <span class="comment">//设置sku主键ID</span></span><br><span class="line">                sku.setId(String.valueOf(idWorker.nextId()));</span><br><span class="line">                <span class="comment">//设置sku规格</span></span><br><span class="line">                <span class="keyword">if</span> (sku.getSpec() == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(sku.getSpec())) &#123;</span><br><span class="line">                    sku.setSpec(<span class="string">&quot;&#123;&#125;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//设置sku名称(商品名称 + 规格)</span></span><br><span class="line">                String name = spu.getName();</span><br><span class="line">                <span class="comment">//将规格json字符串转换成Map</span></span><br><span class="line">                Map&lt;String, String&gt; specMap = JSON.parseObject(sku.getSpec(), Map.class);</span><br><span class="line">                <span class="keyword">if</span> (specMap != <span class="keyword">null</span> &amp;&amp; specMap.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(String value : specMap.values())&#123;</span><br><span class="line">                        name += <span class="string">&quot; &quot;</span>+ value;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                sku.setName(name);<span class="comment">//名称</span></span><br><span class="line">                sku.setSpuId(spu.getId());<span class="comment">//设置spu的ID</span></span><br><span class="line">                sku.setCreateTime(date);<span class="comment">//创建日期</span></span><br><span class="line">                sku.setUpdateTime(date);<span class="comment">//修改日期</span></span><br><span class="line">                sku.setCategoryId(category.getId());<span class="comment">//商品分类ID</span></span><br><span class="line">                sku.setCategoryName(category.getName());<span class="comment">//商品分类名称</span></span><br><span class="line">                sku.setBrandName(brand.getName());<span class="comment">//品牌名称</span></span><br><span class="line">                skuMapper.insertSelective(sku);<span class="comment">//插入sku表数据</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-3-根据ID查询商品"><a href="#3-3-根据ID查询商品" class="headerlink" title="3.3 根据ID查询商品"></a>3.3 根据ID查询商品</h4><p>需求：根据id 查询SPU和SKU列表 ，显示效果如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;spu&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;brandId&quot;</span>: <span class="number">8557</span>,</span><br><span class="line">		<span class="attr">&quot;caption&quot;</span>: <span class="string">&quot;111&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;category1Id&quot;</span>: <span class="number">558</span>,</span><br><span class="line">		<span class="attr">&quot;category2Id&quot;</span>: <span class="number">559</span>,</span><br><span class="line">		<span class="attr">&quot;category3Id&quot;</span>: <span class="number">560</span>,</span><br><span class="line">		<span class="attr">&quot;commentNum&quot;</span>: <span class="number">0</span>,</span><br><span class="line">		<span class="attr">&quot;freightId&quot;</span>: <span class="number">0</span>,</span><br><span class="line">		<span class="attr">&quot;id&quot;</span>: <span class="number">149187842867993</span>,</span><br><span class="line">		<span class="attr">&quot;image&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;images&quot;</span>: <span class="string">&quot;[&#123;\&quot;color\&quot;:\&quot;银白色\&quot;,\&quot;url\&quot;:\&quot;//img11.360buyimg.com/n7/jfs/t30040/100/1290632710/208879/1f7e2225/5cdd0d92Nb78895a6.jpg\&quot;&#125;]&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;introduction&quot;</span>: <span class="string">&quot;这是测试手机数据&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;isDelete&quot;</span>: <span class="number">0</span>,</span><br><span class="line">		<span class="attr">&quot;isEnableSpec&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;isMarketable&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;name&quot;</span>: <span class="string">&quot;黑马智能手机&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;paraItems&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;saleNum&quot;</span>: <span class="number">0</span>,</span><br><span class="line">		<span class="attr">&quot;saleService&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;sn&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;specItems&quot;</span>: <span class="string">&quot;&#123;\&quot;颜色\&quot;:[\&quot;金色\&quot;,\&quot;黑色\&quot;,\&quot;蓝色\&quot;],\&quot;版本\&quot;:[\&quot;6GB+64GB\&quot;]&#125;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;status&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;templateId&quot;</span>: <span class="number">42</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;skuList&quot;</span>: [&#123;</span><br><span class="line">		<span class="attr">&quot;alertNum&quot;</span>: <span class="number">100</span>,</span><br><span class="line">		<span class="attr">&quot;commentNum&quot;</span>: <span class="number">0</span>,</span><br><span class="line">		<span class="attr">&quot;image&quot;</span>: <span class="string">&quot;https://m.360buyimg.com/mobilecms/s720x720_jfs/t22642/312/2563982615/103706/1398b13d/5b865bb3N0409f0d0.jpg!q70.jpg.webp&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;images&quot;</span>: <span class="string">&quot;https://m.360buyimg.com/mobilecms/s720x720_jfs/t22642/312/2563982615/103706/1398b13d/5b865bb3N0409f0d0.jpg!q70.jpg.webp&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;num&quot;</span>: <span class="number">100</span>,</span><br><span class="line">		<span class="attr">&quot;price&quot;</span>: <span class="number">90000</span>,</span><br><span class="line">		<span class="attr">&quot;saleNum&quot;</span>: <span class="number">0</span>,</span><br><span class="line">		<span class="attr">&quot;sn&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;spec&quot;</span>: <span class="string">&quot;&#123;&#x27;颜色&#x27;: &#x27;蓝色&#x27;&#125;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;status&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;weight&quot;</span>: <span class="number">10</span></span><br><span class="line">	&#125;,&#123;</span><br><span class="line">		<span class="attr">&quot;alertNum&quot;</span>: <span class="number">100</span>,</span><br><span class="line">		<span class="attr">&quot;commentNum&quot;</span>: <span class="number">0</span>,</span><br><span class="line">		<span class="attr">&quot;image&quot;</span>: <span class="string">&quot;https://m.360buyimg.com/mobilecms/s720x720_jfs/t22642/312/2563982615/103706/1398b13d/5b865bb3N0409f0d0.jpg!q70.jpg.webp&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;images&quot;</span>: <span class="string">&quot;https://m.360buyimg.com/mobilecms/s720x720_jfs/t22642/312/2563982615/103706/1398b13d/5b865bb3N0409f0d0.jpg!q70.jpg.webp&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;num&quot;</span>: <span class="number">100</span>,</span><br><span class="line">		<span class="attr">&quot;price&quot;</span>: <span class="number">80000</span>,</span><br><span class="line">		<span class="attr">&quot;saleNum&quot;</span>: <span class="number">0</span>,</span><br><span class="line">		<span class="attr">&quot;sn&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;spec&quot;</span>: <span class="string">&quot;&#123;&#x27;颜色&#x27;: &#x27;黑色&#x27;&#125;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;status&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;weight&quot;</span>: <span class="number">10</span></span><br><span class="line">	  &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码实现：</p>
<p>（1）yigou_service_goods工程SpuService新增方法定义</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据ID查询商品</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Goods <span class="title">findGoodsById</span><span class="params">(String id)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（2）yigou_service_goods工程SpuServiceImpl实现此方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据ID查询商品</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Goods <span class="title">findGoodsById</span><span class="params">(String id)</span></span>&#123;</span><br><span class="line">    <span class="comment">//查询spu</span></span><br><span class="line">    Spu spu = spuMapper.selectByPrimaryKey(id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询SKU 列表</span></span><br><span class="line">    Example example=<span class="keyword">new</span> Example(Sku.class);</span><br><span class="line">    Example.Criteria criteria = example.createCriteria();</span><br><span class="line">    criteria.andEqualTo(<span class="string">&quot;spuId&quot;</span>,id);</span><br><span class="line">    List&lt;Sku&gt; skuList = skuMapper.selectByExample(example);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//封装，返回</span></span><br><span class="line">    Goods goods=<span class="keyword">new</span> Goods();</span><br><span class="line">    goods.setSpu(spu);</span><br><span class="line">    goods.setSkuList(skuList);</span><br><span class="line">    <span class="keyword">return</span> goods;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3）修改SpuController的findById方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">findById</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span></span>&#123;</span><br><span class="line">    Goods goods = spuService.findGoodsById(id);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;查询成功&quot;</span>,goods);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-4-修改"><a href="#3-4-修改" class="headerlink" title="3.4 修改"></a>3.4 修改</h4><p>（1）yigou_service_goods工程SpuService新增方法定义</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 修改数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> spu</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Goods goods)</span></span>;</span><br></pre></td></tr></table></figure>

<p>（2）yigou_service_goods工程SpuServiceImpl实现此方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Goods goods )</span> </span>&#123;</span><br><span class="line">    <span class="comment">//取出spu部分</span></span><br><span class="line">    Spu spu = goods.getSpu();</span><br><span class="line">    spuMapper.updateByPrimaryKey(spu);</span><br><span class="line">    <span class="comment">//删除原sku列表</span></span><br><span class="line">    Example example=<span class="keyword">new</span> Example(Sku.class);</span><br><span class="line">    Example.Criteria criteria = example.createCriteria();</span><br><span class="line">    criteria.andEqualTo(<span class="string">&quot;spuId&quot;</span>,spu.getId());</span><br><span class="line">    skuMapper.deleteByExample(example);</span><br><span class="line"></span><br><span class="line">    saveSkuList(goods);<span class="comment">//保存sku列表</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>（3）修改SpuController的update方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 修改数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> goods</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PutMapping(value=&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">update</span><span class="params">(<span class="meta">@RequestBody</span> Goods goods,<span class="meta">@PathVariable</span> String id)</span></span>&#123;</span><br><span class="line">    spuService.update(goods);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Result(<span class="keyword">true</span>,StatusCode.OK,<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>SPU与SKU</tag>
      </tags>
  </entry>
  <entry>
    <title>spring常用配置文件</title>
    <url>/2018/09/12/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="java常用配置文件-更新"><a href="#java常用配置文件-更新" class="headerlink" title="java常用配置文件(更新)"></a>java常用配置文件(更新)</h1><h2 id="1-log4j日志"><a href="#1-log4j日志" class="headerlink" title="1 log4j日志"></a>1 log4j日志</h2><p>日志级别从高到低分为：<br> A：off 最高等级，用于关闭所有日志记录。<br> B：fatal 指出每个严重的错误事件将会导致应用程序的退出。<br> C：error 指出虽然发生错误事件，但仍然不影响系统的继续运行。<br> D：warm 表明会出现潜在的错误情形。<br> E：info 一般和在粗粒度级别上，强调应用程序的运行全程。<br> F：debug 一般用于细粒度级别上，对调试应用程序非常有帮助。<br> G：all 最低等级，用于打开所有日志记录。</p>
<p>上面这些级别是定义在<strong>org.apache.log4j.Level</strong>类中。Log4j只建议使用4个级别，优先级从高到低分别是<strong>error,warn,info和debug</strong>。通过使用日志级别，可以控制应用程序中相应级别日志信息的输出。例如，如果使用b了info级别，则应用程序中所有低于info级别的日志信息(如debug)将不会被打印出来。</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">### direct log messages to stdout ###</span></span><br><span class="line"><span class="meta">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.stdout.Target</span>=<span class="string">System.err</span></span><br><span class="line"><span class="meta">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.stdout.layout.ConversionPattern</span>=<span class="string">%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### direct messages to file mylog.log ###</span></span><br><span class="line"><span class="meta">log4j.appender.file</span>=<span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.file.File</span>=<span class="string">c:\\mylog.log</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### set log levels - for more verbose logging change &#x27;info&#x27; to &#x27;debug&#x27; ###</span></span><br><span class="line"></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">debug, stdout</span></span><br></pre></td></tr></table></figure>



<h2 id="spring-加载properties"><a href="#spring-加载properties" class="headerlink" title="spring 加载properties"></a>spring 加载properties</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:properties/rabbitmq.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 定义rabbitmq connectionFactory --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rabbit:connection-factory</span> <span class="attr">id</span>=<span class="string">&quot;connectionFactory&quot;</span> <span class="attr">host</span>=<span class="string">&quot;$&#123;rabbitmq.host&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                               <span class="attr">port</span>=<span class="string">&quot;$&#123;rabbitmq.port&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                               <span class="attr">username</span>=<span class="string">&quot;$&#123;rabbitmq.username&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                               <span class="attr">password</span>=<span class="string">&quot;$&#123;rabbitmq.password&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                               <span class="attr">virtual-host</span>=<span class="string">&quot;$&#123;rabbitmq.virtual-host&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="2-spring-dao层配置"><a href="#2-spring-dao层配置" class="headerlink" title="2.spring-dao层配置"></a>2.spring-dao层配置</h2><h3 id="数据源"><a href="#数据源" class="headerlink" title="数据源"></a>数据源</h3><h3 id="sqlSessionFactory"><a href="#sqlSessionFactory" class="headerlink" title="sqlSessionFactory"></a>sqlSessionFactory</h3><h3 id="mapper动态代理对象"><a href="#mapper动态代理对象" class="headerlink" title="mapper动态代理对象"></a>mapper动态代理对象</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="line">       xmlns:context=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="line">       xmlns:p=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span><br><span class="line">       xmlns:aop=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span><br><span class="line">       xmlns:tx=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span><br><span class="line">       xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">       xsi:schemaLocation=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="string">							http://www.springframework.org/schema/beans/spring-beans-4.2.xsd</span></span><br><span class="line"><span class="string">							http://www.springframework.org/schema/context</span></span><br><span class="line"><span class="string">							http://www.springframework.org/schema/context/spring-context.xsd</span></span><br><span class="line"><span class="string">							http://www.springframework.org/schema/aop</span></span><br><span class="line"><span class="string">							http://www.springframework.org/schema/aop/spring-aop.xsd</span></span><br><span class="line"><span class="string">							http://www.springframework.org/schema/tx</span></span><br><span class="line"><span class="string">							http://www.springframework.org/schema/tx/spring-tx.xsd</span></span><br><span class="line"><span class="string">							http://www.springframework.org/schema/util</span></span><br><span class="line"><span class="string">							http://www.springframework.org/schema/util/spring-util.xsd&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--数据源 数据库连接池--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">&quot;dataSource&quot;</span></span><br><span class="line">          <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span> destroy-method=<span class="string">&quot;close&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;username&quot;</span> value=<span class="string">&quot;root&quot;</span> /&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;password&quot;</span> value=<span class="string">&quot;***&quot;</span> /&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;driverClassName&quot;</span> value=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;url&quot;</span> value=<span class="string">&quot;jdbc:mysql://106.54.95.74:3306/health?characterEncoding=UTF-8&quot;</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;!--spring和mybatis整合的工厂bean--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;dataSource&quot;</span> ref=<span class="string">&quot;dataSource&quot;</span> /&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;configLocation&quot;</span> value=<span class="string">&quot;classpath:SqlMapConfig.xml&quot;</span> /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;!--批量扫描接口生成代理对象--&gt;</span><br><span class="line">    &lt;bean <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span><br><span class="line">        &lt;!--指定接口所在的包--&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;basePackage&quot;</span> value=<span class="string">&quot;wang.yinggang.dao&quot;</span> /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br><span class="line">       </span><br></pre></td></tr></table></figure>





<p><strong>↓</strong></p>
<h2 id="3-分页查询组件与代码"><a href="#3-分页查询组件与代码" class="headerlink" title="3.分页查询组件与代码"></a><strong>3.分页查询组件与代码</strong></h2><p><strong>SqlMapConfig.xml</strong></p>
<p><strong>配置分页查询插件</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- com.github.pagehelper 为 PageHelper 类所在包名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageHelper&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL 六种数据库--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dialect&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mysql&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//参数取json对象</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/findPage&quot;)</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">//queryPageBean对象</span></span><br><span class="line">        <span class="comment">//private Integer currentPage;//当前页</span></span><br><span class="line">        <span class="comment">//private Integer pageSize;//每页显示条数</span></span><br><span class="line">        <span class="comment">//private String queryString;//查询条件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageResult <span class="title">findPage</span><span class="params">(<span class="meta">@RequestBody</span> QueryPageBean queryPageBean)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//调用service层pageQurey</span></span><br><span class="line">        </span><br><span class="line">       	<span class="comment">//pageResult对象</span></span><br><span class="line">      	<span class="comment">//private Long total;//总记录数</span></span><br><span class="line">   		<span class="comment">//private List rows;//当前页结果</span></span><br><span class="line">        PageResult pageResult = checkItemService.pageQurey(queryPageBean);</span><br><span class="line">        <span class="keyword">return</span> pageResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//service层</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PageResult <span class="title">pageQurey</span><span class="params">(QueryPageBean queryPageBean)</span> </span>&#123;</span><br><span class="line">        Integer currentPage = queryPageBean.getCurrentPage();</span><br><span class="line">        Integer pageSize = queryPageBean.getPageSize();</span><br><span class="line">        String queryString = queryPageBean.getQueryString();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//基于mybatis</span></span><br><span class="line">        PageHelper.startPage(currentPage,pageSize);</span><br><span class="line"></span><br><span class="line">    	<span class="comment">//调用dao层 得到的Page集合</span></span><br><span class="line">    	<span class="comment">//CheckItem封装了数据</span></span><br><span class="line">        Page&lt;CheckItem&gt; page = checkItemDao.selectByCondition(queryString);</span><br><span class="line"></span><br><span class="line">    	<span class="comment">//数据的总条数</span></span><br><span class="line">        <span class="keyword">long</span> total = page.getTotal();</span><br><span class="line">    	<span class="comment">//数据集合结果</span></span><br><span class="line">        List&lt;CheckItem&gt; rows = page.getResult();</span><br><span class="line"></span><br><span class="line">    	</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PageResult(total,rows);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>





<h2 id="4-spring-service层配置"><a href="#4-spring-service层配置" class="headerlink" title="4.spring-service层配置**"></a>4.spring-service层配置**</h2><h3 id="服务提供者配置"><a href="#服务提供者配置" class="headerlink" title="服务提供者配置"></a>服务提供者配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span> <span class="attr">xmlns:dubbo</span>=<span class="string">&quot;http://dubbo.apache.org/schema/dubbo&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">                            http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                            http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">                            http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                            http://org.apache.dubbo/schema/dubbo</span></span></span><br><span class="line"><span class="tag"><span class="string">                            http://code.alibabatech.com/schema/dubbo/dubbo.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                            http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">                            http://www.springframework.org/schema/context/spring-context.xsd http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定应用名称 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;wang.yinggang.service&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">&quot;health_provider&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--指定暴露服务的端口，如果不指定默认为20880--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:protocol</span> <span class="attr">name</span>=<span class="string">&quot;dubbo&quot;</span> <span class="attr">port</span>=<span class="string">&quot;20887&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--指定服务注册中心地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">address</span>=<span class="string">&quot;zookeeper://106.54.95.74:2181&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--批量扫描，发布服务--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:annotation</span> <span class="attr">package</span>=<span class="string">&quot;wang.yinggang.service&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="5-spring事务配置"><a href="#5-spring事务配置" class="headerlink" title="5.spring事务配置"></a>5.spring事务配置</h2><p><strong>spring-tx.xml</strong>   </p>
<p>事务管理器</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 事务管理器  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        开启事务控制的注解支持</span></span><br><span class="line"><span class="comment">        注意：此处必须加入proxy-target-class=&quot;true&quot;，</span></span><br><span class="line"><span class="comment">              需要进行事务控制，会由Spring框架产生代理对象，</span></span><br><span class="line"><span class="comment">              Dubbo需要将Service发布为服务，要求必须使用cglib创建代理对象。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">proxy-target-class</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service(interfaceClass = CheckItemService.class)</span><span class="comment">//当前服务是实现的哪个服务接口</span></span><br><span class="line"><span class="meta">@Transactional</span> <span class="comment">//事务注解</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="6-provider提供者web-xml"><a href="#6-provider提供者web-xml" class="headerlink" title="6.provider提供者web.xml"></a>6.provider提供者web.xml</h2><p><strong>加载spring容器</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 加载spring容器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:spring-*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="7-springmvc-xml"><a href="#7-springmvc-xml" class="headerlink" title="7.springmvc.xml"></a>7.springmvc.xml</h2><h3 id="json转换器"><a href="#json转换器" class="headerlink" title="json转换器"></a>json转换器</h3><h3 id="扫包"><a href="#扫包" class="headerlink" title="扫包"></a>扫包</h3><h3 id="消费方dobbo配置"><a href="#消费方dobbo配置" class="headerlink" title="消费方dobbo配置"></a>消费方dobbo配置</h3><h3 id="文件上传组件"><a href="#文件上传组件" class="headerlink" title="文件上传组件"></a>文件上传组件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span> <span class="attr">xmlns:dubbo</span>=<span class="string">&quot;http://dubbo.apache.org/schema/dubbo&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://code.alibabatech.com/schema/dubbo</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://code.alibabatech.com/schema/dubbo/dubbo.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">                  http://www.springframework.org/schema/context/spring-context.xsd http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 注解驱动 &lt;mvc:annotation-driven/&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span> <span class="attr">value</span>=<span class="string">&quot;application/json&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;features&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>WriteMapNullValue<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>WriteDateUseDateFormat<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;wang.yinggang.controller&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 指定应用名称 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">&quot;health_backend&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--指定服务注册中心地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">address</span>=<span class="string">&quot;zookeeper://106.54.95.74:2181&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--批量扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:annotation</span> <span class="attr">package</span>=<span class="string">&quot;wang.yinggang.controller&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        超时全局设置 10分钟</span></span><br><span class="line"><span class="comment">        check=false 不检查服务提供方，开发阶段建议设置为false</span></span><br><span class="line"><span class="comment">        check=true 启动时检查服务提供方，如果服务提供方没有启动则报错</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:consumer</span> <span class="attr">timeout</span>=<span class="string">&quot;600000&quot;</span> <span class="attr">check</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--文件上传组件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;104857600&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxInMemorySize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4096&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="8-spring-redis"><a href="#8-spring-redis" class="headerlink" title="8.spring-redis"></a>8.spring-redis</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:dubbo</span>=<span class="string">&quot;http://code.alibabatech.com/schema/dubbo&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">                         http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        				http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">                         http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        				http://code.alibabatech.com/schema/dubbo</span></span></span><br><span class="line"><span class="tag"><span class="string">                         http://code.alibabatech.com/schema/dubbo/dubbo.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        				http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">                         http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Jedis连接池的相关配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jedisPoolConfig&quot;</span> <span class="attr">class</span>=<span class="string">&quot;redis.clients.jedis.JedisPoolConfig&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxTotal&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>200<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdle&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>50<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnBorrow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnReturn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jedisPool&quot;</span> <span class="attr">class</span>=<span class="string">&quot;redis.clients.jedis.JedisPool&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;poolConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jedisPoolConfig&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;host&quot;</span> <span class="attr">value</span>=<span class="string">&quot;106.54.95.74&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;port&quot;</span> <span class="attr">value</span>=<span class="string">&quot;6379&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;timeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;30000&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;***&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="9-spring-jobs"><a href="#9-spring-jobs" class="headerlink" title="9.spring-jobs"></a>9.spring-jobs</h2><h3 id="spring注解驱动"><a href="#spring注解驱动" class="headerlink" title="spring注解驱动"></a>spring注解驱动</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:dubbo</span>=<span class="string">&quot;http://code.alibabatech.com/schema/dubbo&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">							http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">							http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">							http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">							http://code.alibabatech.com/schema/dubbo</span></span></span><br><span class="line"><span class="tag"><span class="string">							http://code.alibabatech.com/schema/dubbo/dubbo.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">							http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">							http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启spring注解使用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>&gt;</span><span class="tag">&lt;/<span class="name">context:annotation-config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注册自定义Job 类 bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clearImgJob&quot;</span> <span class="attr">class</span>=<span class="string">&quot;wang.yinggang.jobs.ClearImgJob&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jobDetail&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入目标&quot;对象&quot; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;targetObject&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;clearImgJob&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入目标&quot;方法&quot; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;targetMethod&quot;</span> <span class="attr">value</span>=<span class="string">&quot;clearImg&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注册一个触发器，指定任务触发的时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;myTrigger&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.scheduling.quartz.CronTriggerFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入JobDetail --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jobDetail&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jobDetail&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定触发的时间，基于Cron表达式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cronExpression&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            &lt;value&gt;0 0 2 * * ?&lt;/value&gt;</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>0/10 * * * * ?<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注册一个统一的调度工厂，通过这个调度工厂调度任务 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;scheduler&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.scheduling.quartz.SchedulerFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入多个触发器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;triggers&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;myTrigger&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>SSM框架</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql语句</title>
    <url>/2019/10/17/mysql/Mysql%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<h2 id="一、综合使用-查询-目录："><a href="#一、综合使用-查询-目录：" class="headerlink" title="一、综合使用 查询 目录："></a>一、综合使用 查询 目录：</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#----综合使用</span></span><br><span class="line">书写顺序</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> * </span><br><span class="line"><span class="keyword">from</span> <span class="string">&#x27;表名&#x27;</span> </span><br><span class="line"><span class="keyword">where</span> <span class="string">&#x27;限制条件&#x27;</span>  </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="string">&#x27;分组依据&#x27;</span> </span><br><span class="line"><span class="keyword">having</span> <span class="string">&#x27;过滤条件&#x27;</span> </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>  </span><br><span class="line"><span class="keyword">limit</span> <span class="string">&#x27;展示条数&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">执行顺序</span><br><span class="line"><span class="keyword">from</span>       <span class="comment">-- 查询</span></span><br><span class="line"><span class="keyword">where</span>      <span class="comment">-- 限制条件</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span>   <span class="comment">-- 分组</span></span><br><span class="line"><span class="keyword">having</span>     <span class="comment">-- 过滤条件</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>   <span class="comment">-- 排序</span></span><br><span class="line"><span class="keyword">limit</span>      <span class="comment">-- 展示条数</span></span><br><span class="line"><span class="keyword">distinct</span>   <span class="comment">-- 去重</span></span><br><span class="line"><span class="keyword">select</span>     <span class="comment">-- 查询的结果</span></span><br><span class="line">正则：<span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">name</span> regexp <span class="string">&#x27;^j.*(n|y)$&#x27;</span>;</span><br><span class="line">集合查询：max 、min 、avg 、sum 、count 、group_concat 。</span><br><span class="line">内连接：inner join</span><br><span class="line">左连接：left join</span><br><span class="line">右连接：right join</span><br><span class="line">全连接： 左连接 union 右连接</span><br><span class="line"><span class="keyword">replace</span> 替换</span><br><span class="line">拼接：<span class="keyword">concat</span>、<span class="keyword">concat_ws</span>、<span class="keyword">group_concat</span></span><br></pre></td></tr></table></figure>

<h2 id="二、常规设置操作"><a href="#二、常规设置操作" class="headerlink" title="二、常规设置操作"></a>二、常规设置操作</h2><h3 id="1-服务器设置远程访问"><a href="#1-服务器设置远程访问" class="headerlink" title="1.服务器设置远程访问"></a>1.服务器设置远程访问</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27; with grant option;</span><br></pre></td></tr></table></figure>

<h3 id="2-Linux中数据库的基本操作命令"><a href="#2-Linux中数据库的基本操作命令" class="headerlink" title="2.Linux中数据库的基本操作命令"></a>2.Linux中数据库的基本操作命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.使用service </span><br><span class="line"></span><br><span class="line">  启动：service mysql start</span><br><span class="line"></span><br><span class="line">  停止：service mysql stop</span><br><span class="line"></span><br><span class="line">  重启：service mysql restart</span><br><span class="line"></span><br><span class="line">2.清屏：clear,reset</span><br></pre></td></tr></table></figure>

<h3 id="3-备份数据库"><a href="#3-备份数据库" class="headerlink" title="3.备份数据库"></a>3.备份数据库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">mysqldump -uroot -p密码 数据库名 &gt; D:/备份文件名.sql</span></span><br></pre></td></tr></table></figure>

<h3 id="4-恢复备份的数据库"><a href="#4-恢复备份的数据库" class="headerlink" title="4.恢复备份的数据库"></a>4.恢复备份的数据库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">首先在mysql里建好数据库名</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">mysql -uroot -p密码 数据库名 &lt; D:/备份文件名.sql</span></span><br></pre></td></tr></table></figure>

<h3 id="5-查询binlog日志是否开启"><a href="#5-查询binlog日志是否开启" class="headerlink" title="5.查询binlog日志是否开启"></a>5.查询binlog日志是否开启</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">show variables like &#x27;log_%&#x27;; </span><br></pre></td></tr></table></figure>

<p>###6.mysql linux 部分的配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1. 通过secureCRT工具连接Linux系统</span><br><span class="line"></span><br><span class="line">2. 上传 mysql 的安装包</span><br><span class="line"></span><br><span class="line">    alt + p -------&gt; put d:/setup/mysql-5.7.27-1.el7.x86_64.rpm-bundle.tar</span><br><span class="line"></span><br><span class="line">3. 解压 mysql 的安装包</span><br><span class="line"></span><br><span class="line">	mkdir mysql</span><br><span class="line">    </span><br><span class="line">	tar -xvf mysql-5.7.27-1.el7.x86_64.rpm-bundle.tar -C mysql/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4. 安装客户端</span><br><span class="line">    </span><br><span class="line">	cd mysql/</span><br><span class="line">    </span><br><span class="line">	rpm -ivh mysql-community-client-5.7.27-1.el7.x86_64.rpm --force --nodeps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5. 安装服务端</span><br><span class="line">    </span><br><span class="line">	rpm -ivh mysql-community-server-5.7.27-1.el7.x86_64.rpm --force --nodeps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6. 修改mysql默认字符集</span><br><span class="line">    </span><br><span class="line">	vi /etc/my.cnf</span><br><span class="line">    </span><br><span class="line">	添加如下内容：</span><br><span class="line">    </span><br><span class="line">	[mysqld]</span><br><span class="line">	character-set-server=utf8</span><br><span class="line">	collation-server=utf8_general_ci</span><br><span class="line"> </span><br><span class="line">	-- 在文件最下方添加</span><br><span class="line">    </span><br><span class="line">	[client]</span><br><span class="line">	default-character-set=utf8</span><br><span class="line"></span><br><span class="line">7. 启动mysql服务</span><br><span class="line">    </span><br><span class="line">	service mysqld start</span><br><span class="line"></span><br><span class="line">8. 登录mysql</span><br><span class="line">    </span><br><span class="line">	mysql -u root -p  敲回车，输入密码</span><br><span class="line">    </span><br><span class="line">	初始密码查看：cat /var/log/mysqld.log</span><br><span class="line">    </span><br><span class="line">	在root@localhost:   后面的就是初始密码</span><br><span class="line"></span><br><span class="line">9. 修改mysql登录密码</span><br><span class="line">    </span><br><span class="line">	set global validate_password_policy=0;</span><br><span class="line">    </span><br><span class="line">	set global validate_password_length=1;</span><br><span class="line">    </span><br><span class="line">	set password=password(&#x27;密码&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">10. 授予远程连接权限</span><br><span class="line">    </span><br><span class="line">	//授权</span><br><span class="line">	grant all privileges on *.* to &#x27;root&#x27; @&#x27;%&#x27; identified by &#x27;密码&#x27;;</span><br><span class="line">    </span><br><span class="line">	//刷新</span><br><span class="line">	flush privileges;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">11. 关闭Linux系统防火墙</span><br><span class="line">	systemctl stop firewalld</span><br><span class="line"></span><br><span class="line">12. 重启mysql服务</span><br><span class="line">	service mysqld restart</span><br><span class="line"></span><br><span class="line">13. 使用SQLYog工具连接mysql</span><br></pre></td></tr></table></figure>



<h2 id="三、代码命令整理"><a href="#三、代码命令整理" class="headerlink" title="三、代码命令整理"></a>三、代码命令整理</h2><h3 id="1-操作数据库"><a href="#1-操作数据库" class="headerlink" title="1 操作数据库"></a>1 操作数据库</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	查询所有数据库</span><br><span class="line">	标准语法：</span><br><span class="line">		show databases;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询所有数据库</span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	查询某个数据库的创建语句</span><br><span class="line">	标准语法：</span><br><span class="line">		show create database 数据库名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询mysql数据库的创建语句</span><br><span class="line">show create database mysql;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	创建数据库</span><br><span class="line">	标准语法：</span><br><span class="line">		create database 数据库名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 创建db1数据库</span><br><span class="line">create database db1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	创建数据库，判断、如果不存在则创建</span><br><span class="line">	标准语法：</span><br><span class="line">		create database if not exists 数据库名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 创建数据库db2(判断，如果不存在则创建)</span><br><span class="line">create database if not exists db2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	创建数据库、并指定字符集</span><br><span class="line">	标准语法：</span><br><span class="line">		create database 数据库名称 character set 字符集名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 创建数据库db3、并指定字符集utf8</span><br><span class="line">create database db3 character set utf8;</span><br><span class="line"></span><br><span class="line">-- 查看db3数据库的字符集</span><br><span class="line">show create database db3;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 练习：创建db4数据库、如果不存在则创建，指定字符集为gbk</span><br><span class="line">create database if not exists db4 character set gbk;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 查看db4数据库的字符集</span><br><span class="line">show create database db4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	修改数据库的字符集</span><br><span class="line">	标准语法：</span><br><span class="line">		alter database 数据库名称 character set 字符集名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 修改数据库db4的字符集为utf8</span><br><span class="line">alter database db4 character set utf8;</span><br><span class="line"></span><br><span class="line">-- 查看db4数据库的字符集</span><br><span class="line">show create database db4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	删除数据库</span><br><span class="line">	标准语法：</span><br><span class="line">		drop database 数据库名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除db1数据库</span><br><span class="line">drop database db1;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	删除数据库，判断、如果存在则删除</span><br><span class="line">	标准语法：</span><br><span class="line">		drop database if exists 数据库名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除数据库db2，如果存在</span><br><span class="line">drop database if exists db2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	使用数据库</span><br><span class="line">	标准语法：</span><br><span class="line">		use 数据库名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 使用db4数据库</span><br><span class="line">use db4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	查询当前使用的数据库</span><br><span class="line">	标准语法：</span><br><span class="line">		select database();</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询当前正在使用的数据库</span><br><span class="line">select database();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-操作数据表"><a href="#2-操作数据表" class="headerlink" title="2 操作数据表"></a>2 操作数据表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 使用mysql数据库</span><br><span class="line">use mysql;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	查询所有数据表</span><br><span class="line">	标准语法：</span><br><span class="line">		show tables;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询库中所有的表</span><br><span class="line">show tables;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	查询表结构</span><br><span class="line">	标准语法：</span><br><span class="line">		desc 表名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询user表结构</span><br><span class="line">desc user;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	查询数据表的字符集</span><br><span class="line">	标准语法：</span><br><span class="line">		show table status from 数据库名称 like &#39;表名&#39;;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查看mysql数据库中user表字符集</span><br><span class="line">show table status from mysql like &#39;user&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	创建数据表</span><br><span class="line">	标准语法：</span><br><span class="line">		create table 表名(</span><br><span class="line">			列名 数据类型 约束,</span><br><span class="line">			列名 数据类型 约束,</span><br><span class="line">			...</span><br><span class="line">			列名 数据类型 约束</span><br><span class="line">		);</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 创建一个product商品表(商品编号、商品名称、商品价格、商品库存、上架时间)</span><br><span class="line">create table product(</span><br><span class="line">	id int,</span><br><span class="line">	name varchar(20),</span><br><span class="line">	price double,</span><br><span class="line">	stock int,</span><br><span class="line">	insert_time date</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 查看product表详细结构</span><br><span class="line">desc product;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	修改表名</span><br><span class="line">	标准语法：</span><br><span class="line">		alter table 旧表名 rename to 新表名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 修改product表名为product2</span><br><span class="line">alter table product rename to product2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	修改表的字符集</span><br><span class="line">	标准语法：</span><br><span class="line">		alter table 表名 character set 字符集名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查看db3数据库中product2数据表字符集</span><br><span class="line">show table status from db3 like &#39;product2&#39;;</span><br><span class="line"></span><br><span class="line">-- 修改product2数据表字符集为gbk</span><br><span class="line">alter table product2 character set gbk;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	给表添加列</span><br><span class="line">	标准语法：</span><br><span class="line">		alter table 表名 add 列名 数据类型;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 给product2表添加一列color</span><br><span class="line">alter table product2 add color varchar(10);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	修改表中列的数据类型</span><br><span class="line">	标准语法：</span><br><span class="line">		alter table 表名 modify 列名 数据类型;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 将color数据类型修改为int</span><br><span class="line">alter table product2 modify color int;</span><br><span class="line"></span><br><span class="line">-- 查看product2表详细信息</span><br><span class="line">desc product2;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	修改表中列的名称和数据类型</span><br><span class="line">	标准语法：</span><br><span class="line">		alter table 表名 change 旧列名 新列名 数据类型;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 将color修改为address</span><br><span class="line">alter table product2 change color address varchar(200);</span><br><span class="line"></span><br><span class="line">-- 查看product2表详细信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	删除表中的列</span><br><span class="line">	标准语法：</span><br><span class="line">		alter table 表名 drop 列名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除address列</span><br><span class="line">alter table product2 drop address;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	删除表</span><br><span class="line">	标准语法：</span><br><span class="line">		drop table 表名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除product2表</span><br><span class="line">drop table product2;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	删除表，判断、如果存在则删除</span><br><span class="line">	标准语法：</span><br><span class="line">		drop table if exists 表名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除product2表，如果存在则删除</span><br><span class="line">drop table if exists product2;</span><br></pre></td></tr></table></figure>

<h3 id="3-新增表数据"><a href="#3-新增表数据" class="headerlink" title="3 新增表数据"></a>3 新增表数据</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	给指定列添加数据</span><br><span class="line">	标准语法：</span><br><span class="line">		insert into 表名(列名1,列名2,...) values (值1,值2,...);</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 向product表添加一条数据</span><br><span class="line">insert into product (id,name,price,stock,insert_time) values (1,&#39;手机&#39;,1999.99,25,&#39;2020-02-02&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 向product表添加指定列数据</span><br><span class="line">insert into product (id,name,price) values (2,&#39;电脑&#39;,3999.99);</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	给全部列添加数据</span><br><span class="line">	标准语法：</span><br><span class="line">		insert into 表名 values (值1,值2,值3,...);</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 默认给全部列添加数据</span><br><span class="line">insert into product values (3,&#39;冰箱&#39;,1500,35,&#39;2030-03-03&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	批量添加所有列数据</span><br><span class="line">	标准语法：</span><br><span class="line">		insert into 表名 values (值1,值2,值3,...),(值1,值2,值3,...),(值1,值2,值3,...);</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 批量添加数据</span><br><span class="line">insert into product values (4,&#39;洗衣机&#39;,800,15,&#39;2030-05-05&#39;),(5,&#39;微波炉&#39;,300,45,&#39;2030-06-06&#39;);</span><br></pre></td></tr></table></figure>

<h3 id="4-修改和删除表数据"><a href="#4-修改和删除表数据" class="headerlink" title="4 修改和删除表数据"></a>4 修改和删除表数据</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	修改表数据</span><br><span class="line">	标准语法：</span><br><span class="line">		update 表名 set 列名1 &#x3D; 值1,列名2 &#x3D; 值2,... [where 条件];</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 修改手机的价格为3500</span><br><span class="line">update product set price&#x3D;3500 where name&#x3D;&#39;手机&#39;;</span><br><span class="line"></span><br><span class="line">-- 修改电脑的价格为1800、库存为36</span><br><span class="line">update product set price&#x3D;1900,stock&#x3D;36 where name&#x3D;&#39;电脑&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	删除表数据</span><br><span class="line">	标准语法：</span><br><span class="line">		delete from 表名 [where 条件];</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除product表中的微波炉信息</span><br><span class="line">delete from product where name&#x3D;&#39;微波炉&#39;;</span><br><span class="line"></span><br><span class="line">-- 删除product表中库存为10的商品信息</span><br><span class="line">delete from product where stock&gt;10;</span><br></pre></td></tr></table></figure>

<h3 id="5-查看表数据"><a href="#5-查看表数据" class="headerlink" title="5 查看表数据"></a>5 查看表数据</h3><h4 id="5-1-数据准备"><a href="#5-1-数据准备" class="headerlink" title="5.1 数据准备"></a>5.1 数据准备</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建db1数据库</span><br><span class="line">create database db1;</span><br><span class="line"></span><br><span class="line">-- 使用db1数据库</span><br><span class="line">use db1;</span><br><span class="line"></span><br><span class="line">-- 创建数据表</span><br><span class="line">create table product(</span><br><span class="line">	id int,			-- 商品编号</span><br><span class="line">	name varchar(20),	-- 商品名称</span><br><span class="line">	price double,		-- 商品价格</span><br><span class="line">	brand varchar(10),	-- 商品品牌</span><br><span class="line">	stock int,		-- 商品库存</span><br><span class="line">	insert_time date        -- 添加时间</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 添加数据</span><br><span class="line">insert into product values </span><br><span class="line">(1,&#39;华为手机&#39;,3999,&#39;华为&#39;,23,&#39;2088-03-10&#39;),</span><br><span class="line">(2,&#39;小米手机&#39;,2999,&#39;小米&#39;,30,&#39;2088-05-15&#39;),</span><br><span class="line">(3,&#39;苹果手机&#39;,5999,&#39;苹果&#39;,18,&#39;2088-08-20&#39;),</span><br><span class="line">(4,&#39;华为电脑&#39;,6999,&#39;华为&#39;,14,&#39;2088-06-16&#39;),</span><br><span class="line">(5,&#39;小米电脑&#39;,4999,&#39;小米&#39;,26,&#39;2088-07-08&#39;),</span><br><span class="line">(6,&#39;苹果电脑&#39;,8999,&#39;苹果&#39;,15,&#39;2088-10-25&#39;),</span><br><span class="line">(7,&#39;联想电脑&#39;,7999,&#39;联想&#39;,null,&#39;2088-11-11&#39;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5-2-查询全部"><a href="#5-2-查询全部" class="headerlink" title="5.2 查询全部"></a>5.2 查询全部</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	查询全部数据</span><br><span class="line">	标准语法：</span><br><span class="line">		select * from 表名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询product表所有数据</span><br><span class="line">select * from product;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	查询指定列</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名1,列名2,... from 表名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询名称、价格、品牌</span><br><span class="line">select name,price,brand from product;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	去除重复查询</span><br><span class="line">	标准语法：</span><br><span class="line">		select distinct 列名1,列名2,... from 表名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询品牌</span><br><span class="line">select brand from product;</span><br><span class="line">-- 查询品牌，去除重复</span><br><span class="line">select distinct brand from product;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	计算列的值</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名1 运算符(+ - * &#x2F;) 列名2 from 表名;</span><br><span class="line">		</span><br><span class="line">	如果某一列为null，可以进行替换</span><br><span class="line">	ifnull(表达式1,表达式2)</span><br><span class="line">	表达式1：想替换的列</span><br><span class="line">	表达式2：想替换的值</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询商品名称和库存，库存数量在原有基础上加10</span><br><span class="line">select name,stock+10 from product;</span><br><span class="line"></span><br><span class="line">-- 查询商品名称和库存，库存数量在原有基础上加10。进行null值判断</span><br><span class="line">select name,ifnull(stock,0)+10 from product;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	起别名</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名1,列名2,... as 别名 from 表名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询商品名称和库存，库存数量在原有基础上加10。进行null值判断。起别名为getsum</span><br><span class="line">select name,ifnull(stock,0)+10 as getsum from product;</span><br><span class="line">select name,ifnull(stock,0)+10 getsum from product;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5-3-条件查询"><a href="#5-3-条件查询" class="headerlink" title="5.3 条件查询"></a>5.3 条件查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	条件查询</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名列表 from 表名 where 条件;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询库存大于20的商品信息</span><br><span class="line">select * from product where stock &gt; 20;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 查询品牌为华为的商品信息</span><br><span class="line">select * from product where brand&#x3D;&#39;华为&#39;;</span><br><span class="line"></span><br><span class="line">-- 查询金额在4000 ~ 6000之间的商品信息</span><br><span class="line">select * from product where price &gt;&#x3D; 4000 and price &lt;&#x3D; 6000;</span><br><span class="line">select * from product where price between 4000 and 6000;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 查询库存为14、30、23的商品信息</span><br><span class="line">select * from product where stock&#x3D;14 or stock&#x3D;30 or stock&#x3D;23;</span><br><span class="line">select * from product where stock in(14,30,23);</span><br><span class="line"></span><br><span class="line">-- 查询库存为null的商品信息</span><br><span class="line">select * from product where stock is null;</span><br><span class="line"></span><br><span class="line">-- 查询库存不为null的商品信息</span><br><span class="line">select * from product where stock is not null;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 查询名称以小米为开头的商品信息</span><br><span class="line">select * from product where name like &#39;小米%&#39;;</span><br><span class="line"></span><br><span class="line">-- 查询名称第二个字是为的商品信息</span><br><span class="line">select * from product where name like &#39;_为%&#39;;</span><br><span class="line"></span><br><span class="line">-- 查询名称为四个字符的商品信息</span><br><span class="line">select * from product where name like &#39;____&#39;;</span><br><span class="line"></span><br><span class="line">-- 查询名称中包含电脑的商品信息</span><br><span class="line">select * from product where name like &#39;%电脑%&#39;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5-4-聚合函数"><a href="#5-4-聚合函数" class="headerlink" title="5.4 聚合函数"></a>5.4 聚合函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	聚合函数</span><br><span class="line">	标准语法：</span><br><span class="line">		select 函数名(列名) from 表名 [where 条件];</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 计算product表中总记录条数</span><br><span class="line">select count(*) from product;</span><br><span class="line"></span><br><span class="line">-- 获取最高价格</span><br><span class="line">select max(price) from product;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 获取最低库存</span><br><span class="line">select min(stock) from product;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 获取总库存数量</span><br><span class="line">select sum(stock) from product;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 获取品牌为苹果的总库存数量</span><br><span class="line">select sum(stock) from product where brand&#x3D;&#39;苹果&#39;;</span><br><span class="line"></span><br><span class="line">-- 获取品牌为小米的平均商品价格</span><br><span class="line">select avg(price) from product where brand&#x3D;&#39;小米&#39;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5-5-排序查询"><a href="#5-5-排序查询" class="headerlink" title="5.5 排序查询"></a>5.5 排序查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	排序查询</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名 from 表名 [where 条件] order by 列名1 排序方式1,列名2 排序方式2;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 按照库存升序排序</span><br><span class="line">select * from product order by stock asc;</span><br><span class="line"></span><br><span class="line">-- 查询名称中包含手机的商品信息。按照金额降序排序</span><br><span class="line">select * from product where name like &#39;%手机%&#39; order by price desc;</span><br><span class="line"></span><br><span class="line">-- 按照金额升序排序，如果金额相同，按照库存降序排列</span><br><span class="line">select * from product order by price asc,stock desc;</span><br></pre></td></tr></table></figure>

<h4 id="5-6-分组全部"><a href="#5-6-分组全部" class="headerlink" title="5.6 分组全部"></a>5.6 分组全部</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	分组查询</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名 from 表名 [where 条件] group by 分组列名 [having 分组后条件过滤] [order by 排序列名 排序方式];</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 按照品牌分组，获取每组商品的总金额</span><br><span class="line">select brand,sum(price) from product group by brand;</span><br><span class="line"></span><br><span class="line">-- 对金额大于4000元的商品，按照品牌分组,获取每组商品的总金额</span><br><span class="line">select brand,sum(price) from product where price &gt; 4000 group by brand;</span><br><span class="line"></span><br><span class="line">-- 对金额大于4000元的商品，按照品牌分组，获取每组商品的总金额，只显示总金额大于7000元的</span><br><span class="line">select brand,sum(price) getsum from product where price &gt; 4000 group by brand having getsum &gt; 7000;</span><br><span class="line"></span><br><span class="line">-- 对金额大于4000元的商品，按照品牌分组，获取每组商品的总金额，只显示总金额大于7000元的、并按照总金额的降序排列</span><br><span class="line">select brand,sum(price) getsum from product </span><br><span class="line">where price &gt; 4000 </span><br><span class="line">group by brand </span><br><span class="line">having getsum &gt; 7000 </span><br><span class="line">order by getsum desc;</span><br></pre></td></tr></table></figure>

<h4 id="5-7-分页查询"><a href="#5-7-分页查询" class="headerlink" title="5.7 分页查询"></a>5.7 分页查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	分页查询</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名 from 表名 </span><br><span class="line">		[where 条件] </span><br><span class="line">		[group by 分组列名]</span><br><span class="line">		[having 分组后条件过滤] </span><br><span class="line">		[order by 排序列名 排序方式] </span><br><span class="line">		limit 当前页数,每页显示的条数;</span><br><span class="line">	</span><br><span class="line">	limit 当前页数,每页显示的条数;</span><br><span class="line">	公式：当前页数 &#x3D; (当前页数-1) * 每页显示的条数</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 每页显示3条数据</span><br><span class="line"></span><br><span class="line">-- 第1页  当前页数&#x3D;(1-1) * 3</span><br><span class="line">select * from product limit 0,3;</span><br><span class="line"></span><br><span class="line">-- 第2页  当前页数&#x3D;(2-1) * 3</span><br><span class="line">select * from product limit 3,3;</span><br><span class="line"></span><br><span class="line">-- 第3页  当前页数&#x3D;(3-1) * 3</span><br><span class="line">select * from product limit 6,3;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="6-约束"><a href="#6-约束" class="headerlink" title="6 约束"></a>6 约束</h3><h4 id="6-1-主键约束"><a href="#6-1-主键约束" class="headerlink" title="6.1 主键约束"></a>6.1 主键约束</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建学生表(编号、姓名、年龄)  编号设为主键</span><br><span class="line">create table student(</span><br><span class="line">	id int primary key,</span><br><span class="line">	name varchar(30),</span><br><span class="line">	age int</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 查询学生表的详细信息</span><br><span class="line">desc student;</span><br><span class="line"></span><br><span class="line">-- 添加数据</span><br><span class="line">insert into student values (1,&#39;张三&#39;,23);</span><br><span class="line">insert into student values (2,&#39;李四&#39;,24);</span><br><span class="line"></span><br><span class="line">-- 删除主键</span><br><span class="line">alter table student drop primary key;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 建表后单独添加主键约束</span><br><span class="line">alter table student modify id int primary key;</span><br></pre></td></tr></table></figure>

<h4 id="6-2-主键自增约束"><a href="#6-2-主键自增约束" class="headerlink" title="6.2 主键自增约束"></a>6.2 主键自增约束</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">-- 创建学生表(编号、姓名、年龄)  编号设为主键自增</span><br><span class="line">create table student(</span><br><span class="line">	id int primary key auto_increment,</span><br><span class="line">	name varchar(30),</span><br><span class="line">	age int</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 查询学生表的详细信息</span><br><span class="line">desc student;</span><br><span class="line"></span><br><span class="line">-- 添加数据</span><br><span class="line">insert into student values (null,&#39;张三&#39;,23),(null,&#39;李四&#39;,24);</span><br><span class="line"></span><br><span class="line">-- 删除自增约束</span><br><span class="line">alter table student modify id int;</span><br><span class="line">insert into student values (null,&#39;张三&#39;,23);</span><br><span class="line"></span><br><span class="line">-- 建表后单独添加自增约束</span><br><span class="line">alter table student modify id int auto_increment;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 建表时自定义自增起始值</span><br><span class="line">create table employee(</span><br><span class="line">	id int primary key auto_increment,</span><br><span class="line">	name varchar(30),</span><br><span class="line">	age int</span><br><span class="line">)auto_increment&#x3D;100;</span><br></pre></td></tr></table></figure>

<h4 id="6-3-唯一约束"><a href="#6-3-唯一约束" class="headerlink" title="6.3 唯一约束"></a>6.3 唯一约束</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建学生表(编号、姓名、年龄)  编号设为主键自增，年龄设为唯一</span><br><span class="line">create table student(</span><br><span class="line">	id int primary key auto_increment,</span><br><span class="line">	name varchar(30),</span><br><span class="line">	age int unique</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 查询学生表的详细信息</span><br><span class="line">desc student;</span><br><span class="line"></span><br><span class="line">-- 添加数据</span><br><span class="line">insert into student values (null,&#39;张三&#39;,23);</span><br><span class="line">insert into student values (null,&#39;李四&#39;,23);</span><br><span class="line"></span><br><span class="line">-- 删除唯一约束</span><br><span class="line">alter table student drop index age;</span><br><span class="line"></span><br><span class="line">-- 建表后单独添加唯一约束</span><br><span class="line">alter table student modify age int unique;</span><br></pre></td></tr></table></figure>

<h4 id="6-4-非空约束"><a href="#6-4-非空约束" class="headerlink" title="6.4 非空约束"></a>6.4 非空约束</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建学生表(编号、姓名、年龄)  编号设为主键自增，姓名设为非空，年龄设为唯一</span><br><span class="line">create table student(</span><br><span class="line">	id int primary key auto_increment,</span><br><span class="line">	name varchar(30) not null,</span><br><span class="line">	age int unique</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 查询学生表的详细信息</span><br><span class="line">desc student;</span><br><span class="line"></span><br><span class="line">-- 添加数据</span><br><span class="line">insert into student values (null,&#39;张三&#39;,23);</span><br><span class="line"></span><br><span class="line">-- 删除非空约束</span><br><span class="line">alter table student modify name varchar(30);</span><br><span class="line">insert into student values (null,null,25);</span><br><span class="line"></span><br><span class="line">-- 建表后单独添加非空约束</span><br><span class="line">alter table student modify name varchar(30) not null;</span><br></pre></td></tr></table></figure>

<h4 id="6-5-外键约束"><a href="#6-5-外键约束" class="headerlink" title="6.5 外键约束"></a>6.5 外键约束</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建db2数据库</span><br><span class="line">create database db2;</span><br><span class="line"></span><br><span class="line">-- 使用db2数据库</span><br><span class="line">use db2;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	外键约束</span><br><span class="line">	标准语法：</span><br><span class="line">		constraint 外键名 foreign key (本表外键列名) references 主表名(主表主键列名)</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 建表时添加外键约束</span><br><span class="line">-- 创建user用户表</span><br><span class="line">create table user(</span><br><span class="line">	id int primary key auto_increment,    -- id</span><br><span class="line">	name varchar(20) not null             -- 姓名</span><br><span class="line">);</span><br><span class="line">-- 添加用户数据</span><br><span class="line">insert into user values (null,&#39;张三&#39;),(null,&#39;李四&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 创建orderlist订单表</span><br><span class="line">create table orderlist(</span><br><span class="line">	id int primary key auto_increment,    -- id</span><br><span class="line">	number varchar(20) not null,          -- 订单编号</span><br><span class="line">	uid int,			      -- 外键列</span><br><span class="line">	constraint ou_fk1 foreign key (uid) references user(id)</span><br><span class="line">);</span><br><span class="line">-- 添加订单数据</span><br><span class="line">insert into orderlist values (null,&#39;hm001&#39;,1),(null,&#39;hm002&#39;,1),</span><br><span class="line">(null,&#39;hm003&#39;,2),(null,&#39;hm004&#39;,2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 添加一个订单，但是没有真实用户。添加失败</span><br><span class="line">insert into orderlist values (null,&#39;hm005&#39;,3);</span><br><span class="line"></span><br><span class="line">-- 删除李四用户。删除失败</span><br><span class="line">delete from user where name&#x3D;&#39;李四&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	删除外键约束</span><br><span class="line">	标准语法：</span><br><span class="line">		alter table 表名 drop foreign key 外键名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除外键约束</span><br><span class="line">alter table orderlist drop foreign key ou_fk1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	建表后单独添加外键约束</span><br><span class="line">	标准语法：</span><br><span class="line">		alter table 表名 add constraint 外键名 foreign key (本表外键列名) references 主表名(主键列名);</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 添加外键约束</span><br><span class="line">alter table orderlist add constraint ou_fk1 foreign key (uid) references user(id);</span><br></pre></td></tr></table></figure>

<h4 id="6-6-外键级联操作"><a href="#6-6-外键级联操作" class="headerlink" title="6.6 外键级联操作"></a>6.6 外键级联操作</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	添加外键约束，同时添加级联更新  标准语法：</span><br><span class="line">	alter table 表名 add constraint 外键名 foreign key (本表外键列名) references 主表名(主键列名) </span><br><span class="line">	on update cascade;</span><br><span class="line">	</span><br><span class="line">	添加外键约束，同时添加级联删除  标准语法：</span><br><span class="line">	alter table 表名 add constraint 外键名 foreign key (本表外键列名) references 主表名(主键列名) </span><br><span class="line">	on delete cascade;</span><br><span class="line">	</span><br><span class="line">	添加外键约束，同时添加级联更新和级联删除  标准语法：</span><br><span class="line">	alter table 表名 add constraint 外键名 foreign key (本表外键列名) references 主表名(主键列名) </span><br><span class="line">	on update cascade on delete cascade;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除外键约束</span><br><span class="line">alter table orderlist drop foreign key ou_fk1;</span><br><span class="line"></span><br><span class="line">-- 添加外键约束，同时添加级联更新和级联删除</span><br><span class="line">alter table orderlist add constraint ou_fk1 foreign key (uid) references user(id)</span><br><span class="line">on update cascade on delete cascade;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 将李四这个用户的id修改为3,订单表中的uid也自动修改</span><br><span class="line">update user set id&#x3D;3 where id&#x3D;2;</span><br><span class="line"></span><br><span class="line">-- 将李四这个用户删除,订单表中的该用户所属的订单也自动删除</span><br><span class="line">delete from user where id&#x3D;3;</span><br></pre></td></tr></table></figure>

<h3 id="7-多表操作"><a href="#7-多表操作" class="headerlink" title="7  多表操作"></a>7  多表操作</h3><h4 id="7-1-一对一"><a href="#7-1-一对一" class="headerlink" title="7.1 一对一"></a>7.1 一对一</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建db3数据库</span><br><span class="line">create database db3;</span><br><span class="line"></span><br><span class="line">-- 使用db3数据库</span><br><span class="line">use db3;</span><br><span class="line"></span><br><span class="line">-- 创建person表</span><br><span class="line">create table person(</span><br><span class="line">	id int primary key auto_increment,	-- 主键id</span><br><span class="line">	name varchar(20)                        -- 姓名</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into person values (null,&#39;张三&#39;),(null,&#39;李四&#39;);</span><br><span class="line"></span><br><span class="line">-- 创建card表</span><br><span class="line">create table card(</span><br><span class="line">	id int primary key auto_increment,	-- 主键id</span><br><span class="line">	number varchar(20) unique not null,	-- 身份证号</span><br><span class="line">	pid int unique,                         -- 外键列</span><br><span class="line">	constraint cp_fk1 foreign key (pid) references person(id)</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into card values (null,&#39;12345&#39;,1),(null,&#39;56789&#39;,2);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="7-2-一对多"><a href="#7-2-一对多" class="headerlink" title="7.2 一对多"></a>7.2 一对多</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建user表</span><br><span class="line">create table user(</span><br><span class="line">	id int primary key auto_increment,	-- 主键id</span><br><span class="line">	name varchar(20)                        -- 姓名</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into user values (null,&#39;张三&#39;),(null,&#39;李四&#39;);</span><br><span class="line"></span><br><span class="line">-- 创建orderlist表</span><br><span class="line">create table orderlist(</span><br><span class="line">	id int primary key auto_increment,	-- 主键id</span><br><span class="line">	number varchar(20),                     -- 订单编号</span><br><span class="line">	uid int,				-- 外键列</span><br><span class="line">	constraint ou_fk1 foreign key (uid) references user(id)</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into orderlist values (null,&#39;hm001&#39;,1),(null,&#39;hm002&#39;,1),(null,&#39;hm003&#39;,2),(null,&#39;hm004&#39;,2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	商品分类和商品</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 创建category表</span><br><span class="line">create table category(</span><br><span class="line">	id int primary key auto_increment,	-- 主键id</span><br><span class="line">	name varchar(10)                        -- 分类名称</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into category values (null,&#39;手机数码&#39;),(null,&#39;电脑办公&#39;);</span><br><span class="line"></span><br><span class="line">-- 创建product表</span><br><span class="line">create table product(</span><br><span class="line">	id int primary key auto_increment,	-- 主键id</span><br><span class="line">	name varchar(30),			-- 商品名称</span><br><span class="line">	cid int,				-- 外键列</span><br><span class="line">	constraint pc_fk1 foreign key (cid) references category(id)</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into product values (null,&#39;华为p30&#39;,1),(null,&#39;小米note3&#39;,1),</span><br><span class="line">(null,&#39;联想电脑&#39;,2),(null,&#39;苹果电脑&#39;,2);</span><br></pre></td></tr></table></figure>

<h4 id="7-3-多对多"><a href="#7-3-多对多" class="headerlink" title="7.3 多对多"></a>7.3 多对多</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建student表</span><br><span class="line">CREATE TABLE student(</span><br><span class="line">	id INT PRIMARY KEY AUTO_INCREMENT,	-- 主键id</span><br><span class="line">	NAME VARCHAR(20)			-- 学生姓名</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">INSERT INTO student VALUES (NULL,&#39;张三&#39;),(NULL,&#39;李四&#39;);</span><br><span class="line"></span><br><span class="line">-- 创建course表</span><br><span class="line">CREATE TABLE course(</span><br><span class="line">	id INT PRIMARY KEY AUTO_INCREMENT,	-- 主键id</span><br><span class="line">	NAME VARCHAR(10)			-- 课程名称</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">INSERT INTO course VALUES (NULL,&#39;语文&#39;),(NULL,&#39;数学&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 创建中间表</span><br><span class="line">CREATE TABLE stu_course(</span><br><span class="line">	id INT PRIMARY KEY AUTO_INCREMENT,	-- 主键id</span><br><span class="line">	sid INT,  -- 用于和student表中的id进行外键关联</span><br><span class="line">	cid INT,  -- 用于和course表中的id进行外键关联</span><br><span class="line">	CONSTRAINT sc_fk1 FOREIGN KEY (sid) REFERENCES student(id), -- 添加外键约束</span><br><span class="line">	CONSTRAINT sc_fk2 FOREIGN KEY (cid) REFERENCES course(id)   -- 添加外键约束</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">INSERT INTO stu_course VALUES (NULL,1,1),(NULL,1,2),(NULL,2,1),(NULL,2,2);</span><br></pre></td></tr></table></figure>

<h4 id="7-4-数据准备"><a href="#7-4-数据准备" class="headerlink" title="7.4 数据准备"></a>7.4 数据准备</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建student表</span><br><span class="line">create table student(</span><br><span class="line">	id int primary key auto_increment,	-- 主键id</span><br><span class="line">	name varchar(20)			-- 学生姓名</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into student values (null,&#39;张三&#39;),(null,&#39;李四&#39;);</span><br><span class="line"></span><br><span class="line">-- 创建course表</span><br><span class="line">create table course(</span><br><span class="line">	id int primary key auto_increment,	-- 主键id</span><br><span class="line">	name varchar(10)			-- 课程名称</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into course values (null,&#39;语文&#39;),(null,&#39;数学&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 创建中间表</span><br><span class="line">create table stu_course(</span><br><span class="line">	id int primary key auto_increment,	-- 主键id</span><br><span class="line">	sid int,  -- 用于和student表中的id进行外键关联</span><br><span class="line">	cid int,  -- 用于和course表中的id进行外键关联</span><br><span class="line">	constraint sc_fk1 foreign key (sid) references student(id), -- 添加外键约束</span><br><span class="line">	constraint sc_fk2 foreign key (cid) references course(id)   -- 添加外键约束</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into stu_course values (null,1,1),(null,1,2),(null,2,1),(null,2,2);</span><br></pre></td></tr></table></figure>

<h4 id="7-5-内连接查询"><a href="#7-5-内连接查询" class="headerlink" title="7.5 内连接查询"></a>7.5 内连接查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	显示内连接</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名 from 表名1 [inner] join 表名2 on 关联条件;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询用户信息和对应的订单信息</span><br><span class="line">select * </span><br><span class="line">from user </span><br><span class="line">inner join orderlist </span><br><span class="line">on orderlist.uid &#x3D; user.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 查询用户信息和对应的订单信息，起别名</span><br><span class="line">select * </span><br><span class="line">from user u </span><br><span class="line">inner join orderlist o </span><br><span class="line">on o.uid&#x3D;u.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 查询用户姓名，年龄。和订单编号</span><br><span class="line">select</span><br><span class="line">	u.name,		-- 用户姓名</span><br><span class="line">	u.age,		-- 用户年龄</span><br><span class="line">	o.number	-- 订单编号</span><br><span class="line">from</span><br><span class="line">	user u          -- 用户表</span><br><span class="line">inner join</span><br><span class="line">	orderlist o     -- 订单表</span><br><span class="line">on</span><br><span class="line">	o.uid&#x3D;u.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	隐式内连接</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名 from 表名1,表名2 where 关联条件;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询用户姓名，年龄。和订单编号</span><br><span class="line">select</span><br><span class="line">	u.name,		-- 用户姓名</span><br><span class="line">	u.age,		-- 用户年龄</span><br><span class="line">	o.number	-- 订单编号</span><br><span class="line">from</span><br><span class="line">	user u,		-- 用户表</span><br><span class="line">	orderlist o     -- 订单表</span><br><span class="line">where</span><br><span class="line">	o.uid&#x3D;u.id;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="7-6-外连接查询"><a href="#7-6-外连接查询" class="headerlink" title="7.6 外连接查询"></a>7.6 外连接查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	左外连接</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名 from 表名1 left [outer] join 表名2 on 条件;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询所有用户信息，以及用户对应的订单信息</span><br><span class="line">select</span><br><span class="line">	u.*,</span><br><span class="line">	o.number</span><br><span class="line">from</span><br><span class="line">	user u</span><br><span class="line">left outer join</span><br><span class="line">	orderlist o</span><br><span class="line">on</span><br><span class="line">	o.uid&#x3D;u.id;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	右外连接</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名 from 表名1 right [outer] join 表名2 on 条件;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询所有订单信息，以及订单所属的用户信息</span><br><span class="line">select</span><br><span class="line">	o.*,</span><br><span class="line">	u.name</span><br><span class="line">from</span><br><span class="line">	user u</span><br><span class="line">right outer join</span><br><span class="line">	orderlist o</span><br><span class="line">on</span><br><span class="line">	o.uid&#x3D;u.id;</span><br></pre></td></tr></table></figure>

<h4 id="7-7-子查询"><a href="#7-7-子查询" class="headerlink" title="7.7 子查询"></a>7.7 子查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	结果是单行单列的</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名 from 表名 where 列名&#x3D;(select 列名 from 表名 [where 条件]);</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询年龄最高的用户姓名</span><br><span class="line">select max(age) from user;</span><br><span class="line"></span><br><span class="line">select name,age </span><br><span class="line">from user </span><br><span class="line">where age&#x3D;(select max(age) from user);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	结果是多行单列的</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名 from 表名 where 列名 [not] in (select 列名 from 表名 [where 条件]); </span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询张三和李四的订单信息</span><br><span class="line">select * </span><br><span class="line">from orderlist </span><br><span class="line">where uid in (1,2);</span><br><span class="line"></span><br><span class="line">select id </span><br><span class="line">from user </span><br><span class="line">where name in (&#39;张三&#39;,&#39;李四&#39;);</span><br><span class="line"></span><br><span class="line">select * </span><br><span class="line">from orderlist </span><br><span class="line">where uid in (select id from user where name in (&#39;张三&#39;,&#39;李四&#39;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	结果是多行多列的</span><br><span class="line">	标准语法：</span><br><span class="line">		select 列名 from 表名 [别名],(select 列名 from 表名 [where 条件]) [别名] [where 条件];</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询订单表中id大于4的订单信息和所属用户信息</span><br><span class="line">select * from orderlist where id &gt; 4;</span><br><span class="line"></span><br><span class="line">select</span><br><span class="line">	u.name,</span><br><span class="line">	o.number</span><br><span class="line">from</span><br><span class="line">	user u,</span><br><span class="line">	(select * from orderlist where id &gt; 4) o</span><br><span class="line">where</span><br><span class="line">	o.uid&#x3D;u.id;</span><br></pre></td></tr></table></figure>

<h4 id="7-8-自关联查询"><a href="#7-8-自关联查询" class="headerlink" title="7.8 自关联查询"></a>7.8 自关联查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建员工表</span><br><span class="line">create table employee(</span><br><span class="line">	id int primary key auto_increment,	-- 员工编号</span><br><span class="line">	name varchar(20),			-- 员工姓名</span><br><span class="line">	mgr int,				-- 上级编号</span><br><span class="line">	salary double				-- 员工工资</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into employee values (1001,&#39;孙悟空&#39;,1005,9000.00),</span><br><span class="line">(1002,&#39;猪八戒&#39;,1005,8000.00),</span><br><span class="line">(1003,&#39;沙和尚&#39;,1005,8500.00),</span><br><span class="line">(1004,&#39;小白龙&#39;,1005,7900.00),</span><br><span class="line">(1005,&#39;唐僧&#39;,null,15000.00),</span><br><span class="line">(1006,&#39;武松&#39;,1009,7600.00),</span><br><span class="line">(1007,&#39;李逵&#39;,1009,7400.00),</span><br><span class="line">(1008,&#39;林冲&#39;,1009,8100.00),</span><br><span class="line">(1009,&#39;宋江&#39;,null,16000.00);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 查询所有员工的姓名及其直接上级的姓名，没有上级的员工也需要查询</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	员工信息 employee表</span><br><span class="line">	条件：employee.mgr &#x3D; employee.id</span><br><span class="line">	查询左表的全部数据，和左右两张表有交集部分数据，左外连接</span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	e1.id,</span><br><span class="line">	e1.name,</span><br><span class="line">	e1.mgr,</span><br><span class="line">	e2.id,</span><br><span class="line">	e2.name</span><br><span class="line">from</span><br><span class="line">	employee e1</span><br><span class="line">left outer join</span><br><span class="line">	employee e2</span><br><span class="line">on</span><br><span class="line">	e1.mgr &#x3D; e2.id;</span><br></pre></td></tr></table></figure>

<h4 id="7-9-多表查询练习"><a href="#7-9-多表查询练习" class="headerlink" title="7.9 多表查询练习"></a>7.9 多表查询练习</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 1.查询用户的编号、姓名、年龄。订单编号</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	用户的编号、姓名、年龄  user表      订单编号 orderlist表</span><br><span class="line">	条件：user.id&#x3D;orderlist.uid</span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	u.id,</span><br><span class="line">	u.name,</span><br><span class="line">	u.age,</span><br><span class="line">	o.number</span><br><span class="line">from</span><br><span class="line">	user u,</span><br><span class="line">	orderlist o</span><br><span class="line">where</span><br><span class="line">	u.id&#x3D;o.uid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 2.查询所有的用户。用户的编号、姓名、年龄。订单编号</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	用户的编号、姓名、年龄  user表    订单编号 orderlist表</span><br><span class="line">	条件：user.id&#x3D;orderlist.uid</span><br><span class="line">	查询所有的用户，左外连接</span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	u.id,</span><br><span class="line">	u.name,</span><br><span class="line">	u.age,</span><br><span class="line">	o.number</span><br><span class="line">from</span><br><span class="line">	user u</span><br><span class="line">left outer join</span><br><span class="line">	orderlist o</span><br><span class="line">on</span><br><span class="line">	u.id&#x3D;o.uid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 3.查询所有的订单。用户的编号、姓名、年龄。订单编号</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	用户的编号、姓名、年龄 user表    订单编号 orderlist表</span><br><span class="line">	条件：user.id&#x3D;orderlist.uid</span><br><span class="line">	查询所有的订单，右外连接</span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	u.id,</span><br><span class="line">	u.name,</span><br><span class="line">	u.age,</span><br><span class="line">	o.number</span><br><span class="line">from</span><br><span class="line">	user u</span><br><span class="line">right outer join</span><br><span class="line">	orderlist o</span><br><span class="line">on</span><br><span class="line">	u.id&#x3D;o.uid;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">-- 4.查询用户年龄大于23岁的信息。显示用户的编号、姓名、年龄。订单编号</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	用户的编号、姓名、年龄 user表    订单编号 orderlist表</span><br><span class="line">	条件：user.id&#x3D;orderlist.uid and user.age &gt; 23</span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	u.id,</span><br><span class="line">	u.name,</span><br><span class="line">	u.age,</span><br><span class="line">	o.number</span><br><span class="line">from</span><br><span class="line">	user u,</span><br><span class="line">	orderlist o</span><br><span class="line">where</span><br><span class="line">	u.id&#x3D;o.uid</span><br><span class="line">	and</span><br><span class="line">	u.age &gt; 23;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 5.查询张三和李四用户的信息。显示用户的编号、姓名、年龄。订单编号</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	用户的编号、姓名、年龄 user表   订单编号 orderlist表</span><br><span class="line">	条件：user.id&#x3D;orderlist.uid and user.name in (&#39;张三&#39;,&#39;李四&#39;)</span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	u.id,</span><br><span class="line">	u.name,</span><br><span class="line">	u.age,</span><br><span class="line">	o.number</span><br><span class="line">from	user u,	</span><br><span class="line">	orderlist o</span><br><span class="line">where</span><br><span class="line">	u.id&#x3D;o.uid</span><br><span class="line">	and</span><br><span class="line">	u.name in (&#39;张三&#39;,&#39;李四&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 6.查询商品分类的编号、分类名称。分类下的商品名称</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	商品分类的编号、分类名称 category表    商品名称 product表</span><br><span class="line">	条件：category.id&#x3D;product.cid</span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	c.id,</span><br><span class="line">	c.name,</span><br><span class="line">	p.name</span><br><span class="line">from</span><br><span class="line">	category c,</span><br><span class="line">	product p</span><br><span class="line">where</span><br><span class="line">	c.id&#x3D;p.cid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 7.查询所有的商品分类。商品分类的编号、分类名称。分类下的商品名称</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	商品分类的编号、分类名称 category表    商品名称 product表</span><br><span class="line">	条件：category.id&#x3D;product.cid</span><br><span class="line">	查询所有的商品分类，左外连接</span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	c.id,</span><br><span class="line">	c.name,</span><br><span class="line">	p.name</span><br><span class="line">from</span><br><span class="line">	category c</span><br><span class="line">left outer join</span><br><span class="line">	product p</span><br><span class="line">on</span><br><span class="line">	c.id&#x3D;p.cid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 8.查询所有的商品信息。商品分类的编号、分类名称。分类下的商品名称</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	商品分类的编号、分类名称  category表   商品名称 product表</span><br><span class="line">	条件：category.id&#x3D;product.cid</span><br><span class="line">	查询所有的商品信息，右外连接</span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	c.id,</span><br><span class="line">	c.name,</span><br><span class="line">	p.name</span><br><span class="line">from</span><br><span class="line">	category c</span><br><span class="line">right outer join</span><br><span class="line">	product p</span><br><span class="line">on</span><br><span class="line">	c.id&#x3D;p.cid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 9.查询所有的用户和该用户能查看的所有的商品。显示用户的编号、姓名、年龄。商品名称</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	用户的编号、姓名、年龄 user表   商品名称 product表    中间表 us_pro</span><br><span class="line">	条件：us_pro.uid&#x3D;user.id and us_pro.pid&#x3D;product.id</span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	u.id,</span><br><span class="line">	u.name,</span><br><span class="line">	u.age,</span><br><span class="line">	p.name</span><br><span class="line">from</span><br><span class="line">	user u,</span><br><span class="line">	product p,</span><br><span class="line">	us_pro up</span><br><span class="line">where</span><br><span class="line">	up.uid&#x3D;u.id</span><br><span class="line">	and</span><br><span class="line">	up.pid&#x3D;p.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 10.查询张三和李四这两个用户可以看到的商品。显示用户的编号、姓名、年龄。商品名称</span><br><span class="line">&#x2F;*</span><br><span class="line">分析</span><br><span class="line">	用户的编号、姓名、年龄 user表   商品名称 product表   中间表 us_pro</span><br><span class="line">	条件：us_pro.uid&#x3D;user.id and us_pro.pid&#x3D;product.id and user.name in (&#39;张三&#39;,&#39;李四&#39;) </span><br><span class="line">*&#x2F;</span><br><span class="line">select</span><br><span class="line">	u.id,</span><br><span class="line">	u.name,</span><br><span class="line">	u.age,</span><br><span class="line">	p.name</span><br><span class="line">from</span><br><span class="line">	user u,</span><br><span class="line">	product p,</span><br><span class="line">	us_pro up</span><br><span class="line">where</span><br><span class="line">	up.uid&#x3D;u.id</span><br><span class="line">	and</span><br><span class="line">	up.pid&#x3D;p.id</span><br><span class="line">	and</span><br><span class="line">	u.name in (&#39;张三&#39;,&#39;李四&#39;);</span><br></pre></td></tr></table></figure>

<h3 id="8-存储过程和函数"><a href="#8-存储过程和函数" class="headerlink" title="8 存储过程和函数"></a>8 存储过程和函数</h3><h4 id="8-1-数据准备"><a href="#8-1-数据准备" class="headerlink" title="8.1 数据准备"></a>8.1 数据准备</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建db6数据库</span><br><span class="line">create database db6;</span><br><span class="line">-- 使用db6数据库</span><br><span class="line">use db6;</span><br><span class="line">-- 创建学生表</span><br><span class="line">create table student (</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">-- 学生id</span><br><span class="line">name varchar ( 20 ),</span><br><span class="line">-- 学生姓名</span><br><span class="line">age int,</span><br><span class="line">-- 学生年龄</span><br><span class="line">gender varchar ( 5 ),</span><br><span class="line">-- 学生性别</span><br><span class="line">score int -- 学生成绩</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into student</span><br><span class="line">values</span><br><span class="line">	( null, &#39;张三&#39;, 23, &#39;男&#39;, 95 ),</span><br><span class="line">	( null, &#39;李四&#39;, 24, &#39;男&#39;, 98 ),</span><br><span class="line">	( null, &#39;王五&#39;, 25, &#39;女&#39;, 100 ),</span><br><span class="line">	( null, &#39;赵六&#39;, 26, &#39;女&#39;, 90 );</span><br><span class="line">-- 按照性别进行分组，查询每组学生的总成绩。按照总成绩的升序排序</span><br><span class="line">select</span><br><span class="line">	gender,</span><br><span class="line">	sum( score ) getsum </span><br><span class="line">from</span><br><span class="line">	student </span><br><span class="line">group by</span><br><span class="line">	gender </span><br><span class="line">order by</span><br><span class="line">getsum asc;</span><br></pre></td></tr></table></figure>

<h4 id="8-2-创建和调用存储过程"><a href="#8-2-创建和调用存储过程" class="headerlink" title="8.2 创建和调用存储过程"></a>8.2 创建和调用存储过程</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">创建存储过程</span><br><span class="line"></span><br><span class="line">-- 修改分隔符为$</span><br><span class="line">delimiter $</span><br><span class="line"></span><br><span class="line">-- 标准语法</span><br><span class="line">create procedure 存储过程名称(参数列表)</span><br><span class="line">begin</span><br><span class="line">		sql 语句列表;</span><br><span class="line">end$</span><br><span class="line"></span><br><span class="line">-- 修改分隔符为分号</span><br><span class="line">delimiter ;</span><br><span class="line">*&#x2F; -- 创建stu_group()存储过程，封装 分组查询总成绩，并按照总成绩升序排序的功能</span><br><span class="line"></span><br><span class="line">delimiter$</span><br><span class="line">create procedure stu_group () begin</span><br><span class="line">	select</span><br><span class="line">		gender,</span><br><span class="line">		sum( score ) getsum </span><br><span class="line">	from</span><br><span class="line">		student </span><br><span class="line">	group by</span><br><span class="line">		gender </span><br><span class="line">	order by</span><br><span class="line">		getsum asc;</span><br><span class="line">	</span><br><span class="line">end $delimiter;</span><br><span class="line">&#x2F;*</span><br><span class="line">	调用存储过程</span><br><span class="line">	call 存储过程名称(实际参数);</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 调用stu_group()存储过程</span><br><span class="line">call stu_group ();</span><br></pre></td></tr></table></figure>

<h4 id="8-3-查看和删除存储过程"><a href="#8-3-查看和删除存储过程" class="headerlink" title="8.3 查看和删除存储过程"></a>8.3 查看和删除存储过程</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">查询数据库中所有的存储过程</span><br><span class="line">select * from mysql.proc where db&#x3D;&#39;数据库名称&#39;;</span><br><span class="line">*&#x2F; -- 查看db6数据库中所有的存储过程</span><br><span class="line">select</span><br><span class="line">	* </span><br><span class="line">from</span><br><span class="line">	mysql.proc </span><br><span class="line">where</span><br><span class="line">	db &#x3D; &#39;db6&#39;;</span><br><span class="line">&#x2F;*</span><br><span class="line">删除存储过程</span><br><span class="line">drop procedure [if exists] 存储过程名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">drop procedure</span><br><span class="line">if</span><br><span class="line">	exists stu_group;</span><br></pre></td></tr></table></figure>

<h4 id="8-4-变量"><a href="#8-4-变量" class="headerlink" title="8.4 变量"></a>8.4 变量</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">定义变量</span><br><span class="line">declare 变量名 数据类型 [default 默认值];</span><br><span class="line">*&#x2F; -- 定义一个int类型变量，并赋默认值为10</span><br><span class="line"></span><br><span class="line">delimiter $</span><br><span class="line">create procedure pro_test1 ( ) begin</span><br><span class="line">-- 定义变量</span><br><span class="line">declare</span><br><span class="line">		num int default 10;</span><br><span class="line">-- 使用变量</span><br><span class="line">	select</span><br><span class="line">		num;</span><br><span class="line">	</span><br><span class="line">	end $delimiter;</span><br><span class="line">-- 调用pro_test1存储过程</span><br><span class="line">call pro_test1 ( );</span><br><span class="line">&#x2F;*</span><br><span class="line">	变量赋值-方式一</span><br><span class="line">	set 变量名 &#x3D; 变量值;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 定义一个varchar类型变量并赋值</span><br><span class="line"></span><br><span class="line">delimiter $</span><br><span class="line">create procedure pro_test2 ( ) begin</span><br><span class="line">-- 定义变量</span><br><span class="line">	declare</span><br><span class="line">		name varchar ( 10 );</span><br><span class="line">-- 为变量赋值</span><br><span class="line">	</span><br><span class="line">	set name &#x3D; &#39;存储过程&#39;;</span><br><span class="line">-- 使用变量</span><br><span class="line">	select name;</span><br><span class="line">	</span><br><span class="line">end $delimiter;</span><br><span class="line">-- 调用pro_test2存储过程</span><br><span class="line">call pro_test2 ( );</span><br><span class="line">&#x2F;*</span><br><span class="line">	变量赋值-方式二</span><br><span class="line">	select 列名 into 变量名 from 表名 [where 条件];</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 定义两个int变量，用于存储男女同学的总分数</span><br><span class="line"></span><br><span class="line">delimiter $</span><br><span class="line">create procedure pro_test3 ( ) begin</span><br><span class="line">-- 定义两个变量</span><br><span class="line">	declare</span><br><span class="line">		men,women int;</span><br><span class="line">-- 查询男同学的总分数，为men赋值</span><br><span class="line">	select</span><br><span class="line">		sum( score ) into men </span><br><span class="line">	from</span><br><span class="line">		student </span><br><span class="line">	where</span><br><span class="line">		gender &#x3D; &#39;男&#39;;</span><br><span class="line">-- 查询女同学的总分数，为women赋值</span><br><span class="line">	select</span><br><span class="line">		sum( score ) into women </span><br><span class="line">	from</span><br><span class="line">		student </span><br><span class="line">	where</span><br><span class="line">		gender &#x3D; &#39;女&#39;;</span><br><span class="line">-- 使用变量</span><br><span class="line">	select</span><br><span class="line">		men,</span><br><span class="line">		women;</span><br><span class="line">	</span><br><span class="line">end $delimiter;</span><br><span class="line">-- 调用pro_test3存储过程</span><br><span class="line">call pro_test3 ( );</span><br></pre></td></tr></table></figure>

<h4 id="8-5-if语句"><a href="#8-5-if语句" class="headerlink" title="8.5 if语句"></a>8.5 if语句</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">if语句</span><br><span class="line">if 判断条件1 then 执行的sql语句1;</span><br><span class="line">[elseif 判断条件2 then 执行的sql语句2;]</span><br><span class="line">...</span><br><span class="line">[else 执行的sql语句n;]</span><br><span class="line">end if;</span><br><span class="line">*&#x2F; &#x2F;*</span><br><span class="line">定义一个int变量，用于存储班级总成绩</span><br><span class="line">定义一个varchar变量，用于存储分数描述</span><br><span class="line">根据总成绩判断：</span><br><span class="line">380分及以上   学习优秀</span><br><span class="line">320 ~ 380     学习不错</span><br><span class="line">320以下       学习一般</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">delimiter $</span><br><span class="line">create procedure pro_test4 ( ) begin</span><br><span class="line">-- 定义变量</span><br><span class="line">declare</span><br><span class="line">		total int;</span><br><span class="line">	declare</span><br><span class="line">		info varchar ( 10 );</span><br><span class="line">-- 查询总成绩，为total赋值</span><br><span class="line">	select</span><br><span class="line">		sum( score ) into total </span><br><span class="line">	from</span><br><span class="line">		student;</span><br><span class="line">-- 对总成绩判断</span><br><span class="line">	if</span><br><span class="line">		total &gt; 380 then</span><br><span class="line">			</span><br><span class="line">			set info &#x3D; &#39;学习优秀&#39;;</span><br><span class="line">		</span><br><span class="line">		elseif total &gt;&#x3D; 320 </span><br><span class="line">		and total &lt;&#x3D; 380 then</span><br><span class="line">			</span><br><span class="line">			set info &#x3D; &#39;学习不错&#39;;</span><br><span class="line">		else </span><br><span class="line">			set info &#x3D; &#39;学习一般&#39;;</span><br><span class="line">		</span><br><span class="line">	end if;</span><br><span class="line">-- 查询总成绩和描述信息</span><br><span class="line">		select</span><br><span class="line">			total,</span><br><span class="line">			info;</span><br><span class="line">		</span><br><span class="line">		end $delimiter;</span><br><span class="line">-- 调用pro_test4存储过程</span><br><span class="line">call pro_test4 ( );</span><br></pre></td></tr></table></figure>

<h4 id="8-6-参数传递"><a href="#8-6-参数传递" class="headerlink" title="8.6 参数传递"></a>8.6 参数传递</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">参数传递</span><br><span class="line">create procedure 存储过程名称([in|out|inout] 参数名 数据类型)</span><br><span class="line">begin</span><br><span class="line">	sql 语句列表;</span><br><span class="line">end$</span><br><span class="line">*&#x2F; &#x2F;*</span><br><span class="line">输入总成绩变量，代表学生总成绩</span><br><span class="line">输出分数描述变量，代表学生总成绩的描述信息</span><br><span class="line">根据总成绩判断：</span><br><span class="line">380分及以上  学习优秀</span><br><span class="line">320 ~ 380    学习不错</span><br><span class="line">320以下      学习一般</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">delimiter $</span><br><span class="line">create procedure pro_test5 ( in total int, out info varchar ( 10 ) ) begin</span><br><span class="line">-- 对总成绩判断</span><br><span class="line">if</span><br><span class="line">		total &gt; 380 then</span><br><span class="line">			</span><br><span class="line">			set info &#x3D; &#39;学习优秀&#39;;</span><br><span class="line">		</span><br><span class="line">		elseif total &gt;&#x3D; 320 </span><br><span class="line">		and total &lt;&#x3D; 380 then</span><br><span class="line">			</span><br><span class="line">			set info &#x3D; &#39;学习不错&#39;;</span><br><span class="line">		else </span><br><span class="line">			set info &#x3D; &#39;学习一般&#39;;</span><br><span class="line">		</span><br><span class="line">	end if;</span><br><span class="line">	</span><br><span class="line">	end $delimiter;</span><br><span class="line">-- 调用pro_test5存储过程</span><br><span class="line">call pro_test5 ( 350, @info );</span><br><span class="line">call pro_test5 ( ( select sum( score ) from student ), @info );</span><br><span class="line">select</span><br><span class="line">@info;</span><br></pre></td></tr></table></figure>

<h4 id="8-7-white循环"><a href="#8-7-white循环" class="headerlink" title="8.7 white循环"></a>8.7 white循环</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">while循环</span><br><span class="line">初始化语句;</span><br><span class="line">while 条件判断语句 do</span><br><span class="line">循环体语句;</span><br><span class="line">条件控制语句;</span><br><span class="line">end while;</span><br><span class="line">*&#x2F; -- 计算1~100之间的偶数和</span><br><span class="line"></span><br><span class="line">delimiter $</span><br><span class="line">create procedure pro_test6 ( ) begin</span><br><span class="line">-- 定义求和变量</span><br><span class="line">declare</span><br><span class="line">		result int default 0;</span><br><span class="line">-- 定义初始化变量</span><br><span class="line">	declare</span><br><span class="line">		num int default 1;</span><br><span class="line">-- while循环</span><br><span class="line">	while</span><br><span class="line">			num &lt;&#x3D; 100 do</span><br><span class="line">		if</span><br><span class="line">			num % 2 &#x3D; 0 then</span><br><span class="line">				</span><br><span class="line">				set result &#x3D; result + num;</span><br><span class="line">			</span><br><span class="line">		end if;</span><br><span class="line">		</span><br><span class="line">		set num &#x3D; num + 1;</span><br><span class="line">		</span><br><span class="line">	end while;</span><br><span class="line">-- 查询求和结果</span><br><span class="line">	select</span><br><span class="line">		result;</span><br><span class="line">	</span><br><span class="line">	end $delimiter;</span><br><span class="line">-- 调用pro_test6存储过程</span><br><span class="line">call pro_test6 ( );</span><br></pre></td></tr></table></figure>

<h4 id="8-8-存储函数"><a href="#8-8-存储函数" class="headerlink" title="8.8 存储函数"></a>8.8 存储函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">while循环</span><br><span class="line">初始化语句;</span><br><span class="line">while 条件判断语句 do</span><br><span class="line">循环体语句;</span><br><span class="line">条件控制语句;</span><br><span class="line">end while;</span><br><span class="line">*&#x2F; -- 计算1~100之间的偶数和</span><br><span class="line"></span><br><span class="line">delimiter $</span><br><span class="line">create procedure pro_test6 ( ) begin</span><br><span class="line">-- 定义求和变量</span><br><span class="line">declare</span><br><span class="line">		result int default 0;</span><br><span class="line">-- 定义初始化变量</span><br><span class="line">	declare</span><br><span class="line">		num int default 1;</span><br><span class="line">-- while循环</span><br><span class="line">	while</span><br><span class="line">			num &lt;&#x3D; 100 do</span><br><span class="line">		if</span><br><span class="line">			num % 2 &#x3D; 0 then</span><br><span class="line">				</span><br><span class="line">				set result &#x3D; result + num;</span><br><span class="line">			</span><br><span class="line">		end if;</span><br><span class="line">		</span><br><span class="line">		set num &#x3D; num + 1;</span><br><span class="line">		</span><br><span class="line">	end while;</span><br><span class="line">-- 查询求和结果</span><br><span class="line">	select</span><br><span class="line">		result;</span><br><span class="line">&#x2F;*</span><br><span class="line">	创建存储函数</span><br><span class="line">	create function 函数名称([参数 数据类型])</span><br><span class="line">	returns 返回值类型</span><br><span class="line">	begin</span><br><span class="line">		执行的sql语句;</span><br><span class="line">		return 结果;</span><br><span class="line">	end$</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 定义存储函数，获取学生表中成绩大于95分的学生数量</span><br><span class="line">	</span><br><span class="line">	delimiter $</span><br><span class="line">	create function fun_test1 ( ) returns int begin</span><br><span class="line">-- 定义变量</span><br><span class="line">		declare</span><br><span class="line">			s_count int;</span><br><span class="line">-- 查询成绩大于95分的数量，为s_count赋值</span><br><span class="line">		select</span><br><span class="line">			count( * ) into s_count </span><br><span class="line">		from</span><br><span class="line">			student </span><br><span class="line">		where</span><br><span class="line">			score &gt; 95;</span><br><span class="line">-- 返回统计结果</span><br><span class="line">		return s_count;</span><br><span class="line">		</span><br><span class="line">	end $delimiter;</span><br><span class="line">&#x2F;*</span><br><span class="line">	调用函数</span><br><span class="line">	select 函数名称(实际参数);</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 调用函数</span><br><span class="line">select</span><br><span class="line">	fun_test1 ( );</span><br><span class="line">&#x2F;*</span><br><span class="line">	删除函数</span><br><span class="line">	drop function 函数名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除函数</span><br><span class="line">drop function fun_test1;</span><br><span class="line"></span><br><span class="line">end $delimiter;</span><br><span class="line">-- 调用pro_test6存储过程</span><br><span class="line">call pro_test6 ( );</span><br></pre></td></tr></table></figure>

<h3 id="9-触发器"><a href="#9-触发器" class="headerlink" title="9 触发器"></a>9 触发器</h3><h4 id="9-1-触发器的数据准备"><a href="#9-1-触发器的数据准备" class="headerlink" title="9.1 触发器的数据准备"></a>9.1 触发器的数据准备</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建db7数据库</span><br><span class="line">create database db7;</span><br><span class="line">-- 使用db7数据库</span><br><span class="line">use db7;</span><br><span class="line">-- 创建账户表account</span><br><span class="line">create table account ( id int primary key auto_increment, -- 账户id</span><br><span class="line">name varchar ( 20 ), -- 姓名</span><br><span class="line">money double -- 余额</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into account</span><br><span class="line">values</span><br><span class="line">	( null, &#39;张三&#39;, 1000 ),</span><br><span class="line">	( null, &#39;李四&#39;, 1000 );</span><br><span class="line">-- 创建日志表account_log</span><br><span class="line">create table account_log (</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">-- 日志id</span><br><span class="line">operation varchar ( 20 ),</span><br><span class="line">-- 操作类型 (insert update delete)</span><br><span class="line">operation_time datetime,</span><br><span class="line">-- 操作时间</span><br><span class="line">operation_id int,</span><br><span class="line">-- 操作表的id</span><br><span class="line">operation_params varchar ( 200 ) -- 操作参数</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h4 id="9-2-insert型触发器"><a href="#9-2-insert型触发器" class="headerlink" title="9.2 insert型触发器"></a>9.2 insert型触发器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">创建触发器</span><br><span class="line">delimiter $</span><br><span class="line"></span><br><span class="line">create trigger 触发器名称</span><br><span class="line">before|after insert|update|delete</span><br><span class="line">on 表名</span><br><span class="line">for each row</span><br><span class="line">begin</span><br><span class="line">	触发器要执行的功能;</span><br><span class="line">end$</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line">*&#x2F; -- 创建insert型触发器。用于对account表新增数据进行日志的记录</span><br><span class="line"></span><br><span class="line">delimiter $</span><br><span class="line">create trigger account_insert after insert on account for each row</span><br><span class="line">begin</span><br><span class="line">		insert into account_log</span><br><span class="line">	values</span><br><span class="line">		(</span><br><span class="line">			null,</span><br><span class="line">			&#39;insert&#39;,</span><br><span class="line">			now( ),</span><br><span class="line">			new.id,</span><br><span class="line">			concat( &#39;插入后&#123;id&#x3D;&#39;, new.id, &#39;,name&#x3D;&#39;, new.name, &#39;,money&#x3D;&#39;, new.money, &#39;&#125;&#39; ) </span><br><span class="line">		);</span><br><span class="line">	</span><br><span class="line">end $delimiter;</span><br><span class="line">-- 向account表添加一条记录</span><br><span class="line">insert into account</span><br><span class="line">values</span><br><span class="line">	( null, &#39;王五&#39;, 2000 );</span><br><span class="line">-- 查询account表</span><br><span class="line">select</span><br><span class="line">	* </span><br><span class="line">from</span><br><span class="line">	account;</span><br><span class="line">-- 查询account_log表</span><br><span class="line">select</span><br><span class="line">	* </span><br><span class="line">from</span><br><span class="line">account_log;</span><br></pre></td></tr></table></figure>

<h4 id="9-3-update型触发器"><a href="#9-3-update型触发器" class="headerlink" title="9.3 update型触发器"></a>9.3 update型触发器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">创建触发器</span><br><span class="line">delimiter $</span><br><span class="line"></span><br><span class="line">create trigger 触发器名称</span><br><span class="line">before|after insert|update|delete</span><br><span class="line">on 表名</span><br><span class="line">for each row</span><br><span class="line">begin</span><br><span class="line">	触发器要执行的功能;</span><br><span class="line">end$</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line">*&#x2F; -- 创建update型触发器。用于对account表修改数据进行日志的记录</span><br><span class="line"></span><br><span class="line">delimiter $</span><br><span class="line">create trigger account_update after update on account for each row</span><br><span class="line">begin</span><br><span class="line">		insert into account_log</span><br><span class="line">	values</span><br><span class="line">		(</span><br><span class="line">			null,</span><br><span class="line">			&#39;update&#39;,</span><br><span class="line">			now( ),</span><br><span class="line">			new.id,</span><br><span class="line">			concat(</span><br><span class="line">				&#39;更新前&#123;id&#x3D;&#39;,</span><br><span class="line">				old.id,</span><br><span class="line">				&#39;,name&#x3D;&#39;,</span><br><span class="line">				old.name,</span><br><span class="line">				&#39;,money&#x3D;&#39;,</span><br><span class="line">				old.money,</span><br><span class="line">				&#39;&#125;&#39;,</span><br><span class="line">				&#39;更新后&#123;id&#x3D;&#39;,</span><br><span class="line">				new.id,</span><br><span class="line">				&#39;,name&#x3D;&#39;,</span><br><span class="line">				new.name,</span><br><span class="line">				&#39;,money&#x3D;&#39;,</span><br><span class="line">				new.money,</span><br><span class="line">				&#39;&#125;&#39; </span><br><span class="line">			) </span><br><span class="line">		);</span><br><span class="line">	</span><br><span class="line">end $delimiter;</span><br><span class="line">-- 修改account表中李四的金额为2000</span><br><span class="line">update account </span><br><span class="line">set money &#x3D; 2000 </span><br><span class="line">where</span><br><span class="line">	id &#x3D; 2;</span><br><span class="line">-- 查询account表</span><br><span class="line">select</span><br><span class="line">	* </span><br><span class="line">from</span><br><span class="line">	account;</span><br><span class="line">-- 查询account_log表</span><br><span class="line">select</span><br><span class="line">	* </span><br><span class="line">from</span><br><span class="line">account_log;</span><br></pre></td></tr></table></figure>

<h4 id="9-4-delete型触发器"><a href="#9-4-delete型触发器" class="headerlink" title="9.4 delete型触发器"></a>9.4 delete型触发器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">创建触发器</span><br><span class="line">delimiter $</span><br><span class="line"></span><br><span class="line">create trigger 触发器名称</span><br><span class="line">before|after insert|update|delete</span><br><span class="line">on 表名</span><br><span class="line">for each row</span><br><span class="line">begin</span><br><span class="line">	触发器要执行的功能;</span><br><span class="line">end$</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line">*&#x2F; -- 创建delete型触发器。用于对account表删除数据进行日志的记录</span><br><span class="line"></span><br><span class="line">delimiter $</span><br><span class="line">create trigger account_delete after delete on account for each row</span><br><span class="line">begin</span><br><span class="line">		insert into account_log</span><br><span class="line">	values</span><br><span class="line">		(</span><br><span class="line">			null,</span><br><span class="line">			&#39;delete&#39;,</span><br><span class="line">			now( ),</span><br><span class="line">			old.id,</span><br><span class="line">			concat( &#39;删除前&#123;id&#x3D;&#39;, old.id, &#39;,name&#x3D;&#39;, old.name, &#39;,money&#x3D;&#39;, old.money, &#39;&#125;&#39; ) </span><br><span class="line">		);</span><br><span class="line">	</span><br><span class="line">end $delimiter;</span><br><span class="line">-- 删除account表中王五</span><br><span class="line">delete </span><br><span class="line">from</span><br><span class="line">	account </span><br><span class="line">where</span><br><span class="line">	id &#x3D; 3;</span><br><span class="line">-- 查询account表</span><br><span class="line">select</span><br><span class="line">	* </span><br><span class="line">from</span><br><span class="line">	account;</span><br><span class="line">-- 查询account_log表</span><br><span class="line">select</span><br><span class="line">	* </span><br><span class="line">from</span><br><span class="line">account_log;</span><br></pre></td></tr></table></figure>

<h4 id="9-5-查看和删除触发器"><a href="#9-5-查看和删除触发器" class="headerlink" title="9.5 查看和删除触发器"></a>9.5 查看和删除触发器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">查看触发器</span><br><span class="line">show triggers;</span><br><span class="line">*&#x2F; -- 查看触发器</span><br><span class="line">show triggers;</span><br><span class="line">&#x2F;*</span><br><span class="line">删除触发器</span><br><span class="line">drop trigger 触发器名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除account_delete触发器</span><br><span class="line">drop trigger account_delete;</span><br></pre></td></tr></table></figure>

<h3 id="10-事物"><a href="#10-事物" class="headerlink" title="10 事物"></a>10 事物</h3><h4 id="事务的概念"><a href="#事务的概念" class="headerlink" title="事务的概念"></a>事务的概念</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一条或多条 SQL 语句组成一个执行单元，其特点是这个单元要么同时成功要么同时失败。</span><br><span class="line">单元中的每条 SQL 语句都相互依赖，形成一个整体，如果某条 SQL 语句执行失败或者出现错误，那么整个单元就会回滚，撤回到事务最初的状态，如果单元中所有的 SQL 语句都执行成功，则事务就顺利执行。</span><br></pre></td></tr></table></figure>

<h4 id="事务的特征"><a href="#事务的特征" class="headerlink" title="事务的特征"></a>事务的特征</h4><ul>
<li>原子性(atomicity)<ul>
<li>原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚，因此事务的操作如果成功就必须要完全应用到数据库，如果操作失败则不能对数据库有任何影响</li>
</ul>
</li>
<li>一致性(consistency)<ul>
<li>一致性是指事务必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事务执行之前和执行之后都必须处于一致性状态</li>
<li>拿转账来说，假设张三和李四两者的钱加起来一共是2000，那么不管A和B之间如何转账，转几次账，事务结束后两个用户的钱相加起来应该还得是2000，这就是事务的一致性</li>
</ul>
</li>
<li>隔离性(isolation)<ul>
<li>隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离</li>
</ul>
</li>
<li>持久性(durability)<ul>
<li>持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作</li>
</ul>
</li>
</ul>
<h4 id="10-1-事务的数据准备"><a href="#10-1-事务的数据准备" class="headerlink" title="10.1 事务的数据准备"></a>10.1 事务的数据准备</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建db8数据库</span><br><span class="line">create database db8;</span><br><span class="line"></span><br><span class="line">-- 使用db8数据库</span><br><span class="line">use db8;</span><br><span class="line"></span><br><span class="line">-- 创建账户表</span><br><span class="line">create table account(</span><br><span class="line">	id int primary key auto_increment,	-- 账户id</span><br><span class="line">	name varchar(20),			-- 账户名称</span><br><span class="line">	money double				-- 账户余额</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into account values (null,&#39;张三&#39;,1000),(null,&#39;李四&#39;,1000);</span><br></pre></td></tr></table></figure>

<h4 id="10-2-事务的基本使用"><a href="#10-2-事务的基本使用" class="headerlink" title="10.2 事务的基本使用"></a>10.2 事务的基本使用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 张三给李四转账500元</span><br><span class="line"></span><br><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 1.张三账户-500</span><br><span class="line">update account set money&#x3D;money-500 where name&#x3D;&#39;张三&#39;;</span><br><span class="line"></span><br><span class="line"> 出错了...</span><br><span class="line"></span><br><span class="line">-- 2.李四账户+500</span><br><span class="line">update account set money&#x3D;money+500 where name&#x3D;&#39;李四&#39;;</span><br><span class="line"></span><br><span class="line">-- 回滚事务</span><br><span class="line">rollback;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>

<h4 id="10-3-事务的提交方式"><a href="#10-3-事务的提交方式" class="headerlink" title="10.3 事务的提交方式"></a>10.3 事务的提交方式</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	查询事务提交方式：select @@autocommit;  -- 1代表自动提交    0代表手动提交</span><br><span class="line">	默认是自动提交的</span><br><span class="line">	修改事务提交方式：set @@autocommit&#x3D;数字;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询事务的提交方式</span><br><span class="line">select @@autocommit;</span><br><span class="line"></span><br><span class="line">set @@autocommit &#x3D; 0;</span><br><span class="line">update account set money&#x3D;2000 where id&#x3D;1;</span><br><span class="line"></span><br><span class="line">commit;</span><br><span class="line">-- 保存到了内存当中</span><br><span class="line"></span><br><span class="line">-- 修改事务的提交方式</span><br><span class="line">set @@autocommit &#x3D; 1;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="10-4-隔离级别"><a href="#10-4-隔离级别" class="headerlink" title="10.4 隔离级别"></a>10.4 隔离级别</h4><h5 id="隔离级别的概念"><a href="#隔离级别的概念" class="headerlink" title="隔离级别的概念"></a>隔离级别的概念</h5><ul>
<li>多个客户端操作时 ,各个客户端的事务之间应该是隔离的，相互独立的 , 不受影响的。</li>
<li>而如果多个事务操作同一批数据时，则需要设置不同的隔离级别 , 否则就会产生问题 。</li>
<li>我们先来了解一下四种隔离级别的名称 , 再来看看可能出现的问题</li>
</ul>
<h5 id="四种隔离级别"><a href="#四种隔离级别" class="headerlink" title="四种隔离级别"></a>四种隔离级别</h5><table>
<thead>
<tr>
<th>1</th>
<th>读未提交</th>
<th>read uncommitted</th>
</tr>
</thead>
<tbody><tr>
<td><strong>2</strong></td>
<td><strong>读已提交</strong></td>
<td><strong>read committed</strong></td>
</tr>
<tr>
<td><strong>3</strong></td>
<td><strong>可重复读</strong></td>
<td><strong>repeatable read</strong></td>
</tr>
<tr>
<td><strong>4</strong></td>
<td><strong>串行化</strong></td>
<td><strong>serializable</strong></td>
</tr>
</tbody></table>
<p>可能引发的问题</p>
<table>
<thead>
<tr>
<th>问题</th>
<th>现象</th>
</tr>
</thead>
<tbody><tr>
<td><strong>脏读</strong></td>
<td><strong>是指在一个事务处理过程中读取了另一个未提交的事务中的数据 , 导致两次查询结果不一致</strong></td>
</tr>
<tr>
<td><strong>不可重复读</strong></td>
<td><strong>是指在一个事务处理过程中读取了另一个事务中修改并 询结果不一致</strong></td>
</tr>
<tr>
<td><strong>幻读</strong></td>
<td><strong>select 某记录是否存在，不存在，准备插入此记录，但执行 insert 时发现此记录已存在，无法插入。或不存在执行delete删除，却发现删除成功</strong></td>
</tr>
</tbody></table>
<h5 id="查询和修改事务的隔离级别"><a href="#查询和修改事务的隔离级别" class="headerlink" title="查询和修改事务的隔离级别"></a>查询和修改事务的隔离级别</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	查询隔离级别：select @@tx_isolation;</span><br><span class="line">	修改隔离级别：set global transaction isolation level 级别字符串;</span><br><span class="line">*&#x2F;1</span><br><span class="line">-- 查询事务隔离级别</span><br><span class="line">select @@tx_isolation;</span><br><span class="line"></span><br><span class="line">-- 修改事务隔离级别(修改后需要重新连接)12请问</span><br><span class="line">set global transaction isolation level read committed;</span><br></pre></td></tr></table></figure>

<h4 id="10-5-脏读的问题演示和解决-窗口1"><a href="#10-5-脏读的问题演示和解决-窗口1" class="headerlink" title="10.5 脏读的问题演示和解决_窗口1"></a>10.5 脏读的问题演示和解决_窗口1</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	脏读的问题演示和解决</span><br><span class="line">	脏读：一个事务中读取到了其他事务“未提交”的数据</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 设置事务隔离级别为read uncommitted</span><br><span class="line">set global transaction isolation level read uncommitted;</span><br><span class="line">-- 设置事务隔离级别为read committed</span><br><span class="line">set global transaction isolation level read committed;</span><br><span class="line"></span><br><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 转账</span><br><span class="line">update account set money &#x3D; money-500 where name&#x3D;&#39;张三&#39;;</span><br><span class="line">update account set money &#x3D; money+500 where name&#x3D;&#39;李四&#39;;</span><br><span class="line"></span><br><span class="line">-- 查询account表</span><br><span class="line">select * from account;</span><br><span class="line"></span><br><span class="line">-- 回滚</span><br><span class="line">rollback;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>

<h4 id="10-5-脏读的问题演示和解决-窗口2"><a href="#10-5-脏读的问题演示和解决-窗口2" class="headerlink" title="10.5 脏读的问题演示和解决_窗口2"></a>10.5 脏读的问题演示和解决_窗口2</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询事务隔离级别</span><br><span class="line">select @@tx_isolation;</span><br><span class="line"></span><br><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 查询account表</span><br><span class="line">select * from account;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>

<h4 id="10-6-不可重复读的问题演示和解决-窗口1"><a href="#10-6-不可重复读的问题演示和解决-窗口1" class="headerlink" title="10.6 不可重复读的问题演示和解决_窗口1"></a>10.6 不可重复读的问题演示和解决_窗口1</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	不可重复读的问题演示和解决</span><br><span class="line">	不可重复读：一个事务中读取到了其他事务“已提交”的数据</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 设置事务隔离级别为read committed</span><br><span class="line">set global transaction isolation level read committed;</span><br><span class="line">set global transaction isolation level repeatable read;</span><br><span class="line"></span><br><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 转账</span><br><span class="line">update account set money &#x3D; money-500 where name&#x3D;&#39;张三&#39;;</span><br><span class="line">update account set money &#x3D; money+500 where name&#x3D;&#39;李四&#39;;</span><br><span class="line"></span><br><span class="line">-- 查询account表</span><br><span class="line">select * from account;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>

<h4 id="10-6-不可重复读的问题演示和解决-窗口2"><a href="#10-6-不可重复读的问题演示和解决-窗口2" class="headerlink" title="10.6 不可重复读的问题演示和解决_窗口2"></a>10.6 不可重复读的问题演示和解决_窗口2</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询隔离级别</span><br><span class="line">select @@tx_isolation;</span><br><span class="line">-- 设置事务隔离级别为read uncommitted</span><br><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 查询account表</span><br><span class="line">select * from account;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>

<h4 id="10-7-幻读的问题演示和解决-窗口1"><a href="#10-7-幻读的问题演示和解决-窗口1" class="headerlink" title="10.7 幻读的问题演示和解决_窗口1"></a>10.7 幻读的问题演示和解决_窗口1</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	幻读的问题演示和解决</span><br><span class="line">	查询某记录是否存在，不存在</span><br><span class="line">	准备插入此记录，但执行插入时发现此记录已存在，无法插入</span><br><span class="line">	或某记录不存在执行删除，却发现删除成功</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 设置隔离级别为repeatable read</span><br><span class="line">set global transaction isolation level repeatable read;</span><br><span class="line">set global transaction isolation level serializable;</span><br><span class="line"></span><br><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 添加记录</span><br><span class="line">insert into account values (3,&#39;王五&#39;,2000);</span><br><span class="line">insert into account values (4,&#39;赵六&#39;,3000);</span><br><span class="line"></span><br><span class="line">-- 查询account表</span><br><span class="line">select * from account;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>

<h4 id="10-7-幻读的问题演示和解决-窗口2"><a href="#10-7-幻读的问题演示和解决-窗口2" class="headerlink" title="10.7 幻读的问题演示和解决_窗口2"></a>10.7 幻读的问题演示和解决_窗口2</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询隔离级别</span><br><span class="line">select @@tx_isolation;</span><br><span class="line"></span><br><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 查询account表</span><br><span class="line">select * from account;</span><br><span class="line"></span><br><span class="line">-- 添加</span><br><span class="line">insert into account values (3,&#39;王五&#39;,2000);</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>

<h3 id="11-存储引擎"><a href="#11-存储引擎" class="headerlink" title="11 存储引擎"></a>11 存储引擎</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	查询数据库支持的存储引擎</span><br><span class="line">	show engines;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询数据库支持的存储引擎</span><br><span class="line">show engines;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	查询某个数据库中所有数据表的存储引擎</span><br><span class="line">	show table status from 数据库名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询db4数据库所有表的存储引擎</span><br><span class="line">show table status from db4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	查询某个数据库中某个表的存储引擎</span><br><span class="line">	show table status from 数据库名称 where name &#x3D; &#39;数据表名称&#39;;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查看db4数据库中category表的存储引擎</span><br><span class="line">show table status from db4 where name &#x3D; &#39;category&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	创建数据表指定存储引擎</span><br><span class="line">	create table 表名(</span><br><span class="line">	      列名,数据类型,</span><br><span class="line">	      ...</span><br><span class="line">	)engine &#x3D; 引擎名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">create table engine_test(</span><br><span class="line">	id int primary key auto_increment,</span><br><span class="line">	name varchar(10)</span><br><span class="line">)engine &#x3D; myisam;</span><br><span class="line"></span><br><span class="line">show table status from db4;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	修改数据表的存储引擎</span><br><span class="line">	alter table 表名 engine &#x3D; 引擎名称;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 修改engine_test表的存储引擎为innodb</span><br><span class="line">alter table engine_test engine &#x3D; innodb;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="12-索引"><a href="#12-索引" class="headerlink" title="12 索引"></a>12 索引</h3><p>数据准备</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建db9数据库</span><br><span class="line">create database db9;</span><br><span class="line"></span><br><span class="line">-- 使用db9数据库</span><br><span class="line">use db9;</span><br><span class="line"></span><br><span class="line">-- 创建student表</span><br><span class="line">create table student(</span><br><span class="line">	id int primary key auto_increment,</span><br><span class="line">	name varchar(10),</span><br><span class="line">	age int,</span><br><span class="line">	score int</span><br><span class="line">);</span><br><span class="line">-- 添加数据</span><br><span class="line">insert into student values (null,&#39;张三&#39;,23,98),(null,&#39;李四&#39;,24,95),</span><br><span class="line">(null,&#39;王五&#39;,25,96),(null,&#39;赵六&#39;,26,94),(null,&#39;周七&#39;,27,99);</span><br></pre></td></tr></table></figure>

<p>创建和查询索引</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	创建索引</span><br><span class="line">	create [unique|fulltext] index 索引名称</span><br><span class="line">	[using 索引类型]  -- 默认是btree</span><br><span class="line">	on 表名(列名...);</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 为student表中的name列创建一个普通索引</span><br><span class="line">create index idx_name on student(name); </span><br><span class="line"></span><br><span class="line">-- 为student表中的age列创建一个唯一索引</span><br><span class="line">create unique index idx_age on student(age);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	查询索引</span><br><span class="line">	show index from 表名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 查询student表中的索引  (主键列自带主键索引)</span><br><span class="line">show index from student;</span><br><span class="line"></span><br><span class="line">-- 查询db4数据库中的product表 (外键列自带外键索引)</span><br><span class="line">show index from product;</span><br></pre></td></tr></table></figure>

<p>添加和删除索引</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	alter添加索引</span><br><span class="line">	-- 普通索引</span><br><span class="line">	alter table 表名 add index 索引名称(列名);</span><br><span class="line"></span><br><span class="line">	-- 组合索引</span><br><span class="line">	alter table 表名 add index 索引名称(列名1,列名2,...);</span><br><span class="line"></span><br><span class="line">	-- 主键索引</span><br><span class="line">	alter table 表名 add primary key(主键列名); </span><br><span class="line"></span><br><span class="line">	-- 外键索引(添加外键约束，就是外键索引)</span><br><span class="line">	alter table 表名 add constraint 外键名 foreign key (本表外键列名) references 主表名(主键列名);</span><br><span class="line"></span><br><span class="line">	-- 唯一索引</span><br><span class="line">	alter table 表名 add unique 索引名称(列名);</span><br><span class="line"></span><br><span class="line">	-- 全文索引</span><br><span class="line">	alter table 表名 add fulltext 索引名称(列名);</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 为student表中score列添加唯一索引</span><br><span class="line">alter table student add unique idx_score(score);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 查询student表的索引</span><br><span class="line">show index from student;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">	删除索引</span><br><span class="line">	drop index 索引名称 on 表名;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 删除idx_score索引</span><br><span class="line">drop index idx_score on student;</span><br></pre></td></tr></table></figure>



<h3 id="13-锁"><a href="#13-锁" class="headerlink" title="13 锁"></a>13 锁</h3><h5 id="13-1-InnoDB锁的数据准备"><a href="#13-1-InnoDB锁的数据准备" class="headerlink" title="13.1 InnoDB锁的数据准备"></a>13.1 InnoDB锁的数据准备</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建db10数据库</span><br><span class="line">create database db10;</span><br><span class="line"></span><br><span class="line">-- 使用db10数据库</span><br><span class="line">use db10;</span><br><span class="line"></span><br><span class="line">-- 创建student表</span><br><span class="line">create table student(</span><br><span class="line">	id int primary key auto_increment,</span><br><span class="line">	name varchar(10),</span><br><span class="line">	age int,</span><br><span class="line">	score int</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 添加数据</span><br><span class="line">insert into student values (null,&#39;张三&#39;,23,99),(null,&#39;李四&#39;,24,95),</span><br><span class="line">(null,&#39;王五&#39;,25,98),(null,&#39;赵六&#39;,26,97);</span><br></pre></td></tr></table></figure>



<h5 id="13-2-InnoDB共享锁-窗口1"><a href="#13-2-InnoDB共享锁-窗口1" class="headerlink" title="13.2 InnoDB共享锁_窗口1"></a>13.2 InnoDB共享锁_窗口1</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	共享锁：数据可以被多个事务查询，但是不能修改</span><br><span class="line">	创建锁的格式</span><br><span class="line">		select语句 lock in share mode;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 查询id为1数据，并加入共享锁</span><br><span class="line">select * from student where id&#x3D;1 lock in share mode;</span><br><span class="line"></span><br><span class="line">-- 查询分数为99的数据，并加入共享锁</span><br><span class="line">select * from student where score&#x3D;99 lock in share mode;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>



<h5 id="13-2-InnoDB共享锁-窗口2"><a href="#13-2-InnoDB共享锁-窗口2" class="headerlink" title="13.2 InnoDB共享锁_窗口2"></a>13.2 InnoDB共享锁_窗口2</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 查询id为1数据,(普通查询没问题)</span><br><span class="line">select * from student where id&#x3D;1;</span><br><span class="line"></span><br><span class="line">-- 查询id为1数据,也加入共享锁(共享锁和共享锁是兼容)</span><br><span class="line">select * from student where id&#x3D;1 lock in share mode;</span><br><span class="line"></span><br><span class="line">-- 修改id为1数据，姓名改成张三三(修改失败。会出现锁的情况。只有窗口1提交事务后才能修改成功)</span><br><span class="line">update student set name&#x3D;&#39;张三三&#39; where id&#x3D;1;</span><br><span class="line"></span><br><span class="line">-- 修改id为2数据，姓名改成李四四(修改成功，innodb引擎默认加的是行锁)</span><br><span class="line">update student set name&#x3D;&#39;李四四&#39; where id&#x3D;2;</span><br><span class="line"></span><br><span class="line">-- 修改id为3数据，姓名改成王五五(修改失败，innodb引擎如果不采用带索引的列加锁，加的就是表锁)</span><br><span class="line">update student set name&#x3D;&#39;王五五&#39; where id&#x3D;3;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="13-3-InnoDB排他锁-窗口1"><a href="#13-3-InnoDB排他锁-窗口1" class="headerlink" title="13.3 InnoDB排他锁_窗口1"></a>13.3 InnoDB排他锁_窗口1</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	排他锁：加锁的数据，不能被其他事务加锁查询或修改</span><br><span class="line">	排他锁创建格式</span><br><span class="line">		select语句 for update;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 查询id为1数据，并加入排他锁</span><br><span class="line">select * from student where id&#x3D;1 for update;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>



<h5 id="13-3-InnoDB排他锁-窗口2"><a href="#13-3-InnoDB排他锁-窗口2" class="headerlink" title="13.3 InnoDB排他锁_窗口2"></a>13.3 InnoDB排他锁_窗口2</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 开启事务</span><br><span class="line">start transaction;</span><br><span class="line"></span><br><span class="line">-- 查询id为1数据(普通查询没问题)</span><br><span class="line">select * from student where id&#x3D;1;</span><br><span class="line"></span><br><span class="line">-- 查询id为1数据,并加入共享锁(排他锁和共享锁是不兼容的)</span><br><span class="line">select * from student where id&#x3D;1 lock in share mode; </span><br><span class="line"></span><br><span class="line">-- 查询id为1数据，并加入排他锁(排他锁和排他锁是不兼容的)</span><br><span class="line">select * from student where id&#x3D;1 for update;</span><br><span class="line"></span><br><span class="line">-- 修改id为1数据，将姓名改成张三(修改失败，会出现锁的情况。只有窗口1提交事务后才能修改成功)</span><br><span class="line">update student set name&#x3D;&#39;张三&#39; where id&#x3D;1;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>



<h5 id="13-4-MYISAM锁的数据准备"><a href="#13-4-MYISAM锁的数据准备" class="headerlink" title="13.4 MYISAM锁的数据准备"></a>13.4 MYISAM锁的数据准备</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建product表</span><br><span class="line">create table product(</span><br><span class="line">	id int primary key auto_increment,</span><br><span class="line">	name varchar(20),</span><br><span class="line">	price int</span><br><span class="line">)engine &#x3D; myisam;  -- 指定存储引擎为myisam</span><br><span class="line"></span><br><span class="line">-- 添加数据</span><br><span class="line">insert into product values (null,&#39;华为手机&#39;,4999),(null,&#39;小米手机&#39;,2999),</span><br><span class="line">(null,&#39;苹果&#39;,8999),(null,&#39;中兴&#39;,1999);</span><br></pre></td></tr></table></figure>



<h5 id="13-5-MYISAM读锁-窗口1"><a href="#13-5-MYISAM读锁-窗口1" class="headerlink" title="13.5 MYISAM读锁_窗口1"></a>13.5 MYISAM读锁_窗口1</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	读锁：所有连接只能读取数据，不能修改</span><br><span class="line">	加锁</span><br><span class="line">		lock table 表名 read;</span><br><span class="line"></span><br><span class="line">	解锁</span><br><span class="line">		unlock tables;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 为product表添加读锁</span><br><span class="line">lock table product read;</span><br><span class="line"></span><br><span class="line">-- 查询id为1数据</span><br><span class="line">select * from product where id&#x3D;1;</span><br><span class="line"></span><br><span class="line">-- 修改id为1数据，将金额修改4999</span><br><span class="line">update product set price &#x3D; 4999 where id&#x3D;1;</span><br><span class="line"></span><br><span class="line">-- 解锁</span><br><span class="line">unlock tables;</span><br></pre></td></tr></table></figure>



<h5 id="13-5-MYISAM读锁-窗口2"><a href="#13-5-MYISAM读锁-窗口2" class="headerlink" title="13.5 MYISAM读锁_窗口2"></a>13.5 MYISAM读锁_窗口2</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询id为1数据</span><br><span class="line">select * from product where id&#x3D;1;</span><br><span class="line"></span><br><span class="line">-- 修改id为1数据，将金额改成5999(修改失败，只有窗口1解锁后才能修改成功)</span><br><span class="line">update product set price&#x3D;5999 where id&#x3D;1;</span><br></pre></td></tr></table></figure>



<h5 id="13-6-MYISAM写锁-窗口1"><a href="#13-6-MYISAM写锁-窗口1" class="headerlink" title="13.6 MYISAM写锁_窗口1"></a>13.6 MYISAM写锁_窗口1</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">	写锁：其他连接不能查询和修改数据</span><br><span class="line">	加锁</span><br><span class="line">		lock table 表名 write;</span><br><span class="line"></span><br><span class="line">	解锁</span><br><span class="line">		unlock tables;</span><br><span class="line">*&#x2F;</span><br><span class="line">-- 为product表添加写锁</span><br><span class="line">lock table product write;</span><br><span class="line"></span><br><span class="line">-- 查询</span><br><span class="line">select * from product;</span><br><span class="line"></span><br><span class="line">-- 修改</span><br><span class="line">update product set price&#x3D;1999 where id&#x3D;2;</span><br><span class="line"></span><br><span class="line">-- 解锁</span><br><span class="line">unlock tables;</span><br></pre></td></tr></table></figure>



<h5 id="13-6-MYISAM写锁-窗口2"><a href="#13-6-MYISAM写锁-窗口2" class="headerlink" title="13.6 MYISAM写锁_窗口2"></a>13.6 MYISAM写锁_窗口2</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> -- 查询(查询失败，只有窗口1解锁后才能查询成功)</span><br><span class="line">select * from product;</span><br><span class="line"></span><br><span class="line">-- 修改(修改失败，只有窗口1解锁后才能修改成功)</span><br><span class="line">update product set price&#x3D;2999 where id&#x3D;2;</span><br></pre></td></tr></table></figure>



<h5 id="13-7-乐观锁"><a href="#13-7-乐观锁" class="headerlink" title="13.7 乐观锁"></a>13.7 乐观锁</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建city表</span><br><span class="line">create table city(</span><br><span class="line">	id int primary key auto_increment,  -- 城市id</span><br><span class="line">	name varchar(20),                   -- 城市名称</span><br><span class="line">	version int                         -- 版本号</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 添加数据</span><br><span class="line">insert into city values (null,&#39;北京&#39;,1),(null,&#39;上海&#39;,1),(null,&#39;广州&#39;,1),(null,&#39;深圳&#39;,1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 将北京修改为北京市</span><br><span class="line">-- 1.将北京的版本号读取出来</span><br><span class="line">select version from city where name&#x3D;&#39;北京&#39;;   -- 1</span><br><span class="line">-- 2.修改北京为北京市，版本号+1.并对比版本号是否相同</span><br><span class="line">update city set name&#x3D;&#39;北京市&#39;,version&#x3D;version+1 where name&#x3D;&#39;北京&#39; and version&#x3D;1;</span><br></pre></td></tr></table></figure>

<h4 id><a href="#" class="headerlink" title></a></h4>]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
</search>
