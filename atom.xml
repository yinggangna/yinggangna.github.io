<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WinGone&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-05T16:13:14.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>WangYinggang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>swagger使用</title>
    <link href="http://example.com/2021/12/07/swagger%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2021/12/07/swagger%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2021-12-07T13:44:23.000Z</published>
    <updated>2021-04-05T16:13:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="1-pom依赖"><a href="#1-pom依赖" class="headerlink" title="1.pom依赖"></a>1.pom依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.swagger<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-models<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-bootstrap-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-配置文件"><a href="#2-配置文件" class="headerlink" title="2.配置文件"></a>2.配置文件</h2><p>config.SwaggerConfig</p><ul><li>“/cli/**”路径需要修改</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Predicate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.google.common.base.Predicates.or;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> springfox.documentation.builders.PathSelectors.ant;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lv</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2018-04-27 18:51</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> Swagger 配置</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">createDocket</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Predicate&lt;String&gt; path = or(ant(<span class="string">&quot;/cli/**&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">&quot;eairlv-cli&quot;</span>)</span><br><span class="line">                .useDefaultResponseMessages(<span class="keyword">false</span>)</span><br><span class="line">                .forCodeGeneration(<span class="keyword">false</span>)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .paths(path)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接口描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">&quot;eairlv-cli&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;eairlv-cli 脚手架工具swagger2接口文档&quot;</span>)</span><br><span class="line">                .termsOfServiceUrl(<span class="string">&quot;https://gitee.com/eairlv&quot;</span>)</span><br><span class="line">                .license(<span class="string">&quot;Apache License Version 1.0&quot;</span>)</span><br><span class="line">                .licenseUrl(<span class="string">&quot;https://github.com/springfox/springfox/blob/master/LICENSE&quot;</span>)</span><br><span class="line">                .version(<span class="string">&quot;1.0&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h1><p>- @Api()用于类；<br>表示标识这个类是swagger的资源<br>- @ApiOperation()用于方法；<br>表示一个http请求的操作<br>- @ApiParam()用于方法，参数，字段说明；<br>表示对参数的添加元数据（说明或是否必填等）<br>- @ApiModel()用于类<br>表示对类进行说明，用于参数用实体类接收<br>- @ApiModelProperty()用于方法，字段<br>表示对model属性的说明或者数据操作更改<br>- @ApiIgnore()用于类，方法，方法参数<br>表示这个方法或者类被忽略<br>- @ApiImplicitParam() 用于方法<br>表示单独的请求参数<br>- @ApiImplicitParams() 用于方法，包含多个 @ApiImplicitParam</p><h2 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h2><p>具体使用举例说明：<br>@Api()<br>用于<strong>类</strong>；表示标识这个类是swagger的资源<br>tags–表示说明<br>value–也是说明，可以使用tags替代<br>但是tags如果有多个值，会生成多个list</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@Api(value&#x3D;&quot;用户controller&quot;,tags&#x3D;&#123;&quot;用户操作接口&quot;&#125;)</span><br><span class="line">@RestController</span><br><span class="line">public class UserController &#123; &#125;</span><br></pre></td></tr></table></figure><p>@ApiOperation() 用于<strong>方法</strong>；表示一个http请求的操作<br>value用于方法描述<br>notes用于提示内容<br>tags可以重新分组（视情况而用）<br>@ApiParam() 用于方法，参数，字段说明；表示对参数的添加元数据（说明或是否必填等）<br>name–参数名<br>value–参数说明<br>required–是否必填</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Api(value=&quot;用户controller&quot;,tags=&#123;&quot;用户操作接口&quot;&#125;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line">   <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">       <span class="meta">@ApiOperation(value = &quot;获取用户信息&quot;, tags = &#123;&quot;获取用户信息copy&quot;&#125;, notes = &quot;注意问题点&quot;)</span></span><br><span class="line">       <span class="meta">@GetMapping(&quot;/getUserInfo&quot;)</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> User <span class="title">getUserInfo</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">       <span class="meta">@ApiParam(name = &quot;id&quot;, value = &quot;用户id&quot;, required = true)</span> Long id, <span class="meta">@ApiParam(name = &quot;username&quot;, value = &quot;用户名&quot;)</span> String username)</span> </span>&#123; <span class="comment">// userService可忽略，是业务逻辑 User user = userService.getUserInfo(); return user; &#125; &#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实体类层"><a href="#实体类层" class="headerlink" title="实体类层"></a>实体类层</h2><p>@ApiModel()用于<strong>类</strong> ；表示对类进行说明，用于参数用实体类接收<br>value–表示对象名<br>description–描述<br>都可省略 </p><p>@ApiModelProperty()用于<strong>方法</strong>，<strong>字段</strong>； 表示对model属性的说明或者数据操作更改<br>value–字段说明<br>name–重写属性名字<br>dataType–重写属性类型<br>required–是否必填<br>example–举例说明<br>hidden–隐藏</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModel(value=&quot;user对象&quot;,description=&quot;用户对象user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123; </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ApiModelProperty(value=&quot;用户名&quot;,name=&quot;username&quot;,example=&quot;xingguo&quot;)</span> </span><br><span class="line">    <span class="keyword">private</span> String username; </span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ApiModelProperty(value=&quot;状态&quot;,name=&quot;state&quot;,required=true)</span> </span><br><span class="line">    <span class="keyword">private</span> Integer state; </span><br><span class="line">    <span class="keyword">private</span> String password; </span><br><span class="line">    <span class="keyword">private</span> String nickName; </span><br><span class="line">    <span class="keyword">private</span> Integer isDeleted;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ApiModelProperty(value=&quot;id数组&quot;,hidden=true)</span> </span><br><span class="line">    <span class="keyword">private</span> String[] ids; </span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; idList; <span class="comment">//省略get/set &#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;更改用户信息&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/updateUserInfo&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateUserInfo</span><span class="params">(<span class="meta">@RequestBody</span> </span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="meta">@ApiParam(name=&quot;用户对象&quot;,value=&quot;传入json格式&quot;,required=true)</span> User user)</span></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> num = userService.updateUserInfo(user); </span><br><span class="line">    <span class="keyword">return</span> num; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>@ApiIgnore()用于类或者方法上，可以不被swagger显示在页面上<br>比较简单, 这里不做举例</p><p>@ApiImplicitParam() 用于方法<br>表示单独的请求参数<br>@ApiImplicitParams() 用于方法，包含多个 @ApiImplicitParam<br>name–参数ming<br>value–参数说明<br>dataType–数据类型<br>paramType–参数类型<br>example–举例说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;查询测试&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;select&quot;)</span></span><br><span class="line"><span class="comment">//@ApiImplicitParam(name=&quot;name&quot;,value=&quot;用户名&quot;,dataType=&quot;String&quot;, paramType = &quot;query&quot;) @ApiImplicitParams(&#123; @ApiImplicitParam(name=&quot;name&quot;,value=&quot;用户名&quot;,dataType=&quot;string&quot;, paramType = &quot;query&quot;,example=&quot;xingguo&quot;), @ApiImplicitParam(name=&quot;id&quot;,value=&quot;用户id&quot;,dataType=&quot;long&quot;, paramType = &quot;query&quot;)&#125;) public void select()&#123; &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h1&gt;&lt;h2 id=&quot;1-pom依赖&quot;&gt;&lt;a href=&quot;#1-pom依赖&quot; class=&quot;headerlink&quot; title=&quot;1.pom依赖&quot;&gt;&lt;/</summary>
      
    
    
    
    
    <category term="swagger" scheme="http://example.com/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch springdata</title>
    <link href="http://example.com/2021/04/12/ES%E7%AC%94%E8%AE%B0/springdata+es/"/>
    <id>http://example.com/2021/04/12/ES%E7%AC%94%E8%AE%B0/springdata+es/</id>
    <published>2021-04-12T03:48:33.000Z</published>
    <updated>2021-04-08T16:56:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-创建spring项目"><a href="#1-创建spring项目" class="headerlink" title="1.创建spring项目"></a>1.创建spring项目</h2><h2 id="2创建依赖"><a href="#2创建依赖" class="headerlink" title="2创建依赖"></a>2创建依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yinggang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>es<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-application-properties配置文件"><a href="#3-application-properties配置文件" class="headerlink" title="3.application.properties配置文件"></a>3.application.properties配置文件</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># es服务地址</span></span><br><span class="line"><span class="meta">elasticsearch.host</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="comment"># es服务端口</span></span><br><span class="line"><span class="meta">elasticsearch.port</span>=<span class="string">9200</span></span><br><span class="line"><span class="comment"># 配置日志级别,开启debug日志</span></span><br><span class="line"><span class="meta">logging.level.com.yinggang.es</span>=<span class="string">debug</span></span><br></pre></td></tr></table></figure><h2 id="4-主程序"><a href="#4-主程序" class="headerlink" title="4.主程序"></a>4.主程序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringDataElasticSearchMainApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringDataElasticSearchMainApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-数据实体类Product"><a href="#5-数据实体类Product" class="headerlink" title="5.数据实体类Product"></a>5.数据实体类Product</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yinggang.es;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.annotation.Id;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.annotations.Document;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.annotations.Field;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.annotations.FieldType;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="comment">//实体类映射操作 主分片 3 副本 1</span></span><br><span class="line"><span class="meta">@Document(indexName = &quot;product&quot;, shards = 3, replicas = 1)</span>      </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="keyword">private</span> Long id;<span class="comment">//商品唯一标识</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * type : 字段数据类型</span></span><br><span class="line"><span class="comment">     * analyzer : 分词器类型</span></span><br><span class="line"><span class="comment">     * index : 是否索引(默认:true)</span></span><br><span class="line"><span class="comment">     * Keyword : 短语,不进行分词</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Field</span>(type = FieldType.Text,analyzer = &quot;ik_max_word&quot;)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Field(type = FieldType.Text)</span></span><br><span class="line">    <span class="keyword">private</span> String title;<span class="comment">//商品名称</span></span><br><span class="line">    <span class="comment">//Keyword 不分词</span></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Keyword)</span></span><br><span class="line">    <span class="keyword">private</span> String category;<span class="comment">//分类名称</span></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Double)</span></span><br><span class="line">    <span class="keyword">private</span> Double price;<span class="comment">//商品价格</span></span><br><span class="line">    <span class="comment">//不能用图片路径查询</span></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Keyword, index = false)</span></span><br><span class="line">    <span class="keyword">private</span> String images;<span class="comment">//图片地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-配置类ElasticsearchConfig"><a href="#6-配置类ElasticsearchConfig" class="headerlink" title="6.配置类ElasticsearchConfig"></a>6.配置类ElasticsearchConfig</h2><ul><li>ElasticsearchRestTemplate 是 spring-data-elasticsearch 项目中的一个类，和其他 spring 项目中的 template 类似。 </li><li> 在新版的 spring-data-elasticsearch 中，ElasticsearchRestTemplate 代替了原来的 ElasticsearchTemplate。 </li><li> 原因是 ElasticsearchTemplate 基于 TransportClient，TransportClient 即将在 8.x 以后的版本中移除。所 以，我们推荐使用 ElasticsearchRestTemplate。 </li><li>ElasticsearchRestTemplate 基 于 RestHighLevelClient 客户端的。需要自定义配置类，继承 AbstractElasticsearchConfiguration，并实现 elasticsearchClient()抽象方法，创建 RestHighLevelClient 对 象。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yinggang.es;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHost;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestClientBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.RestHighLevelClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.config.AbstractElasticsearchConfiguration;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//关联配置文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;elasticsearch&quot;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElasticsearchConfig</span> <span class="keyword">extends</span> <span class="title">AbstractElasticsearchConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String host ;</span><br><span class="line">    <span class="keyword">private</span> Integer port ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重写父类方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestHighLevelClient <span class="title">elasticsearchClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RestClientBuilder builder = RestClient.builder(<span class="keyword">new</span> HttpHost(host, port));</span><br><span class="line">        RestHighLevelClient restHighLevelClient = <span class="keyword">new</span> RestHighLevelClient(builder);</span><br><span class="line">        <span class="keyword">return</span> restHighLevelClient;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-Dao层"><a href="#7-Dao层" class="headerlink" title="7.Dao层"></a>7.Dao层</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yinggang.es;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.repository.ElasticsearchRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Long 是主键</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductDao</span> <span class="keyword">extends</span> <span class="title">ElasticsearchRepository</span>&lt;<span class="title">Product</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-索引操作"><a href="#8-索引操作" class="headerlink" title="8.索引操作"></a>8.索引操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yinggang.es;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringDataESIndexTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ElasticsearchRestTemplate elasticsearchRestTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建索引并增加映射配置</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createIndex</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;创建索引&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteIndex</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//创建索引，系统初始化会自动创建索引</span></span><br><span class="line">        <span class="keyword">boolean</span> flg = elasticsearchRestTemplate.deleteIndex(Product.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;删除索引 = &quot;</span> + flg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-查看索引"><a href="#9-查看索引" class="headerlink" title="9.查看索引"></a>9.查看索引</h2><p><a href="http://106.54.95.74:9200/_cat/indices?v">http://106.54.95.74:9200/_cat/indices?v</a></p><h2 id="10-文档操作"><a href="#10-文档操作" class="headerlink" title="10.文档操作"></a>10.文档操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yinggang.es;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringDataESProductDaoTest02</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductDao productDao;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Product product = <span class="keyword">new</span> Product();</span><br><span class="line">        product.setId(<span class="number">2L</span>);</span><br><span class="line">        product.setTitle(<span class="string">&quot;华为手机&quot;</span>);</span><br><span class="line">        product.setCategory(<span class="string">&quot;手机&quot;</span>);</span><br><span class="line">        product.setPrice(<span class="number">2999.0</span>);</span><br><span class="line">        product.setImages(<span class="string">&quot;http://www.yinggang/hw.jpg&quot;</span>);</span><br><span class="line">        productDao.save(product);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询当前索引的数据</span></span><br><span class="line">    <span class="comment">/* http://106.54.95.74:9200/pro/_doc/2 */</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="comment">//id 相同</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Product product = <span class="keyword">new</span> Product();</span><br><span class="line">        product.setId(<span class="number">1L</span>);</span><br><span class="line">        product.setTitle(<span class="string">&quot;小米 2 手机&quot;</span>);</span><br><span class="line">        product.setCategory(<span class="string">&quot;手机&quot;</span>);</span><br><span class="line">        product.setPrice(<span class="number">9999.0</span>);</span><br><span class="line">        product.setImages(<span class="string">&quot;http://www.yinggang/xm.jpg&quot;</span>);</span><br><span class="line">        productDao.save(product);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//根据 id 查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findById</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Product product = productDao.findById(<span class="number">1L</span>).get();</span><br><span class="line">        System.out.println(product);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Iterable&lt;Product&gt; products = productDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (Product product : products) &#123;</span><br><span class="line">            System.out.println(product);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Product product = <span class="keyword">new</span> Product();</span><br><span class="line">        product.setId(<span class="number">1L</span>);</span><br><span class="line">        productDao.delete(product);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//批量新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Product&gt; productList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            Product product = <span class="keyword">new</span> Product();</span><br><span class="line">            product.setId(Long.valueOf(i));</span><br><span class="line">            product.setTitle(<span class="string">&quot;[&quot;</span>+i+<span class="string">&quot;]小米手机&quot;</span>);</span><br><span class="line">            product.setCategory(<span class="string">&quot;手机&quot;</span>);</span><br><span class="line">            product.setPrice(<span class="number">1999.0</span>+i);</span><br><span class="line">            product.setImages(<span class="string">&quot;http://www.yinggang/xm.jpg&quot;</span>);</span><br><span class="line">            productList.add(product);</span><br><span class="line">        &#125;</span><br><span class="line">        productDao.saveAll(productList);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//分页查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findByPageable</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//设置排序(排序方式，正序还是倒序，排序的 id)</span></span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> currentPage=<span class="number">0</span>;<span class="comment">//当前页，第一页从 0 开始，1 表示第二页</span></span><br><span class="line">        <span class="keyword">int</span> pageSize = <span class="number">5</span>;<span class="comment">//每页显示多少条</span></span><br><span class="line">        <span class="comment">//设置查询分页</span></span><br><span class="line">        PageRequest pageRequest = PageRequest.of(currentPage, pageSize,sort);</span><br><span class="line">        <span class="comment">//分页查询</span></span><br><span class="line">        Page&lt;Product&gt; productPage = productDao.findAll(pageRequest);</span><br><span class="line">        <span class="keyword">for</span> (Product Product : productPage.getContent()) &#123;</span><br><span class="line">            System.out.println(Product);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-文档搜索"><a href="#11-文档搜索" class="headerlink" title="11.文档搜索"></a>11.文档搜索</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yinggang.es;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.es.Product;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.es.ProductDao;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.QueryBuilders;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.TermQueryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringDataESSearchTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductDao productDao;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * term 查询</span></span><br><span class="line"><span class="comment">     * search(termQueryBuilder) 调用搜索方法，参数查询构建器对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">termQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        TermQueryBuilder termQueryBuilder = QueryBuilders.termQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot; 小米&quot;</span>);</span><br><span class="line">        Iterable&lt;Product&gt; products = productDao.search(termQueryBuilder);</span><br><span class="line">        <span class="keyword">for</span> (Product product : products) &#123;</span><br><span class="line">            System.out.println(product);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * term 查询加分页</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">termQueryByPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> currentPage = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> pageSize = <span class="number">5</span>;</span><br><span class="line">        <span class="comment">//设置查询分页</span></span><br><span class="line">        PageRequest pageRequest = PageRequest.of(currentPage, pageSize);</span><br><span class="line">        </span><br><span class="line">        TermQueryBuilder termQueryBuilder = QueryBuilders.termQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot; 小米&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        Iterable&lt;Product&gt; products = productDao.search(termQueryBuilder, pageRequest);</span><br><span class="line">        <span class="keyword">for</span> (Product product : products) &#123;</span><br><span class="line">            System.out.println(product);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-创建spring项目&quot;&gt;&lt;a href=&quot;#1-创建spring项目&quot; class=&quot;headerlink&quot; title=&quot;1.创建spring项目&quot;&gt;&lt;/a&gt;1.创建spring项目&lt;/h2&gt;&lt;h2 id=&quot;2创建依赖&quot;&gt;&lt;a href=&quot;#2创建依赖&quot; c</summary>
      
    
    
    
    
    <category term="elasticsearch" scheme="http://example.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch原生api</title>
    <link href="http://example.com/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/"/>
    <id>http://example.com/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/</id>
    <published>2021-04-12T03:48:33.000Z</published>
    <updated>2021-04-08T16:55:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、创建springboot项目"><a href="#一、创建springboot项目" class="headerlink" title="一、创建springboot项目"></a>一、创建springboot项目</h2><h3 id="1-创建springboot-web项目"><a href="#1-创建springboot-web项目" class="headerlink" title="1.创建springboot web项目"></a>1.创建springboot web项目</h3><p>这个比较简单，不详细说了。<br>注意本文使用<strong>springboot版本是2.2.0，此本版内部依赖的ES客户端版本是6.8.1</strong>。</p><h3 id="2-在pom文件中增加es依赖"><a href="#2-在pom文件中增加es依赖" class="headerlink" title="2.在pom文件中增加es依赖"></a>2.在pom文件中增加es依赖</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--es--&gt;</span><br><span class="line"> &lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;spring-boot-starter-data-elasticsearch&lt;/artifactId&gt;</span><br><span class="line"> &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>版本号就是跟随springboot版本；</p><p><strong>注意：</strong><br>如果es服务安装的是es7及以上版本，需要springboot版本为2.2.0及以上，不然启动项目会提示failed load nodes…<br>本文服务端安装的是ES7.3.0，支持的客户端版本最低是6.8.0，所以需要springboot依赖的es版本超过6.8.0。</p><p>如果要自定义ES版本号，指定下就行：<br><img src="/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/20200419100934772.png" alt="在这里插入图片描述"><br>但是这里不建议自定义，除非你使用es原生api，而不是springboot封装的api，不然有些会报错。</p><h3 id="3-配置appication-yml"><a href="#3-配置appication-yml" class="headerlink" title="3.配置appication.yml"></a>3.配置appication.yml</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  data:</span><br><span class="line">    elasticsearch:</span><br><span class="line">      cluster-name: myes</span><br><span class="line">      cluster-nodes: <span class="number">192.168</span><span class="number">.32</span><span class="number">.129</span>:<span class="number">9301</span>,<span class="number">192.168</span><span class="number">.32</span><span class="number">.129</span>:<span class="number">9302</span>,<span class="number">192.168</span><span class="number">.32</span><span class="number">.129</span>:<span class="number">9303</span></span><br><span class="line"><span class="number">12345</span></span><br></pre></td></tr></table></figure><ul><li>注意端口号是9300，不是9200；</li><li>cluster-name是集群名称，需要在ES的config配置文件中指定，不然启动项目访问接口时，会报如下错误：<br>None of the configured nodes are available</li></ul><p>注意，在ES7.0版本后，<strong>上述配置已经废弃</strong>，推荐使用基于http的REST通信（<a href="https://docs.spring.io/spring-data/elasticsearch/docs/3.2.6.RELEASE/reference/html/#elasticsearch.clients.transport%EF%BC%89%EF%BC%8C%E5%A6%82%E4%B8%8B%E9%85%8D%E7%BD%AE%EF%BC%9A">https://docs.spring.io/spring-data/elasticsearch/docs/3.2.6.RELEASE/reference/html/#elasticsearch.clients.transport），如下配置：</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">RestHighLevelClient <span class="title">client</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ClientConfiguration clientConfiguration = ClientConfiguration.builder()</span><br><span class="line">                .connectedTo(<span class="string">&quot;192.168.17.101:9201&quot;</span>, <span class="string">&quot;192.168.17.101:9202&quot;</span>, <span class="string">&quot;192.168.17.101:9203&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> RestClients.create(clientConfiguration).rest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">12345678910</span></span><br></pre></td></tr></table></figure><p>注意通信端口也使用9200，这个是http的。</p><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><h3 id="1-编写实体类对象"><a href="#1-编写实体类对象" class="headerlink" title="1.编写实体类对象"></a>1.编写实体类对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Document(indexName = &quot;index_blog&quot;, type = &quot;article&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArticleEntity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Long, store = true)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Text, store = true, analyzer = &quot;ik_smart&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Text, store = true, analyzer = &quot;ik_smart&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，</p><ul><li>@Document注解，指定了es搜索引擎的索引和类型（7.0后不用指定类型）；</li><li>@Field注解，指定字段类型，以及是否存储，还有<strong>分词器类型等；这里注意，在查询时，查询参数分词后是and关系，不是or的关系。</strong></li></ul><p>默认es只有标准分词器，这里使用的是IK分词器，需要单独配置，</p><p><strong>另外，Elasticsearch和关系数据库概念对应关系：</strong></p><table><thead><tr><th>关系数据库 =&gt;</th><th>数据库</th><th>表</th><th>行</th><th>列</th></tr></thead><tbody><tr><td>Elasticsearch =&gt;</td><td>索引(Index)</td><td>类型(type)</td><td>文档(Docments)</td><td>字段(Fields)</td></tr></tbody></table><p><strong>注意：</strong><br>ES7中，已经废弃了type的概念，默认使用_doc作为类型名；也就是一个索引中，只能存在一个类型（一个表），那就是 _toc。<br>创建mapping的时候，不用指定type这一层级，否则报错。</p><h3 id="2-编写dao层接口"><a href="#2-编写dao层接口" class="headerlink" title="2.编写dao层接口"></a>2.编写dao层接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ArticleRepository</span> <span class="keyword">extends</span> <span class="title">ElasticsearchRepository</span>&lt;<span class="title">ArticleEntity</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<br>@Repository注解可以使此接口被spring扫描到，如果不加此注解，也可以手动配置dao层的包扫描路径：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">//添加dao层包扫描</span></span><br><span class="line"><span class="meta">@EnableElasticsearchRepositories(basePackages = &quot;com.example.demo.es.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span> </span>&#123;</span><br><span class="line"><span class="number">1234</span></span><br></pre></td></tr></table></figure><p>ElasticsearchRepository接口，提供了一些增删改查等众多方法，集成它就可以直接使用这些方法了。</p><h3 id="3-编写controller层接口"><a href="#3-编写controller层接口" class="headerlink" title="3.编写controller层接口"></a>3.编写controller层接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/article&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsArticleController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ArticleRepository articleReposiory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/addArticle&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArticleEntity <span class="title">addArticle</span><span class="params">(<span class="meta">@RequestBody</span> ArticleEntity article)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> articleReposiory.save(article);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/findArticle/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Optional&lt;ArticleEntity&gt; <span class="title">findArticle</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> articleReposiory.findById(String.valueOf(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/delete/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteArticle</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span> </span>&#123;</span><br><span class="line">        articleReposiory.deleteById(String.valueOf(id));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三-测试"><a href="#三-测试" class="headerlink" title="三. 测试"></a>三. 测试</h2><p>启动项目，spring就是自动帮助创建代码中指定过的索引，比如本文中写了个ArticleEntity，指定了index为”index_blog”，启动项目后，登陆head插件，发现已经创建好了索引：<br><img src="/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/1.png" alt="在这里插入图片描述"><br>索引信息：<br><img src="/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/2.png" alt="在这里插入图片描述"></p><h3 id="1-添加数据"><a href="#1-添加数据" class="headerlink" title="1.添加数据"></a>1.添加数据</h3><p>使用postman访问下：<br><img src="/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/3.png" alt="在这里插入图片描述"><br>使用head插件看下存进去的数据：<br><img src="/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/4.png" alt="在这里插入图片描述"></p><h3 id="2-删除文档"><a href="#2-删除文档" class="headerlink" title="2.删除文档"></a>2.删除文档</h3><p><img src="/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/5.png" alt="在这里插入图片描述"></p><h3 id="3-修改文档"><a href="#3-修改文档" class="headerlink" title="3.修改文档"></a>3.修改文档</h3><p>ES的修改，过程是先删除后添加，因此修改方法就是添加方法，只要保证id相同就行。</p><h3 id="4-根据id查询数据"><a href="#4-根据id查询数据" class="headerlink" title="4.根据id查询数据"></a>4.根据id查询数据</h3><p><img src="/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/6.png" alt="在这里插入图片描述"></p><h3 id="5-查询所有"><a href="#5-查询所有" class="headerlink" title="5.查询所有"></a>5.查询所有</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">articleReposiory.findAll();</span><br></pre></td></tr></table></figure><h3 id="6-自定义查询"><a href="#6-自定义查询" class="headerlink" title="6.自定义查询"></a>6.自定义查询</h3><p>上述查询，使用的都是articleReposiory自带的方法，实现一些简单查询，但是如果想实现复杂一点查询，比如根据ArticleEntity中的title字段查询：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ArticleRepository</span> <span class="keyword">extends</span> <span class="title">ElasticsearchRepository</span>&lt;<span class="title">ArticleEntity</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function">List&lt;ArticleEntity&gt; <span class="title">findByTitle</span><span class="params">(String title)</span></span>;</span><br><span class="line">    <span class="function">List&lt;ArticleEntity&gt; <span class="title">findByTitleOrContent</span><span class="params">(String title, String content)</span></span>;</span><br><span class="line">    <span class="function">List&lt;ArticleEntity&gt; <span class="title">findByTitleOrContent</span><span class="params">(String title, String content, Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>命名遵循规范就行，idea本身也有提提示，然后就可以使用这个方法进行查询了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">articleReposiory.findByTitle(title);</span><br></pre></td></tr></table></figure><h3 id="7-分页查询"><a href="#7-分页查询" class="headerlink" title="7.分页查询"></a>7.分页查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;ArticleEntity&gt; <span class="title">findByTitleOrContent</span><span class="params">(String title, String content, Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@GetMapping(&quot;/findByTitleOrContentPage&quot;)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> List&lt;ArticleEntity&gt; <span class="title">findByTitleOrContentPage</span><span class="params">(String title, String content, Integer pageNum, Integer pageSize)</span> </span>&#123;</span><br><span class="line">     Pageable pageable = PageRequest.of(pageNum, pageSize);</span><br><span class="line">     <span class="keyword">return</span> articleReposiory.findByTitleOrContent(title, content, pageable);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>使用<strong>Pageable</strong>参数，注意页码从0开始。</p><h3 id="8-使用原生的NativeSearchQuery查询"><a href="#8-使用原生的NativeSearchQuery查询" class="headerlink" title="8.使用原生的NativeSearchQuery查询"></a>8.使用原生的NativeSearchQuery查询</h3><p>使用NativeSearchQuery查询条件，可以做到更灵活更复杂的查询：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> ElasticsearchRestTemplate elasticsearchRestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/findByTitleOrContentPageByTemplate&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;ArticleEntity&gt; <span class="title">findByTitleOrContentPageByTemplate</span><span class="params">(String title, String content, Integer pageNum, Integer pageSize)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    NativeSearchQuery nativeSearchQuery = <span class="keyword">new</span> NativeSearchQueryBuilder()</span><br><span class="line">            .withQuery(QueryBuilders.queryStringQuery(title).defaultField(<span class="string">&quot;title&quot;</span>))</span><br><span class="line">            .withQuery(QueryBuilders.queryStringQuery(content).defaultField(<span class="string">&quot;content&quot;</span>))</span><br><span class="line">            .withPageable(PageRequest.of(pageNum, pageSize))</span><br><span class="line">            .build();</span><br><span class="line">    <span class="keyword">return</span> elasticsearchRestTemplate.queryForList(nativeSearchQuery, ArticleEntity.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在前文中，我们介绍了使用springdata做一些简单查询，但是要实现一些高级的组合等查询，还是需要使用ES的一些原生方法。</p><p>本文介绍一些高级查询用法。需要看环境搭建的，先直接看前文。</p><p><strong>数据准备：</strong><br>es中事先插入了20多条数据，用于测试，然后title和content使用了ik_smart分词：<br><img src="/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/20200505213555715.png" alt="在这里插入图片描述"></p><h2 id="一、ElasticsearchRestTemplate"><a href="#一、ElasticsearchRestTemplate" class="headerlink" title="一、ElasticsearchRestTemplate"></a>一、ElasticsearchRestTemplate</h2><p>ElasticsearchRestTemplate是Spring封装ES客户端的一些原生api模板，方便实现一些查询，和ElasticsearchTemplate一样，但是目前spring推荐使用前者，是一种更高级的REST风格api。</p><p><img src="/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/7.png" alt="在这里插入图片描述"></p><p>废话不多说，先上一个demo，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsArticleControllerTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ElasticsearchRestTemplate elasticsearchRestTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        NativeSearchQuery nativeSearchQuery = <span class="keyword">new</span> NativeSearchQueryBuilder()</span><br><span class="line">                <span class="comment">//查询条件</span></span><br><span class="line">                .withQuery(QueryBuilders.queryStringQuery(<span class="string">&quot;浦东开发开放&quot;</span>).defaultField(<span class="string">&quot;title&quot;</span>))</span><br><span class="line">                <span class="comment">//分页</span></span><br><span class="line">                .withPageable(PageRequest.of(<span class="number">0</span>, <span class="number">5</span>))</span><br><span class="line">                <span class="comment">//排序</span></span><br><span class="line">                .withSort(SortBuilders.fieldSort(<span class="string">&quot;id&quot;</span>).order(SortOrder.DESC))</span><br><span class="line">                <span class="comment">//高亮字段显示</span></span><br><span class="line">                .withHighlightFields(<span class="keyword">new</span> HighlightBuilder.Field(<span class="string">&quot;浦东&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">        List&lt;ArticleEntity&gt; articleEntities = elasticsearchRestTemplate.queryForList(nativeSearchQuery, ArticleEntity.class);</span><br><span class="line">        articleEntities.forEach(item -&gt; System.out.println(item.toString()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方法是根据指定的title模糊查询一个列表，其中用到了几个关键类，说明一下：</p><ul><li>elasticsearchRestTemplate.queryForList是查询一个列表，用的就是ElasticsearchRestTemplate的一个对象实例；</li><li>NativeSearchQuery ：是springdata中的查询条件；</li><li>NativeSearchQueryBuilder ：用于建造一个NativeSearchQuery查询对象；</li><li>QueryBuilders ：设置查询条件，是ES中的类；</li><li>SortBuilders ：设置排序条件；</li><li>HighlightBuilder ：设置高亮显示；</li></ul><p>下面分类具体介绍下。</p><h2 id="二、NativeSearchQuery"><a href="#二、NativeSearchQuery" class="headerlink" title="二、NativeSearchQuery"></a>二、NativeSearchQuery</h2><p>这是一个原生的查询条件类，用来和ES的一些原生查询方法进行搭配，实现一些比较复杂的查询。<br><img src="/2021/04/12/ES%E7%AC%94%E8%AE%B0/es%E7%AC%94%E8%AE%B0%E5%8E%9F%E7%94%9F/8.png" alt="在这里插入图片描述"><br>下面是NativeSearchQuery的一些内部属性，基本上都是ES的一些内部对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询条件，查询的时候，会考虑关键词的匹配度，并按照分值进行排序</span></span><br><span class="line"><span class="keyword">private</span> QueryBuilder query;</span><br><span class="line"><span class="comment">//查询条件，查询的时候，不考虑匹配程度以及排序这些事情</span></span><br><span class="line"><span class="keyword">private</span> QueryBuilder filter;</span><br><span class="line"><span class="comment">//排序条件的builder</span></span><br><span class="line"><span class="keyword">private</span> List&lt;SortBuilder&gt; sorts;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> List&lt;ScriptField&gt; scriptFields = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">private</span> CollapseBuilder collapseBuilder;</span><br><span class="line"><span class="keyword">private</span> List&lt;FacetRequest&gt; facets;</span><br><span class="line"><span class="keyword">private</span> List&lt;AbstractAggregationBuilder&gt; aggregations;</span><br><span class="line"><span class="comment">//高亮显示的builder</span></span><br><span class="line"><span class="keyword">private</span> HighlightBuilder highlightBuilder;</span><br><span class="line"><span class="keyword">private</span> HighlightBuilder.Field[] highlightFields;</span><br><span class="line"><span class="keyword">private</span> List&lt;IndexBoost&gt; indicesBoost;</span><br></pre></td></tr></table></figure><p>上述属性的值，就像demo的写的，通过NativeSearchQueryBuilder进行构建即可，最终作为elasticsearchRestTemplate的查询条件入参。</p><h2 id="三、QueryBuilders"><a href="#三、QueryBuilders" class="headerlink" title="三、QueryBuilders"></a>三、QueryBuilders</h2><p>QueryBuilders是ES中的查询条件构造器。下面结合一些具体的查询场景，分析其常用方法。</p><p>ES中已经有title为 <strong>“总书记关心浦东开发开放”</strong> 的数据；</p><p>ik_smart分词结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;tokens&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;总书记&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">6</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;关心&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">6</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">8</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">2</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;浦东&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">8</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">10</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;开发&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">10</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">12</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">4</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;开放&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">12</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">14</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">5</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-1精确查询"><a href="#3-1精确查询" class="headerlink" title="3.1精确查询"></a>3.1精确查询</h2><p>精确，指的是查询关键字（或者关键字分词后），必须与目标分词结果完全匹配。</p><p>1.指定字符串作为关键词查询，关键词支持分词</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询title字段中，包含 ”开发”、“开放&quot; 这个字符串的document；相当于把&quot;浦东开发开放&quot;分词了，再查询；</span></span><br><span class="line">QueryBuilders.queryStringQuery(<span class="string">&quot;开发开放&quot;</span>).defaultField(<span class="string">&quot;title&quot;</span>);</span><br><span class="line"><span class="comment">//不指定feild，查询范围为所有feild</span></span><br><span class="line">QueryBuilders.queryStringQuery(<span class="string">&quot;青春&quot;</span>);</span><br><span class="line"><span class="comment">//指定多个feild</span></span><br><span class="line">QueryBuilders.queryStringQuery(<span class="string">&quot;青春&quot;</span>).field(<span class="string">&quot;title&quot;</span>).field(<span class="string">&quot;content&quot;</span>);</span><br></pre></td></tr></table></figure><p>2.以关键字“开发开放”，关键字不支持分词</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QueryBuilders.termQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;开发开放&quot;</span>)</span><br><span class="line">QueryBuilders.termsQuery(<span class="string">&quot;fieldName&quot;</span>, <span class="string">&quot;fieldlValue1&quot;</span>,<span class="string">&quot;fieldlValue2...&quot;</span>)</span><br></pre></td></tr></table></figure><p>3.以关键字“开发开放”，关键字支持分词</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QueryBuilders.matchQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;开发开放&quot;</span>)</span><br><span class="line">QueryBuilders.multiMatchQuery(<span class="string">&quot;fieldlValue&quot;</span>, <span class="string">&quot;fieldName1&quot;</span>, <span class="string">&quot;fieldName2&quot;</span>, <span class="string">&quot;fieldName3&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="3-2-模糊查询"><a href="#3-2-模糊查询" class="headerlink" title="3.2 模糊查询"></a>3.2 模糊查询</h2><p>模糊，是指查询关键字与目标关键字可以模糊匹配。</p><p>1.左右模糊查询，其中fuzziness的参数作用是在查询时，es动态的将查询关键词前后增加或者删除一个词，然后进行匹配</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QueryBuilders.fuzzyQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;开发开放&quot;</span>).fuzziness(Fuzziness.ONE)</span><br></pre></td></tr></table></figure><p>2.前缀查询，查询title中以“开发开放”为前缀的document；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QueryBuilders.prefixQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;开发开放&quot;</span>)</span><br></pre></td></tr></table></figure><p>3.通配符查询，支持*和？，？表示单个字符；注意不建议将通配符作为前缀，否则导致查询很慢</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QueryBuilders.wildcardQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;开*放&quot;</span>)</span><br><span class="line">QueryBuilders.wildcardQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;开？放&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong>注意，</strong><br>在分词的情况下，针对fuzzyQuery、prefixQuery、wildcardQuery不支持分词查询，即使有这种doucment数据，也不一定能查出来，因为分词后，不一定有“开发开放”这个词；</p><p><strong>查询总结：</strong></p><table><thead><tr><th></th><th>开发开放</th><th>放</th><th>开</th></tr></thead><tbody><tr><td>queryStringQuery</td><td>目标中含有开发、开放、开发开放的</td><td>无</td><td>无</td></tr><tr><td>matchQuery</td><td>同queryStringQuery</td><td>无</td><td>无</td></tr><tr><td>termQuery</td><td>无结果，因为它不支持分词</td><td>无</td><td>无</td></tr><tr><td>prefixQuery</td><td>无结果，因为它不支持分词</td><td>无</td><td>有，目标分词中以”开“开头的</td></tr><tr><td>fuzzyQuery</td><td>无结果，但是与fuzziness参数有关系</td><td>无</td><td>无</td></tr><tr><td>wildcardQuery</td><td>开发开放*无结果</td><td>开*，有</td><td>放*，无</td></tr></tbody></table><h2 id="3-3-范围查询"><a href="#3-3-范围查询" class="headerlink" title="3.3 范围查询"></a>3.3 范围查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//闭区间查询</span></span><br><span class="line">QueryBuilders.rangeQuery(<span class="string">&quot;fieldName&quot;</span>).from(<span class="string">&quot;fieldValue1&quot;</span>).to(<span class="string">&quot;fieldValue2&quot;</span>);</span><br><span class="line"><span class="comment">//开区间查询，默认是true，也就是包含</span></span><br><span class="line">QueryBuilders.rangeQuery(<span class="string">&quot;fieldName&quot;</span>).from(<span class="string">&quot;fieldValue1&quot;</span>).to(<span class="string">&quot;fieldValue2&quot;</span>).includeUpper(<span class="keyword">false</span>).includeLower(<span class="keyword">false</span>);</span><br><span class="line"><span class="comment">//大于</span></span><br><span class="line">QueryBuilders.rangeQuery(<span class="string">&quot;fieldName&quot;</span>).gt(<span class="string">&quot;fieldValue&quot;</span>);</span><br><span class="line"><span class="comment">//大于等于</span></span><br><span class="line">QueryBuilders.rangeQuery(<span class="string">&quot;fieldName&quot;</span>).gte(<span class="string">&quot;fieldValue&quot;</span>);</span><br><span class="line"><span class="comment">//小于</span></span><br><span class="line">QueryBuilders.rangeQuery(<span class="string">&quot;fieldName&quot;</span>).lt(<span class="string">&quot;fieldValue&quot;</span>);</span><br><span class="line"><span class="comment">//小于等于</span></span><br><span class="line">QueryBuilders.rangeQuery(<span class="string">&quot;fieldName&quot;</span>).lte(<span class="string">&quot;fieldValue&quot;</span>);</span><br><span class="line"><span class="number">123456789101112</span></span><br></pre></td></tr></table></figure><h2 id="3-4-多个关键字组合查询boolQuery"><a href="#3-4-多个关键字组合查询boolQuery" class="headerlink" title="3.4 多个关键字组合查询boolQuery()"></a>3.4 多个关键字组合查询boolQuery()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">QueryBuilders.boolQuery()</span><br><span class="line">QueryBuilders.boolQuery().must();<span class="comment">//文档必须完全匹配条件，相当于and</span></span><br><span class="line">QueryBuilders.boolQuery().mustNot();<span class="comment">//文档必须不匹配条件，相当于not</span></span><br><span class="line">QueryBuilders.boolQuery().should();<span class="comment">//至少满足一个条件，这个文档就符合should，相当于or</span></span><br></pre></td></tr></table></figure><p>具体demo如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBoolQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   NativeSearchQuery nativeSearchQuery = <span class="keyword">new</span> NativeSearchQueryBuilder()</span><br><span class="line">            .withQuery(QueryBuilders.boolQuery()</span><br><span class="line">                    .should(QueryBuilders.termQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;开发&quot;</span>))</span><br><span class="line">                    .should(QueryBuilders.termQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;青春&quot;</span>))</span><br><span class="line">                    .mustNot(QueryBuilders.termQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;潮头&quot;</span>))</span><br><span class="line">            )</span><br><span class="line">            .withSort(SortBuilders.fieldSort(<span class="string">&quot;id&quot;</span>).order(SortOrder.DESC))</span><br><span class="line">            .withPageable(PageRequest.of(<span class="number">0</span>, <span class="number">50</span>))</span><br><span class="line">            .build();</span><br><span class="line">    List&lt;ArticleEntity&gt; articleEntities = elasticsearchRestTemplate.queryForList(nativeSearchQuery, ArticleEntity.class);</span><br><span class="line">    articleEntities.forEach(item -&gt; System.out.println(item.toString()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上是查询title分词中，包含“开发”或者“青春”，但不能包含“潮头”的document；<br>也可以多个must组合。</p><h2 id="四、SortBuilders排序"><a href="#四、SortBuilders排序" class="headerlink" title="四、SortBuilders排序"></a>四、SortBuilders排序</h2><p>上述demo中，我们使用了排序条件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按照id字段降序</span></span><br><span class="line">.withSort(SortBuilders.fieldSort(<span class="string">&quot;id&quot;</span>).order(SortOrder.DESC))</span><br></pre></td></tr></table></figure><p>注意排序时，有个坑，就是在以id排序时，比如降序，结果可能并不是我们想要的。因为根据id排序，es实际上会根据_id进行排序，但是_id是string类型的，排序后的结果会与整型不一致。</p><p>建议：<br>在创建es的索引mapping时，将es的id和业务的id分开，比如业务id叫做myId：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@Field(type = FieldType.Long, store = true)</span></span><br><span class="line"><span class="keyword">private</span> Long myId;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Field(type = FieldType.Text, store = true, analyzer = &quot;ik_smart&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Field(type = FieldType.Text, store = true, analyzer = &quot;ik_smart&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String content;</span><br><span class="line"><span class="number">123456789</span></span><br></pre></td></tr></table></figure><p>这样，后续排序可以使用myId进行排序。</p><h2 id="五、分页"><a href="#五、分页" class="headerlink" title="五、分页"></a>五、分页</h2><p>使用如下方式分页：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    NativeSearchQuery nativeSearchQuery = <span class="keyword">new</span> NativeSearchQueryBuilder()</span><br><span class="line">            .withQuery(QueryBuilders.matchQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;青春&quot;</span>))</span><br><span class="line">            .withSort(SortBuilders.fieldSort(<span class="string">&quot;myId&quot;</span>).order(SortOrder.DESC))</span><br><span class="line">            .withPageable(PageRequest.of(<span class="number">0</span>, <span class="number">50</span>))</span><br><span class="line">            .build();</span><br><span class="line">    AggregatedPage&lt;ArticleEntity&gt; page = elasticsearchRestTemplate.queryForPage(nativeSearchQuery, ArticleEntity.class);</span><br><span class="line">    List&lt;ArticleEntity&gt; articleEntities = page.getContent();</span><br><span class="line">    articleEntities.forEach(item -&gt; System.out.println(item.toString()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，如果不指定分页参数，es默认只显示10条。</p><h2 id="六、高亮显示"><a href="#六、高亮显示" class="headerlink" title="六、高亮显示"></a>六、高亮显示</h2><p>查询title字段中的关键字，并高亮显示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String preTag = <span class="string">&quot;&lt;font color=&#x27;#dd4b39&#x27;&gt;&quot;</span>;</span><br><span class="line">    String postTag = <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    NativeSearchQuery nativeSearchQuery = <span class="keyword">new</span> NativeSearchQueryBuilder()</span><br><span class="line">            .withQuery(QueryBuilders.matchQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;开发&quot;</span>))</span><br><span class="line">            .withPageable(PageRequest.of(<span class="number">0</span>, <span class="number">50</span>))</span><br><span class="line">            .withSort(SortBuilders.fieldSort(<span class="string">&quot;id&quot;</span>).order(SortOrder.DESC))</span><br><span class="line">            .withHighlightFields(<span class="keyword">new</span> HighlightBuilder.Field(<span class="string">&quot;title&quot;</span>).preTags(preTag).postTags(postTag))</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    AggregatedPage&lt;ArticleEntity&gt; page = elasticsearchRestTemplate.queryForPage(nativeSearchQuery, ArticleEntity.class,</span><br><span class="line">            <span class="keyword">new</span> SearchResultMapper() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> &lt;T&gt; <span class="function">AggregatedPage&lt;T&gt; <span class="title">mapResults</span><span class="params">(SearchResponse response, Class&lt;T&gt; clazz, Pageable pageable)</span> </span>&#123;</span><br><span class="line">                    List&lt;ArticleEntity&gt; chunk = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                    <span class="keyword">for</span> (SearchHit searchHit : response.getHits()) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (response.getHits().getHits().length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        ArticleEntity article = <span class="keyword">new</span> ArticleEntity();</span><br><span class="line">                        article.setMyId(Long.valueOf(searchHit.getSourceAsMap().get(<span class="string">&quot;id&quot;</span>).toString()));</span><br><span class="line">                        article.setContent(searchHit.getSourceAsMap().get(<span class="string">&quot;content&quot;</span>).toString());</span><br><span class="line">                        HighlightField title = searchHit.getHighlightFields().get(<span class="string">&quot;title&quot;</span>);</span><br><span class="line">                        <span class="keyword">if</span> (title != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            article.setTitle(title.fragments()[<span class="number">0</span>].toString());</span><br><span class="line">                        &#125;</span><br><span class="line">                        chunk.add(article);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (chunk.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">new</span> AggregatedPageImpl&lt;&gt;((List&lt;T&gt;) chunk);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">mapSearchHit</span><span class="params">(SearchHit searchHit, Class&lt;T&gt; type)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    List&lt;ArticleEntity&gt; articleEntities = page.getContent();</span><br><span class="line">    articleEntities.forEach(item -&gt; System.out.println(item.toString()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title&#x3D;勇立潮头——总书记关心浦东&lt;font color&#x3D;&#39;#dd4b39&#39;&gt;开发&lt;&#x2F;font&gt;开放40, content&#x3D;外交部：望</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、创建springboot项目&quot;&gt;&lt;a href=&quot;#一、创建springboot项目&quot; class=&quot;headerlink&quot; title=&quot;一、创建springboot项目&quot;&gt;&lt;/a&gt;一、创建springboot项目&lt;/h2&gt;&lt;h3 id=&quot;1-创建sprin</summary>
      
    
    
    
    
    <category term="elasticsearch" scheme="http://example.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>docker安装mysql和nacos</title>
    <link href="http://example.com/2021/04/10/mysql+nacos%E5%AE%89%E8%A3%85/docker%E5%AE%89%E8%A3%85mysql%E5%92%8Cnacos/"/>
    <id>http://example.com/2021/04/10/mysql+nacos%E5%AE%89%E8%A3%85/docker%E5%AE%89%E8%A3%85mysql%E5%92%8Cnacos/</id>
    <published>2021-04-10T03:48:33.000Z</published>
    <updated>2021-04-10T11:42:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>/摘</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker 环境</span><br><span class="line">MySQL 5.7 (官方镜像不支持mysql8)</span><br><span class="line">nacos</span><br></pre></td></tr></table></figure><h2 id="docker安装MySQL"><a href="#docker安装MySQL" class="headerlink" title="docker安装MySQL"></a>docker安装MySQL</h2><ul><li>创建自定义网络（用于容器通讯）</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create common<span class="literal">-network</span></span><br></pre></td></tr></table></figure><ul><li>查看网络</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="/2021/04/10/mysql+nacos%E5%AE%89%E8%A3%85/docker%E5%AE%89%E8%A3%85mysql%E5%92%8Cnacos/2020041119590820.png" alt="效果"></p><ul><li>创建挂载文件夹</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//mysql配置文件 </span><br><span class="line">mkdir <span class="literal">-p</span> /<span class="keyword">data</span>/mysql/conf</span><br><span class="line">//mysql数据文件路径 </span><br><span class="line">mkdir –p /<span class="keyword">data</span>/mysql/<span class="keyword">data</span></span><br><span class="line">//日志文件路径</span><br><span class="line">mkdir <span class="literal">-p</span> /<span class="keyword">data</span>/mysql/logs </span><br></pre></td></tr></table></figure><ul><li>拉取镜像并启动</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run <span class="literal">-p</span> <span class="number">3306</span>:<span class="number">3306</span> -<span class="literal">-name</span> mysql <span class="literal">-d</span> \</span><br><span class="line">-<span class="literal">-restart</span>=always \</span><br><span class="line">-<span class="literal">-network</span> common<span class="literal">-network</span> \</span><br><span class="line"><span class="literal">-v</span> /<span class="keyword">data</span>/mysql/conf:/etc/mysql/conf.d \</span><br><span class="line"><span class="literal">-v</span> /<span class="keyword">data</span>/mysql/logs:/logs \</span><br><span class="line"><span class="literal">-v</span> /<span class="keyword">data</span>/mysql/<span class="keyword">data</span>:/<span class="keyword">data</span> \</span><br><span class="line"><span class="literal">-e</span> MYSQL_ROOT_PASSWORD=admin \</span><br><span class="line">mysql:<span class="number">5.7</span> </span><br></pre></td></tr></table></figure><h2 id="docker-安装nacos"><a href="#docker-安装nacos" class="headerlink" title="docker 安装nacos"></a>docker 安装nacos</h2><ul><li>拉取镜像</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//查询nacos镜像</span><br><span class="line">docker search nacos</span><br><span class="line">//拉取镜像</span><br><span class="line">docker pull nacos/nacos<span class="literal">-server</span></span><br><span class="line">//查看镜像</span><br><span class="line">docker images</span><br></pre></td></tr></table></figure><ul><li>启动nacos容器</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -<span class="literal">-network</span> common<span class="literal">-network</span> -<span class="literal">-env</span> MODE=standalone -<span class="literal">-name</span> nacos <span class="literal">-d</span> <span class="literal">-p</span> <span class="number">8848</span>:<span class="number">8848</span> nacos/nacos<span class="literal">-server</span></span><br></pre></td></tr></table></figure><ul><li>查看启动的容器</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">ps</span></span><br></pre></td></tr></table></figure><p><img src="/2021/04/10/mysql+nacos%E5%AE%89%E8%A3%85/docker%E5%AE%89%E8%A3%85mysql%E5%92%8Cnacos/20200411201146711.jpg" alt="在这里插入图片描述"></p><h2 id="nacos-配置连接数据库"><a href="#nacos-配置连接数据库" class="headerlink" title="nacos 配置连接数据库"></a>nacos 配置连接数据库</h2><ul><li>查看自定义网络中各容器ip</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//查看网络</span><br><span class="line">docker network <span class="built_in">ls</span></span><br><span class="line">//查看网络容器</span><br><span class="line">docker network inspect common<span class="literal">-network</span></span><br></pre></td></tr></table></figure><p><img src="/2021/04/10/mysql+nacos%E5%AE%89%E8%A3%85/docker%E5%AE%89%E8%A3%85mysql%E5%92%8Cnacos/2020041120161589.png" alt="在这里插入图片描述"><br><img src="/2021/04/10/mysql+nacos%E5%AE%89%E8%A3%85/docker%E5%AE%89%E8%A3%85mysql%E5%92%8Cnacos/aa.png" alt="在这里插入图片描述"></p><ul><li>进入nacos容器修改配置</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 进入容器  </span><br><span class="line">docker exec <span class="literal">-it</span> nacos bash</span><br><span class="line">// 修改容器配置</span><br><span class="line"><span class="built_in">cd</span> conf</span><br><span class="line">vi application.properties</span><br></pre></td></tr></table></figure><p><img src="/2021/04/10/mysql+nacos%E5%AE%89%E8%A3%85/docker%E5%AE%89%E8%A3%85mysql%E5%92%8Cnacos/ad.png" alt="在这里插入图片描述"></p><ul><li>创建数据库表（脚本地址）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/alibaba/nacos/blob/develop/distribution/conf/nacos-mysql.sql </span><br></pre></td></tr></table></figure><ul><li>重启容器</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart nacos</span><br></pre></td></tr></table></figure><ul><li>nacos管理平台（新增配置 ，然后可在数据库查看）</li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http://ip:8848/nacos/index.html</span></span><br><span class="line"><span class="attribute">nacos/nacos(用户名密码)</span></span><br></pre></td></tr></table></figure><p><img src="/2021/04/10/mysql+nacos%E5%AE%89%E8%A3%85/docker%E5%AE%89%E8%A3%85mysql%E5%92%8Cnacos/dd.png" alt="在这里插入图片描述"><br><img src="/2021/04/10/mysql+nacos%E5%AE%89%E8%A3%85/docker%E5%AE%89%E8%A3%85mysql%E5%92%8Cnacos/add.png" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;/摘&lt;/p&gt;
&lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g</summary>
      
    
    
    
    
    <category term="nacos" scheme="http://example.com/tags/nacos/"/>
    
  </entry>
  
  <entry>
    <title>狂神说笔记</title>
    <link href="http://example.com/2021/04/07/%E7%8B%82%E7%A5%9E%E8%AF%B4/kuang/"/>
    <id>http://example.com/2021/04/07/%E7%8B%82%E7%A5%9E%E8%AF%B4/kuang/</id>
    <published>2021-04-07T04:48:33.000Z</published>
    <updated>2021-04-07T18:53:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>狂神说笔记</p><p>/摘 </p><p><a href="../../../../../../file/1%E3%80%81JavaSE%EF%BC%9AJava%E5%85%A5%E9%97%A8.pdf">1、JavaSE：Java入门.pdf</a> </p><p> <a href="../../../../../../file/2%E3%80%81JavaSE%EF%BC%9A%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.pdf">2、JavaSE：基础语法.pdf</a> </p><p> <a href="../../../../../../file/3%E3%80%81JavaSE%EF%BC%9A%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.pdf">3、JavaSE：流程控制.pdf</a> </p><p> <a href="../../../../../../file/4%E3%80%81JavaSE%EF%BC%9A%E6%96%B9%E6%B3%95.pdf">4、JavaSE：方法.pdf</a> </p><p> <a href="../../../../../../file/5%E3%80%81JavaSE%EF%BC%9A%E6%95%B0%E7%BB%84.pdf">5、JavaSE：数组.pdf</a> </p><p> <a href="../../../../../../file/6%E3%80%81JavaSE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.pdf">6、JavaSE：面向对象.pdf</a> </p><p> <a href="../../../../../../file/7%E3%80%81JavaSE%EF%BC%9A%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6.pdf">7、JavaSE：异常机制.pdf</a> </p><p> <a href="../../../../../../file/8%E3%80%81JavaSE%EF%BC%9A%E5%B8%B8%E7%94%A8%E7%B1%BB.pdf">8、JavaSE：常用类.pdf</a> </p><p> <a href="../../../../../../file/9%E3%80%81JavaSE%EF%BC%9A%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6.pdf">9、JavaSE：集合框架.pdf</a> </p><p> <a href="../../../../../../file/10%E3%80%81JavaSE%EF%BC%9AIO%E6%B5%81.pdf">10、JavaSE：IO流.pdf</a> </p><p> <a href="../../../../../../file/11%E3%80%81JavaSE%EF%BC%9A%E5%A4%9A%E7%BA%BF%E7%A8%8B.pdf">11、JavaSE：多线程.pdf</a> </p><p> <a href="../../../../../../file/12%E3%80%81JavaSE%EF%BC%9A%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B.pdf">12、JavaSE：网络编程.pdf</a> </p><p> <a href="../../../../../../file/13%E3%80%81JavaSE%EF%BC%9AGui%E7%BC%96%E7%A8%8B.pdf">13、JavaSE：Gui编程.pdf</a> </p><p> <a href="../../../../../../file/14%E3%80%81JavaSE%EF%BC%9A%E6%B3%A8%E8%A7%A3%E5%92%8C%E5%8F%8D%E5%B0%84.pdf">14、JavaSE：注解和反射.pdf</a> </p><p> <a href="../../../../../../file/15%E3%80%81MySQL%E5%92%8CJDBC.pdf">15、MySQL和JDBC.pdf</a> </p><p> <a href="../../../../../../file/16%E3%80%81%E5%89%8D%E7%AB%AF%EF%BC%9AHtml5.pdf">16、前端：Html5.pdf</a> </p><p> <a href="../../../../../../file/17%E3%80%81%E5%89%8D%E7%AB%AF%EF%BC%9ACSS3.pdf">17、前端：CSS3.pdf</a> </p><p> <a href="../../../../../../file/18%E3%80%81%E5%89%8D%E7%AB%AF%EF%BC%9AJavaScript%E3%80%81jQuery.pdf">18、前端：JavaScript、jQuery.pdf</a> </p><p> <a href="../../../../../../file/19%E3%80%81JavaWeb.pdf">19、JavaWeb.pdf</a> </p><p> <a href="../../../../../../file/20%E3%80%81MyBatis.pdf">20、MyBatis.pdf</a> </p><p> <a href="../../../../../../file/21%E3%80%81Spring.pdf">21、Spring.pdf</a> </p><p> <a href="../../../../../../file/22%E3%80%81SpringMVC.pdf">22、SpringMVC.pdf</a> </p><p> <a href="../../../../../../file/23%E3%80%81%E5%A4%A7%E5%89%8D%E7%AB%AF%E4%B8%B2%E8%AE%B2.pdf">23、大前端串讲.pdf</a> </p><p> <a href="../../../../../../file/24%E3%80%81Vue%E7%B2%BE%E8%AE%B2.pdf">24、Vue精讲.pdf</a> </p><p> <a href="../../../../../../file/25%E3%80%81SpringBoot%E5%85%A5%E9%97%A8%E5%8F%8A%E5%8E%9F%E7%90%86.pdf">25、SpringBoot入门及原理.pdf</a> </p><p> <a href="../../../../../../file/26%E3%80%81SpringBoot%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93.pdf">26、SpringBoot操作数据库.pdf</a> </p><p> <a href="../../../../../../file/27%E3%80%81SpringBoot%E5%BC%80%E5%8F%91%E5%8D%95%E4%BD%93%E5%BA%94%E7%94%A8.pdf">27、SpringBoot开发单体应用.pdf</a> </p><p> <a href="../../../../../../file/28%E3%80%81SpringBootWeb%E5%BC%80%E5%8F%91%E6%8F%90%E5%8D%87(Swagger).pdf">28、SpringBootWeb开发提升(Swagger).pdf</a> </p><p> <a href="../../../../../../file/29%E3%80%81SpringSecurity%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.pdf">29、SpringSecurity权限控制.pdf</a> </p><p> <a href="../../../../../../file/30%E3%80%81%E6%95%B4%E5%90%88Dubbo+Zookeeper.pdf">30、整合Dubbo+Zookeeper.pdf</a> </p><p> <a href="../../../../../../file/31%E3%80%81Shiro.pdf">31、Shiro.pdf</a> </p><p> <a href="../../../../../../file/32%E3%80%81SpringCloudNetflix-H%E7%89%88.pdf">32、SpringCloudNetflix-H版.pdf</a> </p><p> <a href="../../../../../../file/33%E3%80%81JVM%E6%8E%A2%E7%A9%B6.pdf">33、JVM探究.pdf</a> </p><p> <a href="../../../../../../file/34%E3%80%81JUC%E7%B2%BE%E8%AE%B2.pdf">34、JUC精讲.pdf</a> </p><p> <a href="../../../../../../file/35%E3%80%81Git.pdf">35、Git.pdf</a> </p><p> <a href="../../../../../../file/36%E3%80%81Linux%E4%BD%BF%E7%94%A8.pdf">36、Linux使用.pdf</a> </p><p> <a href="../../../../../../file/37%E3%80%81Redis%E7%B2%BE%E8%AE%B2.pdf">37、Redis精讲.pdf</a> </p><p> <a href="../../../../../../file/38%E3%80%81ElasticSearch.pdf">38、ElasticSearch.pdf</a> </p><p> <a href="../../../../../../file/39%E3%80%81ActiveMQ.pdf">39、ActiveMQ.pdf</a> </p><p> <a href="../../../../../../file/40%E3%80%81Docker%E4%B8%8A.pdf">40、Docker上.pdf</a> </p><p> <a href="../../../../../../file/41%E3%80%81Docker%E4%B8%8B.pdf">41、Docker下.pdf</a> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;狂神说笔记&lt;/p&gt;
&lt;p&gt;/摘 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;../../../../../../file/1%E3%80%81JavaSE%EF%BC%9AJava%E5%85%A5%E9%97%A8.pdf&quot;&gt;1、JavaSE：Java入门.pdf&lt;/a&gt; &lt;/p&gt;</summary>
      
    
    
    
    
    <category term="狂神说笔记" scheme="http://example.com/tags/%E7%8B%82%E7%A5%9E%E8%AF%B4%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>docker 安装es</title>
    <link href="http://example.com/2021/03/21/ES%E7%AC%94%E8%AE%B0/docker%20%E5%AE%89%E8%A3%85es/"/>
    <id>http://example.com/2021/03/21/ES%E7%AC%94%E8%AE%B0/docker%20%E5%AE%89%E8%A3%85es/</id>
    <published>2021-03-21T07:43:13.000Z</published>
    <updated>2021-04-08T14:57:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker-安装es"><a href="#docker-安装es" class="headerlink" title="docker 安装es"></a>docker 安装es</h1><p>docker pull docker.elastic.co/elasticsearch/elasticsearch:5.6.8</p><p> sudo sysctl -w vm.max_map_count=262144</p><p>docker run -e ES_JAVA_OPTS=”-Xms512m -Xmx512m” -d -p 9200:9200 -p 9300:9300 –name ES02 6d65982e47c9</p><p>sysctl -a | grep vm.max_map_count vm.max_map_count = 65536</p><p>#下载镜像</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull docker.elastic.co/elasticsearch/elasticsearch:<span class="number">7.8</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p>#创建容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot; docker.elastic.co/elasticsearch/elasticsearch:7.8.0</span><br></pre></td></tr></table></figure><p>#官网地址<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;docker-安装es&quot;&gt;&lt;a href=&quot;#docker-安装es&quot; class=&quot;headerlink&quot; title=&quot;docker 安装es&quot;&gt;&lt;/a&gt;docker 安装es&lt;/h1&gt;&lt;p&gt;docker pull docker.elastic.co/elas</summary>
      
    
    
    
    
    <category term="elasticsearch" scheme="http://example.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>java开发常用工具</title>
    <link href="http://example.com/2021/01/24/java%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>http://example.com/2021/01/24/java%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</id>
    <published>2021-01-24T10:48:33.000Z</published>
    <updated>2021-03-02T11:24:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-IDEA2020安装破解"><a href="#1-IDEA2020安装破解" class="headerlink" title="1.IDEA2020安装破解"></a>1.IDEA2020安装破解</h1><p>java环境变量配置</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">变量名：JAVA_HOME</span><br><span class="line">变量值：D:\Program Files\Java\jdk-12.0.2        // 要根据自己的实际路径配置</span><br><span class="line">变量名：CLASSPATH</span><br><span class="line">变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;         //记得前面有个&quot;.&quot;</span><br><span class="line">变量名：Path</span><br><span class="line">变量值：%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</span><br></pre></td></tr></table></figure><p>IDEA安装包与破解文件</p><p>链接：<a href="https://pan.baidu.com/s/1NaI1KPrFV34JkSKneWXsIA">https://pan.baidu.com/s/1NaI1KPrFV34JkSKneWXsIA</a><br>提取码：9azt </p><h1 id="2-Navicat安装"><a href="#2-Navicat安装" class="headerlink" title="2.Navicat安装"></a>2.Navicat安装</h1><p>链接：<a href="https://pan.baidu.com/s/1c8xs68rulmjfJ5fhZovr9Q">https://pan.baidu.com/s/1c8xs68rulmjfJ5fhZovr9Q</a><br>提取码：g6v4 </p><h1 id="3-谷歌浏览器Postman插件"><a href="#3-谷歌浏览器Postman插件" class="headerlink" title="3.谷歌浏览器Postman插件"></a>3.谷歌浏览器Postman插件</h1><p>链接：<a href="https://pan.baidu.com/s/1sesy7sAOZM3g00U8YNa14Q">https://pan.baidu.com/s/1sesy7sAOZM3g00U8YNa14Q</a><br>提取码：9u64 </p><h1 id="4-go访问"><a href="#4-go访问" class="headerlink" title="4.go访问"></a>4.go访问</h1><p>链接：<a href="https://pan.baidu.com/s/1WAaEsoHTJxeTa5mYK-urXw">https://pan.baidu.com/s/1WAaEsoHTJxeTa5mYK-urXw</a><br>提取码：uapr </p><h1 id="5-WebStorm-2019-3-1-x64"><a href="#5-WebStorm-2019-3-1-x64" class="headerlink" title="5.WebStorm 2019.3.1 x64"></a>5.WebStorm 2019.3.1 x64</h1><p>链接：<a href="https://pan.baidu.com/s/1yri_0JCeuUfzivJzYTDaYQ">https://pan.baidu.com/s/1yri_0JCeuUfzivJzYTDaYQ</a><br>提取码：cdpg </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-IDEA2020安装破解&quot;&gt;&lt;a href=&quot;#1-IDEA2020安装破解&quot; class=&quot;headerlink&quot; title=&quot;1.IDEA2020安装破解&quot;&gt;&lt;/a&gt;1.IDEA2020安装破解&lt;/h1&gt;&lt;p&gt;java环境变量配置&lt;/p&gt;
&lt;figure</summary>
      
    
    
    
    
    <category term="工具安装" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>idea插件</title>
    <link href="http://example.com/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/"/>
    <id>http://example.com/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/</id>
    <published>2021-01-23T09:49:38.000Z</published>
    <updated>2021-03-02T11:33:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-自动导包"><a href="#1-自动导包" class="headerlink" title="1.自动导包"></a>1.自动导包</h1><p>下面是Auto Import设置步骤详解。</p><p>Settings→Editor→General→Auto Import<br>然后勾选Add unambiguous imports on the fly以及Optimize imports on the fly</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/1337265-20180413112619423-1610499505.png" alt="img"></p><p>Add unambiguous imports on the fly：快速添加明确的导入。</p><p>Optimize imports on the fly：快速优化导入，优化的意思即自动帮助删除无用的导入。</p><h1 id="2-IntelliJ-Idea设置-自定义的-类代码注释模板"><a href="#2-IntelliJ-Idea设置-自定义的-类代码注释模板" class="headerlink" title="2.IntelliJ Idea设置(自定义的)类代码注释模板"></a>2.IntelliJ Idea设置(自定义的)类代码注释模板</h1><p> 用IntelliJ Idea开发的时候代码没有注释或者注释不如人意，我们就自定义一下类代码的注释。</p><p>​    一、打开Settings – Editor – Code Style – File and Code Templates</p><p>​        <img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/SouthEast.png" alt="img"></p><p>​     二、注释模板内容</p><p>​       </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* $&#123;DESCRIPTION&#125;</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> 名字</span></span><br><span class="line"><span class="comment">* <span class="doctag">@create</span> $&#123;YEAR&#125;-$&#123;MONTH&#125;-$&#123;DAY&#125; $&#123;TIME&#125;</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>​     三、效果</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/70.png" alt="img"></p><h1 id="3-取消Idea开始界面打开默认项目配置"><a href="#3-取消Idea开始界面打开默认项目配置" class="headerlink" title="3.取消Idea开始界面打开默认项目配置"></a>3.取消Idea开始界面打开默认项目配置</h1><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>​      idea是非常强大的开发集成工具，打开idea软件默认会打开最近一次的项目工程，有时候我们并不需要开发上次的工程，而需要打开另外一个工程，这样默认给打开的工程需要关闭切换到新的工程。那么可不可以取消idea默认打开工程呢，当然是可以的。下面就来介绍下如何取消设置。</p><h2 id="二、步骤"><a href="#二、步骤" class="headerlink" title="二、步骤"></a>二、步骤</h2><p>​      1、打开idea软件，这个时候没有设置之前，会默认打开上次的项目工程。选择菜单File&gt;Settings进入设置页面。</p><p>​      2、左侧树形菜单，选择Appearance &amp; Behavior&gt;System Settings，进入系统设置页面。</p><p>​      3、在Startup/Shutdown栏目处，去掉默认的勾选Reopen last project on startup（在启动的时候打开上次的项目），去掉勾选之后，点击确认。</p><p>​         <img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/SouthEast11.png" alt="img"></p><p>​       4、关闭idea软件后，再次打开idea软件，这个时候没有直接进入项目工程，而是进入了欢迎页面，在欢迎页面左侧列表是历史打开的项目工程，可以选择一个打开，右侧可以创建新的工程或导入新的工程等</p><p>​         <img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/SouthEast12.png" alt="img"></p><p>​       5、在刚刚关闭idea软件的时候，你可能会注意到一个提示框，是确认关闭的提示窗口，防止误操作关闭了当前的工作空间。</p><p>​         <img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/SouthEast13.png" alt="img"></p><p>​       6、 可能某些人不经意勾选了Do not ask me again。结果每次关闭都不会有确认提示了。一不小心就把当前的窗口误操作关闭了。这个开关就在上面设置的那个取消打开默认工程的配置的下方。将Confirm application exit选项再次勾选上。这个时候关闭确认提示就再次开启了。</p><p>​         <img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/SouthEast14.png" alt="img"></p><h1 id="4-IDEA使用—代码如何在方法之间加入一条分割线"><a href="#4-IDEA使用—代码如何在方法之间加入一条分割线" class="headerlink" title="4.IDEA使用—代码如何在方法之间加入一条分割线"></a>4.IDEA使用—代码如何在方法之间加入一条分割线</h1><p>位置：【File】→【Settings】→【Editor】→【General】→【Appearance】→【Show method separators】<br>把【Show method separators】打上勾即可。<br><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa15.png" alt="在这里插入图片描述"></p><h1 id="5-IDEA查看源码返回上一级快捷键"><a href="#5-IDEA查看源码返回上一级快捷键" class="headerlink" title="5.IDEA查看源码返回上一级快捷键"></a>5.IDEA查看源码返回上一级快捷键</h1><p>快捷键 alt + 方向左键 放回上一级</p><h1 id="6-Lombok插件及注解"><a href="#6-Lombok插件及注解" class="headerlink" title="6.Lombok插件及注解"></a>6.Lombok插件及注解</h1><p>安装</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/C33FG37Gk4.png" alt="mark"></p><p>依赖</p><p>在自己的项目里添加 lombok 的编译支持，在 pom 文件里面添加 dependency</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.16.18&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h3 id><a href="#" class="headerlink" title></a></h3><h2 id="Data"><a href="#Data" class="headerlink" title="@Data"></a><strong>@Data</strong></h2><p>注解在 <strong>类</strong> 上；提供类所有属性的 get 和 set 方法，此外还提供了equals、canEqual、hashCode、toString 方法。</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/mHj1eak6fJ.png" alt="mark"></p><h2 id="Setter"><a href="#Setter" class="headerlink" title="@Setter"></a><strong>@Setter</strong></h2><p>注解在 <strong>属性</strong> 上；为单个属性提供 set 方法; 注解在 <strong>类</strong> 上，为该类所有的属性提供 set 方法， 都提供默认构造方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/lkkff2b6Dc.png" alt="mark">]</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/J9mC8FGfc0.png" alt="mark">]</p><h2 id="Getter"><a href="#Getter" class="headerlink" title="@Getter"></a><strong>@Getter</strong></h2><p>注解在 <strong>属性</strong> 上；为单个属性提供 get 方法; 注解在 <strong>类</strong> 上，为该类所有的属性提供 get 方法，都提供默认构造方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/d0F5h97J5f.png" alt="mark">]</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/K0m81cFd6g.png" alt="mark">]</p><h2 id="Slf4j"><a href="#Slf4j" class="headerlink" title="@Slf4j"></a><strong>@Slf4j</strong></h2><p>注解在 <strong>类</strong> 上；为类提供一个 属性名为 log 的日志对象，提供默认构造方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/BChd89Cbh5.png" alt="mark">]</p><h2 id="AllArgsConstructor"><a href="#AllArgsConstructor" class="headerlink" title="@AllArgsConstructor"></a><strong>@AllArgsConstructor</strong></h2><p>注解在 <strong>类</strong> 上；为类提供一个全参的构造方法，加了这个注解后，类中不提供默认构造方法了。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/4iji9AJ0fE.png" alt="mark">]</p><h2 id="NoArgsConstructor"><a href="#NoArgsConstructor" class="headerlink" title="@NoArgsConstructor"></a><strong>@NoArgsConstructor</strong></h2><p>注解在 <strong>类</strong> 上；为类提供一个无参的构造方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/JcdfmhDAaB.png" alt="mark">]</p><h2 id="EqualsAndHashCode"><a href="#EqualsAndHashCode" class="headerlink" title="@EqualsAndHashCode"></a><strong>@EqualsAndHashCode</strong></h2><p>注解在 <strong>类</strong> 上, 可以生成 equals、canEqual、hashCode 方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/CKHe7EICGd.png" alt="mark">]</p><h2 id="NonNull"><a href="#NonNull" class="headerlink" title="@NonNull"></a><strong>@NonNull</strong></h2><p>注解在 <strong>属性</strong> 上，会自动产生一个关于此参数的非空检查，如果参数为空，则抛出一个空指针异常，也会有一个默认的无参构造方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/g6Lh1eh1jm.png" alt="mark">]</p><h2 id="Cleanup"><a href="#Cleanup" class="headerlink" title="@Cleanup"></a><strong>@Cleanup</strong></h2><p>这个注解用在 <strong>变量</strong> 前面，可以保证此变量代表的资源会被自动关闭，默认是调用资源的 close() 方法，如果该资源有其它关闭方法，可使用 @Cleanup(“methodName”) 来指定要调用的方法，也会生成默认的构造方法</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/Ba1bDkKb9J.png" alt="mark">]</p><h2 id="ToString"><a href="#ToString" class="headerlink" title="@ToString"></a><strong>@ToString</strong></h2><p>这个注解用在 <strong>类</strong> 上，可以生成所有参数的 toString 方法，还会生成默认的构造方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/7LjglDeH8e.png" alt="mark">]</p><h2 id="RequiredArgsConstructor"><a href="#RequiredArgsConstructor" class="headerlink" title="@RequiredArgsConstructor"></a><strong>@RequiredArgsConstructor</strong></h2><p>这个注解用在 <strong>类</strong> 上，使用类中所有带有 @NonNull 注解的或者带有 final 修饰的成员变量生成对应的构造方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/CBgAF4ei8m.png" alt="mark">]</p><h2 id="Value"><a href="#Value" class="headerlink" title="@Value"></a><strong>@Value</strong></h2><p>这个注解用在 <strong>类</strong> 上，会生成含所有参数的构造方法，get 方法，此外还提供了equals、hashCode、toString 方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/b6KeAg0ABi.png" alt="mark">]</p><h2 id="SneakyThrows"><a href="#SneakyThrows" class="headerlink" title="@SneakyThrows"></a><strong>@SneakyThrows</strong></h2><p>这个注解用在 <strong>方法</strong> 上，可以将方法中的代码用 try-catch 语句包裹起来，捕获异常并在 catch 中用 Lombok.sneakyThrow(e) 把异常抛出，可以使用 @SneakyThrows(Exception.class) 的形式指定抛出哪种异常，也会生成默认的构造方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/IfCKh1FGbh.png" alt="mark">]</p><h2 id="Synchronized"><a href="#Synchronized" class="headerlink" title="@Synchronized"></a><strong>@Synchronized</strong></h2><p>这个注解用在 <strong>类方法</strong> 或者 <strong>实例方法</strong> 上，效果和 synchronized 关键字相同，区别在于锁对象不同，对于类方法和实例方法，synchronized 关键字的锁对象分别是类的 class 对象和 this 对象，而 @Synchronized 的锁对象分别是 私有静态 final 对象 lock 和 私有 final 对象 lock，当然，也可以自己指定锁对象，此外也提供默认的构造方法。</p><p>[<img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/L95jIc7eJi.png" alt="mark">]</p><h1 id="7-json对象快速生成实体类"><a href="#7-json对象快速生成实体类" class="headerlink" title="7.json对象快速生成实体类"></a>7.json对象快速生成实体类</h1><h2 id="1-idea插件安装：GsonFormat"><a href="#1-idea插件安装：GsonFormat" class="headerlink" title="1.idea插件安装：GsonFormat"></a>1.idea插件安装：GsonFormat</h2><p>idea内打开File—–&gt;setting(或者idea快捷键Ctrl + Alt + S)——&gt; —–&gt;Plugins， 搜索GsonFormat，—–&gt;install，安装完之后重启idea</p><p>新建一个类，然后有右键——&gt;Generate——&gt;GsonFormat，或者快捷键Alt + insert`</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa18.png" alt="idea插件 json对象快速生成json实体类  json对象转json实体类  json对象生成json实体类"><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa19.png" alt="idea插件 json对象快速生成json实体类  json对象转json实体类  json对象生成json实体类"></p><p><code>将要转换的JSON格式数据粘贴进去，点击ok。 -</code><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa20.png" alt="idea插件 json对象快速生成json实体类  json对象转json实体类  json对象生成json实体类"></p><h2 id="2、-设置生成类型：setting（可忽略）"><a href="#2、-设置生成类型：setting（可忽略）" class="headerlink" title="2、 设置生成类型：setting（可忽略）"></a>2、 设置生成类型：setting（可忽略）</h2><p><code>生成之前可以设置类型，我的idea集成了lombok的插件，所以直接选择lombok类型，点击ok。此处可以忽略 -</code><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa21.png" alt="idea插件 json对象快速生成json实体类  json对象转json实体类  json对象生成json实体类"></p><h2 id="3、生成效果"><a href="#3、生成效果" class="headerlink" title="3、生成效果"></a>3、生成效果</h2><p><code>生成效果如下 -</code><br><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa22.png" alt="idea插件 json对象快速生成json实体类  json对象转json实体类  json对象生成json实体类"></p><p>给你一段<code>Json</code>格式数据，除了手写之外，如何快速生成一个和该<code>Json</code>数据对应的<code>Java</code>对象？</p><p>比如一段<code>Json</code>格式数据如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;msg&quot;: &quot;操作成功&quot;,</span><br><span class="line">    &quot;data&quot;: 1</span><br><span class="line">&#125;</span><br><span class="line">12345</span><br></pre></td></tr></table></figure><p><strong>GsonFormat</strong>则是一个<strong>JSON格式数据 → 对象</strong>的快速<strong>代码自动生成</strong>插件。</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/format.png" alt="image"></p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa23.png" alt="image"></p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa25.png" alt="image"></p><h1 id="8-CSDN-tools"><a href="#8-CSDN-tools" class="headerlink" title="8.CSDN tools"></a>8.CSDN tools</h1><p>顺便安利下我司的<a href="https://blog.csdn.net/weixin_44463441/article/details/109071551">Chrome插件</a>，不要太好使，根本停不下来.jpg</p><p>  插件主要功能：</p><ol><li>json格式化</li><li>时间格式化</li><li>ip查询</li><li>计算器</li><li>CSDN平台搜索</li><li>github仓库搜索</li><li>maven仓库依赖搜索</li><li>常用文档检索</li><li>单词翻译</li><li>看新闻</li><li>代码查询</li><li>二维码生成</li></ol><h2 id="2-安装方法"><a href="#2-安装方法" class="headerlink" title="2.安装方法"></a>2.安装方法</h2><p>1.插件本地安装</p><p>先下载tools的zip安装包<a href="https://img-operation.csdnimg.cn/plugin/csdn_idea_tools-1.3.0.zip">idea-tools下载地址</a></p><p>在File–&gt;Settings–&gt;Plugins中点击设置图标选择本地磁盘安装，选中下载好的<strong>zip包！zip包！zip包！</strong>点击安装即可</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa26.png" alt="img"></p><p>2.通过idea的应用商店Marketplace安装（插件已在应用商店发布，后期新版本会同步更新两种安装方式）</p><p>idea页面File–&gt;Settings–&gt;Plugins在Marketplace搜索csdn，选择下载安装。成功安装如图</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa27.png" alt="img"></p><h2 id="3-使用方法"><a href="#3-使用方法" class="headerlink" title="3.使用方法"></a>3.使用方法</h2><ol><li>ctrl+shift+I唤起插件（<strong>Esc退出插件）</strong></li><li>Tools toolbar或右键使用插件<strong>（Esc退出插件）</strong></li></ol><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa28.png" alt="img"><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/20201013144435219.png" alt="img"></p><p>唤醒页面：</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa29.png" alt="img"></p><p> 3.输入框输入help命令查看使用引导及插件功能使用示例</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa30.png" alt="img"></p><p>下面举几个栗子：</p><p>①时间插件功能</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/20201028135252596.gif" alt="img"></p><p>②mvn仓库插件</p><p>依赖包检索</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/20201028135833593.gif" alt="img"></p><p>③csdn搜索插件</p><p>直接输入关键字检索CSDN站内数据，想怎么搜就怎么搜~</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/20201028135457267.gif" alt="img"></p><p>④Json插件功能</p><p>对json格式的数据格式化、生成实体类</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/20201028135602726.gif" alt="img"></p><p>⑤代码查询</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/2020102813570187.gif" alt="img"></p><h1 id="9-括号进行着色的插件"><a href="#9-括号进行着色的插件" class="headerlink" title="9.括号进行着色的插件"></a>9.括号进行着色的插件</h1><h2 id="Rainbow-Brackets"><a href="#Rainbow-Brackets" class="headerlink" title="Rainbow Brackets"></a>Rainbow Brackets</h2><p>在代码非常复杂时，各种<strong>俄罗斯套娃式</strong>的括号简直让人心碎，<strong>Rainbow Brackets</strong>则是一款可以对<strong>成对括号</strong>进行着色的插件，顾名思义“彩虹色的括号”，从此复杂代码一眼即可看穿！</p><p>装完插件，括号都被染上了彩虹的颜色：</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa31.png" alt="image"></p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa32.png" alt="image"></p><h1 id="10-打印日志时不同颜色"><a href="#10-打印日志时不同颜色" class="headerlink" title="10.打印日志时不同颜色"></a>10.打印日志时不同颜色</h1><h2 id="Grep-Console"><a href="#Grep-Console" class="headerlink" title="Grep Console"></a>Grep Console</h2><p>默认情况下，IDEA控制台窗口在打印日志时都是一种颜色到底，比如各种<code>info</code>,<code>warn</code>,和<code>error</code>等类型的日志信息交织在一起，不好分辨。</p><p><strong>Grep Console</strong>插件则可以帮助我们自定义设置不用日志用不同的颜色进行标识，非常方便观看！</p><p><strong>设置自定义颜色：</strong></p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa33.png" alt="image"></p><p><strong>着色后的日志打印效果：</strong></p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa44.png" alt="image"></p><h1 id="11-url接口"><a href="#11-url接口" class="headerlink" title="11.url接口"></a>11.url接口</h1><h2 id="RestfulToolkit"><a href="#RestfulToolkit" class="headerlink" title="RestfulToolkit"></a>RestfulToolkit</h2><ul><li>你知道你项目里到底写了多少个URL接口吗？</li><li>如何快速定位某个<code>URL</code>接口对应的<code>Controller</code>代码？</li><li>如何快速测试你的<code>Controller</code>接口？</li></ul><p><strong>RestfulToolkit</strong>则是一个可以解决上述问题的，非常方便的IDEA集成插件，从此<code>Postman</code>怕是要下岗了：</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa45.png" alt="image"></p><h1 id="12-mybatis的mapper-Java接口方法和mapper-XML文件之间来回切换"><a href="#12-mybatis的mapper-Java接口方法和mapper-XML文件之间来回切换" class="headerlink" title="12.mybatis的mapper Java接口方法和mapper XML文件之间来回切换"></a>12.mybatis的mapper Java接口方法和mapper XML文件之间来回切换</h1><h2 id="Free-Mybatis-plugin"><a href="#Free-Mybatis-plugin" class="headerlink" title="Free Mybatis plugin"></a>Free Mybatis plugin</h2><p>除了全局搜索以外，如何方便地在<code>Mybatis</code>的<code>mapper Java</code>接口方法和<code>mapper XML</code>文件之间来回切换？</p><p><strong>Free Mybatis plugin</strong>插件此时就可以大显身手了：</p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa46.png" alt="image"></p><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa47.png" alt="image"></p><h1 id="13-google-java-format-——-代码自动格式化"><a href="#13-google-java-format-——-代码自动格式化" class="headerlink" title="13.google-java-format —— 代码自动格式化"></a>13.google-java-format —— 代码自动格式化</h1><p>这个插件的优点在于不需要手动快捷键去格式化代码</p><h1 id="14-GenerateAllSetter——自动调用所有-Setter-函数（可填充默认值）"><a href="#14-GenerateAllSetter——自动调用所有-Setter-函数（可填充默认值）" class="headerlink" title="14.GenerateAllSetter——自动调用所有 Setter 函数（可填充默认值）"></a>14.GenerateAllSetter——自动调用所有 Setter 函数（可填充默认值）</h1><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/20200806230436736.png" alt="在这里插入图片描述"><br><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/20200806230436529.png" alt="在这里插入图片描述"><br><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/20200806230436412.png" alt="在这里插入图片描述"></p><h1 id="15-Maven-Helper-——方便maven项目解决jar冲突"><a href="#15-Maven-Helper-——方便maven项目解决jar冲突" class="headerlink" title="15.Maven Helper ——方便maven项目解决jar冲突"></a>15.Maven Helper ——方便maven项目解决jar冲突</h1><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa55.png" alt="在这里插入图片描述"><br><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa56.png" alt="在这里插入图片描述"><br><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa57.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200806230810294.png" alt="在这里插入图片描述"><br><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa58.png" alt="在这里插入图片描述"></p><h1 id="16-FindBugs-——检查代码中的隐患"><a href="#16-FindBugs-——检查代码中的隐患" class="headerlink" title="16.FindBugs ——检查代码中的隐患"></a>16.FindBugs ——检查代码中的隐患</h1><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa59.png" alt="在这里插入图片描述"><br><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa60.png" alt="在这里插入图片描述"></p><h1 id="17-Stack-trace-to-UML-——-根据-JVM-异常堆栈画-UML时序图和通信图"><a href="#17-Stack-trace-to-UML-——-根据-JVM-异常堆栈画-UML时序图和通信图" class="headerlink" title="17.Stack trace to UML —— 根据 JVM 异常堆栈画 UML时序图和通信图"></a>17.Stack trace to UML —— 根据 JVM 异常堆栈画 UML时序图和通信图</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开方式：Analyze &gt; Open Stack trace to UML plugin + Generate UML diagrams from stacktrace from debug</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa61.png" alt="在这里插入图片描述"><br><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa62.png" alt="在这里插入图片描述"></p><h1 id="18-Java-Stream-Debugger-——-Stream-将操作步骤可视化"><a href="#18-Java-Stream-Debugger-——-Stream-将操作步骤可视化" class="headerlink" title="18.Java Stream Debugger —— Stream 将操作步骤可视化"></a>18.Java Stream Debugger —— Stream 将操作步骤可视化</h1><p><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa63.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200806231325623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjI4NTQxNg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="/2021/01/23/idea%E6%8F%92%E4%BB%B6/%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%92%E4%BB%B6-IDEA/aa64.png" alt="在这里插入图片描述"></p><h1 id="2-code码"><a href="#2-code码" class="headerlink" title="2.code码"></a>2.code码</h1><p>1.</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D87IQPUU3Q-eyJsaWNlbnNlSWQiOiJEODdJUVBVVTNRIiwibGljZW5zZWVOYW1lIjoiTnNzIEltIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTktMDItMDcifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMTktMDItMDcifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOS0wMi0wNyJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDE5LTAyLTA3In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTktMDItMDcifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxOS0wMi0wNyJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE5LTAyLTA3In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTktMDItMDcifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOS0wMi0wNyJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDE5LTAyLTA3In0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDE5LTAyLTA3In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMTktMDItMDcifSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAxOS0wMi0wNyJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDE5LTAyLTA3In0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTktMDItMDcifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMTktMDItMDcifV0sImhhc2giOiI4MDI4NjgyLzAiLCJncmFjZVBlcmlvZERheXMiOjAsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-iPLvfrIl0qTga/F9rnjf0Sz6yYvw+2FWgZpcLOFbvb3CllsE2ui4+bw8emxzcYr3GyxN4/4BhfcX6gmmI4EJaTSihP+m4Oa8jZApb5zGEHENJE+I8hewQWIyiekNE7+21meJ3swPCYiTWKkUXMIVUWNfieZhqHd96dHpD335dSRCmAImgQ31qpmzemMxztu1/FAIiaUrav1VU/M0waj9B9xuhDG77PU7deSxX363RQjbmRdWBorjH6gSyUpCXnyh6Crlhtj+lC+VndAdnT4HUXXsmpCw6uLotL5Gv/TM7/fAqIjSQghlnm4vpss4Pc7xI9n07KwQE9ok4fuF3HMRUA==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==</span><br></pre></td></tr></table></figure><p>2.</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IQJBET5GKT-eyJsaWNlbnNlSWQiOiJJUUpCRVQ1R0tUIiwibGljZW5zZWVOYW1lIjoi5rC45LmF5r+A5rS7IGlkZWHCt21lZGVtaW5nwrdjb20iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMjUiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIxLTAxLTI1IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMjUiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTViIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMjUiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDIxLTAxLTI1IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMjUiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRNIiwicGFpZFVwVG8iOiIyMDIxLTAxLTI1IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDIxLTAxLTI1IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU0MiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMjUiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMjEtMDEtMjUiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTRiIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDIxLTAxLTI1IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUERCIiwicGFpZFVwVG8iOiIyMDIxLTAxLTI1IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBXUyIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQR08iLCJwYWlkVXBUbyI6IjIwMjEtMDEtMjUiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBTIiwicGFpZFVwVG8iOiIyMDIxLTAxLTI1IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBQQyIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUkIiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMjUiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNXIiwicGFpZFVwVG8iOiIyMDIxLTAxLTI1IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTSSIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJEUCIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJSUyIsInBhaWRVcFRvIjoiMjAyMS0wMS0yNSIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIwMTIyNlBQQU0wMDAwMDUiLCJoYXNoIjoiMjE3MjA0NTgvMDotMTQ1OTQ5MjM1OCIsImdyYWNlUGVyaW9kRGF5cyI6NywiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-XD/D7zpGWSRPf7o1P83M1nllpsNPJHWadhJCJGw/0z4zcyRxYUb+eOMgkNQFx5iAqXrfXb/Qz03SVKX9cvYdJg2Ag3YpG1LvKf29p5w2jNyU4li9fT4HLNQC5IHizLH+mm8AtWRIOVaul6O3P20JF59YUI6zRuX4jHA9uGqxDDI1+buG+JOaK3T9UukjkdhmN2uVnvybYNQ/eRqYkILbjZo6DxnQqDU9dtBMA1vluf7lbDZ2Capr0wYc/U5cAYwfePatEcHHm9FRRY2r9tYnNEL6Yg0CO3Dynz2Ean/kghIoexARxamATvSGJ2pO+LdOgk3wok7zEHuP+LINM5arSQ==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4/Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5/8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp/umDXvhnyhAXSukw/qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</span><br></pre></td></tr></table></figure><h1 id="-1"><a href="#-1" class="headerlink" title></a></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-自动导包&quot;&gt;&lt;a href=&quot;#1-自动导包&quot; class=&quot;headerlink&quot; title=&quot;1.自动导包&quot;&gt;&lt;/a&gt;1.自动导包&lt;/h1&gt;&lt;p&gt;下面是Auto Import设置步骤详解。&lt;/p&gt;
&lt;p&gt;Settings→Editor→General→A</summary>
      
    
    
    
    
    <category term="idea插件" scheme="http://example.com/tags/idea%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>GitHub 无法访问问题解决</title>
    <link href="http://example.com/2021/01/21/github/github%E8%AE%BF%E9%97%AE/"/>
    <id>http://example.com/2021/01/21/github/github%E8%AE%BF%E9%97%AE/</id>
    <published>2021-01-21T07:43:13.000Z</published>
    <updated>2021-04-05T16:14:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GitHub-无法访问问题解决"><a href="#GitHub-无法访问问题解决" class="headerlink" title="GitHub 无法访问问题解决"></a>GitHub 无法访问问题解决</h1><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h3><ul><li>登录网站<a href="https://ipchaxun.com/">https://ipchaxun.com/</a> ，例如输入github.com</li></ul><p><img src="/2021/01/21/github/github%E8%AE%BF%E9%97%AE/1.png" alt="在这里插入图片描述"></p><p>可以看到这个网址解析到的ip 地址。</p><ul><li>替换 C:\Windows\System32\drivers\etc\hosts 文件内容，如下</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"># Copyright (c) 1993-2009 Microsoft Corp.</span><br><span class="line">#</span><br><span class="line"># This is a sample HOSTS file used by Microsoft TCP/IP for Windows.</span><br><span class="line">#</span><br><span class="line"># This file contains the mappings of IP addresses to host names. Each</span><br><span class="line"># entry should be kept on an individual line. The IP address should</span><br><span class="line"># be placed in the first column followed by the corresponding host name.</span><br><span class="line"># The IP address and the host name should be separated by at least one</span><br><span class="line"># space.</span><br><span class="line">#</span><br><span class="line"># Additionally, comments (such as these) may be inserted on individual</span><br><span class="line"># lines or following the machine name denoted by a &#x27;#&#x27; symbol.</span><br><span class="line">#</span><br><span class="line"># For example:</span><br><span class="line">#</span><br><span class="line">#      102.54.94.97     rhino.acme.com          # source server</span><br><span class="line">#       38.25.63.10     x.acme.com              # x client host</span><br><span class="line"></span><br><span class="line"># localhost name resolution is handled within DNS itself.</span><br><span class="line">#127.0.0.1       localhost</span><br><span class="line">#::1             localhost</span><br><span class="line"><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> https:<span class="comment">//account.jetbrains.com:443</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>       activate.navicat.com</span><br><span class="line"># GitHub Start </span><br><span class="line"># GitHub Start </span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> github.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> gist.github.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> assets-cdn.github.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> raw.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> gist.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> cloud.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> camo.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> avatars0.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> avatars1.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> avatars2.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> avatars3.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> avatars4.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> avatars5.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> avatars6.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> avatars7.githubusercontent.com</span><br><span class="line"><span class="number">52.74</span><span class="number">.223</span><span class="number">.119</span> avatars8.githubusercontent.com </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> github.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> gist.github.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> assets-cdn.github.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> raw.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> gist.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> cloud.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> camo.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> avatars0.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> avatars1.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> avatars2.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> avatars3.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> avatars4.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> avatars5.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> avatars6.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> avatars7.githubusercontent.com</span><br><span class="line"><span class="number">13.229</span><span class="number">.188</span><span class="number">.59</span> avatars8.githubusercontent.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span>     github.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span>     gist.github.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span>     assets-cdn.github.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span>     raw.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> gist.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> cloud.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> camo.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> avatars0.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> avatars1.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> avatars2.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> avatars3.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> avatars4.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> avatars5.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> avatars6.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> avatars7.githubusercontent.com</span><br><span class="line"><span class="number">13.250</span><span class="number">.177</span><span class="number">.223</span> avatars8.githubusercontent.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># GitHub End </span><br><span class="line">#52.74.223.119    github.com</span><br><span class="line">#13.229.188.59    github.com</span><br><span class="line">#13.250.177.223   github.com</span><br><span class="line"># GitHub End</span><br></pre></td></tr></table></figure><ul><li>接下来，重启浏览器，重新登录github 即可</li></ul><h3 id="后续步骤"><a href="#后续步骤" class="headerlink" title="后续步骤"></a>后续步骤</h3><p>对浏览器而言，可以关闭重启浏览器。</p><p>对DNS更新的话，可以打开cmd，输入 ipconfig/flushdns,如下</p><p><img src="/2021/01/21/github/github%E8%AE%BF%E9%97%AE/5.png" alt="img"></p><p>现在可以试试ping功能能否到达了，能ping通说明问题已被解决~</p><p><img src="/2021/01/21/github/github%E8%AE%BF%E9%97%AE/2.png" alt="img"></p><p><img src="/2021/01/21/github/github%E8%AE%BF%E9%97%AE/3.png" alt="在这里插入图片描述"></p><p><a href="https://www.jianshu.com/p/5009297c9894">可参考 解决方案文章</a></p><p>实际测试中，还是不明白为啥有的电脑 一直不会有问题，有的电脑经常性需要这样操作解决。 文章解决方案暂时能够解决，仅供参考.</p><h3 id="其它问题"><a href="#其它问题" class="headerlink" title="其它问题"></a>其它问题</h3><p>实际中可能存在问题：</p><ul><li>在实际操作中，有的用户还是不行，或者Ctrl+Shift+N 无痕浏览模式 可以访问，正常操作就是无法访问</li><li>ip重置、cdn 重置、清除浏览记录还是不行</li></ul><p>建议：直接卸载浏览器、重新安装一个版本也许能够解决。 不必要为这个问题花费太多时间。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;GitHub-无法访问问题解决&quot;&gt;&lt;a href=&quot;#GitHub-无法访问问题解决&quot; class=&quot;headerlink&quot; title=&quot;GitHub 无法访问问题解决&quot;&gt;&lt;/a&gt;GitHub 无法访问问题解决&lt;/h1&gt;&lt;h3 id=&quot;解决方案&quot;&gt;&lt;a href</summary>
      
    
    
    
    
    <category term="GitHub" scheme="http://example.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>JsonFormat-Date时间格式转换</title>
    <link href="http://example.com/2021/01/16/%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F/"/>
    <id>http://example.com/2021/01/16/%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F/</id>
    <published>2021-01-16T05:28:41.000Z</published>
    <updated>2021-04-07T18:57:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>@JsonFormat后台到前台的时间格式的转换<br>@DataFormAT前后到后台的时间格式的转换</strong></p><p><strong>1.@JsonFormat(pattern=”yyyy-MM-dd HH:mm:ss”,timezone = “GMT+8”)</strong><br>pattern:需要转换的时间日期的格式<br>timezone：是时间设置为东八区</p><p><strong>2.@DateTimeFormat(pattern = “yyyy-MM-dd HH:mm:ss”)</strong><br>pattern:需要转换的时间日期的格式</p><p>3.例子<br>/<em>俩个注解可以同时使用</em>/<br>@ApiModelProperty(“创建时间”) </p><p>@JsonFormat(pattern=”yyyy-MM-dd HH:mm:ss”,timezone = “GMT+8”) </p><p>@DateTimeFormat(pattern = “yyyy-MM-dd HH:mm:ss”) private Date createdDate ;</p><p><strong>举例：以下ClinicalTrialSettleParamVO 作为swagger入参，日期类型的列，可同时接收时间戳和时间类型的数据</strong></p><p><strong>若不加任何注解，默认接收时间戳,返回json也是long类型的时间戳</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClinicalTrialSettleParamVO</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Schema(description = &quot;项目id&quot;, required = true, example = &quot;LCSY2019091000000001&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String projectId;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="meta">@JsonFormat(pattern=&quot;yyyy-MM-dd HH:mm:ss&quot; ,timezone = &quot;GMT+8&quot;)</span></span><br><span class="line">    <span class="meta">@Schema(description = &quot;起始时间&quot;, required = true, example = &quot;2019-11-01 00:00:00&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date startTimestamp;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="meta">@JsonFormat(pattern=&quot;yyyy-MM-dd HH:mm:ss&quot; ,timezone = &quot;GMT+8&quot;)</span></span><br><span class="line">    <span class="meta">@Schema(description = &quot;结束时间&quot;, required = true, example = &quot;2019-11-01 23:59:59&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date endTimestamp;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ClinicalTrialSettleParamVO</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getProjectId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> projectId;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProjectId</span><span class="params">(String projectId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.projectId = projectId;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getStartTimestamp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> startTimestamp;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStartTimestamp</span><span class="params">(Date startTimestamp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.startTimestamp = startTimestamp;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getEndTimestamp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> endTimestamp;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEndTimestamp</span><span class="params">(Date endTimestamp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.endTimestamp = endTimestamp;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;@JsonFormat后台到前台的时间格式的转换&lt;br&gt;@DataFormAT前后到后台的时间格式的转换&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.@JsonFormat(pattern=”yyyy-MM-dd HH:mm:ss”,timezone</summary>
      
    
    
    
    
    <category term="JsonFormat" scheme="http://example.com/tags/JsonFormat/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装</title>
    <link href="http://example.com/2021/01/05/%E5%AE%89%E8%A3%85docker/"/>
    <id>http://example.com/2021/01/05/%E5%AE%89%E8%A3%85docker/</id>
    <published>2021-01-05T03:48:33.000Z</published>
    <updated>2021-04-05T16:11:14.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1、yum 包更新到最新</span> </span><br><span class="line">yum update</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</span> </span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3、 设置yum源</span></span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4、 安装docker，出现输入的界面都按 y</span> </span><br><span class="line">yum install -y docker-ce</span><br><span class="line"><span class="meta">#</span><span class="bash"> 5、 查看docker版本，验证是否验证成功</span></span><br><span class="line">docker -v</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>systemctl enable docker # 开机自动启动docker</p><p>systemctl start docker # 启动docker<br>systemctl restart docker # 重启dokcer</p><h3 id="配置docker-镜像"><a href="#配置docker-镜像" class="headerlink" title="配置docker 镜像"></a>配置docker 镜像</h3><p>国内拉取镜像的话可能会比较忙，这里提高加速的方法<br>Ubuntu 16.04+、Debian 8+、CentOS 7<br>对于使用 systemd 的系统，请在 /etc/docker/daemon.json 中写入如下内容（如果文件不存在请新建该文件）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建或修改 /etc/docker/daemon.json 文件，修改为如下形式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># vi &#x2F;etc&#x2F;docker&#x2F;daemon.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;http:&#x2F;&#x2F;hub-mirror.c.163.com&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure><p>国内加速地址有：</p><p>Docker中国区官方镜像<br><a href="https://registry.docker-cn.com/">https://registry.docker-cn.com</a></p><p>网易<br><a href="http://hub-mirror.c.163.com/">http://hub-mirror.c.163.com</a></p><p>ustc<br><a href="https://docker.mirrors.ustc.edu.cn/">https://docker.mirrors.ustc.edu.cn</a></p><p>中国科技大学<br><a href="https://docker.mirrors.ustc.edu.cn/">https://docker.mirrors.ustc.edu.cn</a></p><p>阿里云容器 服务<br><a href="https://cr.console.aliyun.com/">https://cr.console.aliyun.com/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Docker安装&quot;&gt;&lt;a href=&quot;#Docker安装&quot; class=&quot;headerlink&quot; title=&quot;Docker安装&quot;&gt;&lt;/a&gt;Docker安装&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    
    <category term="docker" scheme="http://example.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker应用部署</title>
    <link href="http://example.com/2020/12/09/docker%E5%88%86%E7%B1%BB/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/2020/12/09/docker%E5%88%86%E7%B1%BB/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/</id>
    <published>2020-12-09T05:48:33.000Z</published>
    <updated>2021-01-23T12:25:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker应用部署"><a href="#Docker应用部署" class="headerlink" title="Docker应用部署"></a>Docker应用部署</h2><h3 id="一、部署MySQL"><a href="#一、部署MySQL" class="headerlink" title="一、部署MySQL"></a>一、部署MySQL</h3><ol><li>搜索mysql镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search mysql</span><br></pre></td></tr></table></figure><ol start="2"><li>拉取mysql镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.6</span><br></pre></td></tr></table></figure><ol start="3"><li>创建容器，设置端口映射、目录映射</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在/root目录下创建mysql目录用于存储mysql数据信息</span></span><br><span class="line">mkdir ~/mysql</span><br><span class="line">cd ~/mysql</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -id \</span><br><span class="line">-p 3307:3306 \</span><br><span class="line">--name=c_mysql \</span><br><span class="line">-v $PWD/conf:/etc/mysql/conf.d \</span><br><span class="line">-v $PWD/logs:/logs \</span><br><span class="line">-v $PWD/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">mysql:5.6</span><br></pre></td></tr></table></figure><ul><li>参数说明：<ul><li><strong>-p 3307:3306</strong>：将容器的 3306 端口<strong>映射</strong>到宿主机的 3307 端口。</li><li><strong>-v $PWD/conf:/etc/mysql/conf.d</strong>：将主机当前目录下的 conf/my.cnf <strong>挂载</strong>到容器的 /etc/mysql/my.cnf。配置目录</li><li><strong>-v $PWD/logs:/logs</strong>：将主机当前目录下的 logs 目录<strong>挂载</strong>到容器的 /logs。日志目录</li><li><strong>-v $PWD/data:/var/lib/mysql</strong> ：将主机当前目录下的data目录<strong>挂载</strong>到容器的 /var/lib/mysql 。数据目录</li><li><strong>-e MYSQL_ROOT_PASSWORD=123456：</strong>初始化 root 用户的密码。</li></ul></li></ul><ol start="4"><li>进入容器，操作mysql</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec –it c_mysql /bin/bash</span><br></pre></td></tr></table></figure><ol start="5"><li>使用外部机器连接容器中的mysql</li></ol><p><img src="/2020/12/09/docker%E5%88%86%E7%B1%BB/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/1573636765632.png" alt="1573636765632"></p><h3 id="二、部署Tomcat"><a href="#二、部署Tomcat" class="headerlink" title="二、部署Tomcat"></a>二、部署Tomcat</h3><ol><li>搜索tomcat镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search tomcat</span><br></pre></td></tr></table></figure><ol start="2"><li>拉取tomcat镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull tomcat</span><br></pre></td></tr></table></figure><ol start="3"><li>创建容器，设置端口映射、目录映射</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在/root目录下创建tomcat目录用于存储tomcat数据信息</span></span><br><span class="line">mkdir ~/tomcat</span><br><span class="line">cd ~/tomcat</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -id --name=c_tomcat \</span><br><span class="line">-p 8080:8080 \</span><br><span class="line">-v $PWD:/usr/local/tomcat/webapps \</span><br><span class="line">tomcat </span><br></pre></td></tr></table></figure><ul><li>参数说明：<ul><li><p><strong>-p 8080:8080：</strong>将容器的8080端口<strong>映射</strong>到主机的8080端口</p><p><strong>-v $PWD:/usr/local/tomcat/webapps：</strong>将主机中当前目录<strong>挂载</strong>到容器的webapps</p></li></ul></li></ul><ol start="4"><li>使用外部机器访问tomcat</li></ol><p><img src="/2020/12/09/docker%E5%88%86%E7%B1%BB/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/imgs%5C1573649804623.png" alt="1573649804623"></p><h3 id="三、部署Nginx"><a href="#三、部署Nginx" class="headerlink" title="三、部署Nginx"></a>三、部署Nginx</h3><ol><li>搜索nginx镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search nginx</span><br></pre></td></tr></table></figure><ol start="2"><li>拉取nginx镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><ol start="3"><li>创建容器，设置端口映射、目录映射</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在/root目录下创建nginx目录用于存储nginx数据信息</span></span><br><span class="line">mkdir ~/nginx</span><br><span class="line">cd ~/nginx</span><br><span class="line">mkdir conf</span><br><span class="line">cd conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在~/nginx/conf/下创建nginx.conf文件,粘贴下面内容</span></span><br><span class="line">vim nginx.conf</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -id --name=c_nginx \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">-v $PWD/logs:/var/log/nginx \</span><br><span class="line">-v $PWD/html:/usr/share/nginx/html \</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure><ul><li>参数说明：<ul><li><strong>-p 80:80</strong>：将容器的 80端口映射到宿主机的 80 端口。</li><li><strong>-v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf</strong>：将主机当前目录下的 /conf/nginx.conf 挂载到容器的 :/etc/nginx/nginx.conf。配置目录</li><li><strong>-v $PWD/logs:/var/log/nginx</strong>：将主机当前目录下的 logs 目录挂载到容器的/var/log/nginx。日志目录</li></ul></li></ul><ol start="4"><li>使用外部机器访问nginx</li></ol><p><img src="/2020/12/09/docker%E5%88%86%E7%B1%BB/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/1573652396669.png" alt="1573652396669"></p><h3 id="四、部署Redis"><a href="#四、部署Redis" class="headerlink" title="四、部署Redis"></a>四、部署Redis</h3><ol><li>搜索redis镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search redis</span><br></pre></td></tr></table></figure><ol start="2"><li>拉取redis镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis:5.0</span><br></pre></td></tr></table></figure><ol start="3"><li>创建容器，设置端口映射</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -id --name=c_redis -p 6379:6379 redis:5.0</span><br></pre></td></tr></table></figure><ol start="4"><li>使用外部机器连接redis</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli.exe -h 192.168.149.135 -p 6379</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Docker应用部署&quot;&gt;&lt;a href=&quot;#Docker应用部署&quot; class=&quot;headerlink&quot; title=&quot;Docker应用部署&quot;&gt;&lt;/a&gt;Docker应用部署&lt;/h2&gt;&lt;h3 id=&quot;一、部署MySQL&quot;&gt;&lt;a href=&quot;#一、部署MySQL&quot; c</summary>
      
    
    
    
    
    <category term="docker" scheme="http://example.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机配置静态ip地址</title>
    <link href="http://example.com/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/"/>
    <id>http://example.com/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/</id>
    <published>2020-12-08T16:00:00.000Z</published>
    <updated>2021-04-11T07:19:29.893Z</updated>
    
    <content type="html"><![CDATA[<h1 id="虚拟机配置静态ip地址"><a href="#虚拟机配置静态ip地址" class="headerlink" title="虚拟机配置静态ip地址"></a>虚拟机配置静态ip地址</h1><h3 id="1、以管理员的身份打开虚拟机，点击导航栏上面的-编辑–-gt-虚拟网络编辑器"><a href="#1、以管理员的身份打开虚拟机，点击导航栏上面的-编辑–-gt-虚拟网络编辑器" class="headerlink" title="1、以管理员的身份打开虚拟机，点击导航栏上面的  编辑–&gt;虚拟网络编辑器"></a>1、以管理员的身份打开虚拟机，点击导航栏上面的  编辑–&gt;虚拟网络编辑器</h3><p>​       <img src="/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/70.png" alt="img"></p><h3 id="2、首先选中上面的VMnet8，在到下面的子网-ip-处编辑ip地址，可以改成192-168-8-0，最后点击右边的-NAT设置"><a href="#2、首先选中上面的VMnet8，在到下面的子网-ip-处编辑ip地址，可以改成192-168-8-0，最后点击右边的-NAT设置" class="headerlink" title="2、首先选中上面的VMnet8，在到下面的子网 ip 处编辑ip地址，可以改成192.168.8.0，最后点击右边的 NAT设置"></a>2、首先选中上面的VMnet8，在到下面的子网 ip 处编辑ip地址，可以改成192.168.8.0，最后点击右边的 NAT设置</h3><p>   <img src="/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/71.png" alt="img"></p><h3 id="3、在NAT中设置网关-i-p，可以改成-192-168-8-2，最后点击确定就可以了，虚拟机的ip地址编辑就此结束，接下来就是到电脑的网卡中编辑ip地址了"><a href="#3、在NAT中设置网关-i-p，可以改成-192-168-8-2，最后点击确定就可以了，虚拟机的ip地址编辑就此结束，接下来就是到电脑的网卡中编辑ip地址了" class="headerlink" title="3、在NAT中设置网关  i p，可以改成 192.168.8.2，最后点击确定就可以了，虚拟机的ip地址编辑就此结束，接下来就是到电脑的网卡中编辑ip地址了"></a>3、在NAT中设置网关  i p，可以改成 192.168.8.2，最后点击确定就可以了，虚拟机的ip地址编辑就此结束，接下来就是到电脑的网卡中编辑ip地址了</h3><p>​      <img src="/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/72.png" alt="img"></p><h3 id="4、可以直接在电脑的任务栏中选中网络那里右键打开-网络和共享中心，在左边点击-更改适配器设置，然后右键选属性打开-VMare-Network-Adapter-VMnet8-在打开的页面上选-Internet协议版本4，点击属性，在打开的页面选择-使用下面的ip地址-，ip地址可以填192-168-8-1-默认网关必须与前面的第三步配好的网关ip一致也就是-192-168-8-2，就此虚拟机的固定ip地址就配完了"><a href="#4、可以直接在电脑的任务栏中选中网络那里右键打开-网络和共享中心，在左边点击-更改适配器设置，然后右键选属性打开-VMare-Network-Adapter-VMnet8-在打开的页面上选-Internet协议版本4，点击属性，在打开的页面选择-使用下面的ip地址-，ip地址可以填192-168-8-1-默认网关必须与前面的第三步配好的网关ip一致也就是-192-168-8-2，就此虚拟机的固定ip地址就配完了" class="headerlink" title="4、可以直接在电脑的任务栏中选中网络那里右键打开 网络和共享中心，在左边点击 更改适配器设置，然后右键选属性打开 VMare Network Adapter VMnet8, 在打开的页面上选  Internet协议版本4，点击属性，在打开的页面选择 使用下面的ip地址 ，ip地址可以填192.168.8.1  默认网关必须与前面的第三步配好的网关ip一致也就是  192.168.8.2，就此虚拟机的固定ip地址就配完了"></a>4、可以直接在电脑的任务栏中选中网络那里右键打开 网络和共享中心，在左边点击 更改适配器设置，然后右键选属性打开 VMare Network Adapter VMnet8, 在打开的页面上选  Internet协议版本4，点击属性，在打开的页面选择 使用下面的ip地址 ，ip地址可以填192.168.8.1  默认网关必须与前面的第三步配好的网关ip一致也就是  192.168.8.2，就此虚拟机的固定ip地址就配完了</h3><h3 id><a href="#" class="headerlink" title></a></h3><p>​        <img src="/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/3.png" alt="img"></p><p>​        <img src="/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/4.png" alt="img"></p><p>  <img src="/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/5.png" alt="img"></p><p>​        <img src="/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/6.png" alt="img"></p><h3 id="5、到linux操作系统中输入命令"><a href="#5、到linux操作系统中输入命令" class="headerlink" title="5、到linux操作系统中输入命令"></a>5、到linux操作系统中输入命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim  /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><p>有些修改</p><p>ifcfg-eth0 vim /etc/sysconfig/network-scripts/ifcfg-eth0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=<span class="keyword">static</span></span><br><span class="line">IPADDR=<span class="number">192.168</span><span class="number">.8</span><span class="number">.129</span></span><br><span class="line">NETMASK=<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">GATEWAY=<span class="number">192.168</span><span class="number">.8</span><span class="number">.2</span></span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=8c5cddae-2eca-<span class="number">4e3d</span>-<span class="number">9985</span>-647fa53e7476</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=<span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>把下面的两条修改成如下 ip 地址</p><p>​      IPADDR：192.168.8.101</p><p>​      GATEWAY：192.168.8.254</p><h3 id="6-重新启动network"><a href="#6-重新启动network" class="headerlink" title="6 .重新启动network"></a>6 .重新启动network</h3><p>systemctl restart network</p><p>改好后保存退出，出去后输入命令  ifconfig查看ip地址</p><p><img src="/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/7.png" alt="img"></p><p> 可以输入ping <a href="http://www.baidu.com看看是否能ping通百度,下面个的图片已经可以ping通百度了,这时候按ctrl+z键可以停止/">www.baidu.com看看是否能ping通百度，下面个的图片已经可以ping通百度了，这时候按ctrl+Z键可以停止</a></p><p><img src="/2020/12/09/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/8.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;虚拟机配置静态ip地址&quot;&gt;&lt;a href=&quot;#虚拟机配置静态ip地址&quot; class=&quot;headerlink&quot; title=&quot;虚拟机配置静态ip地址&quot;&gt;&lt;/a&gt;虚拟机配置静态ip地址&lt;/h1&gt;&lt;h3 id=&quot;1、以管理员的身份打开虚拟机，点击导航栏上面的-编辑–-g</summary>
      
    
    
    
    
    <category term="虚拟机" scheme="http://example.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>docker命令</title>
    <link href="http://example.com/2020/12/09/docker/docker/"/>
    <id>http://example.com/2020/12/09/docker/docker/</id>
    <published>2020-12-08T16:00:00.000Z</published>
    <updated>2021-04-11T07:17:54.798Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-docker介绍"><a href="#1-docker介绍" class="headerlink" title="1. docker介绍"></a>1. docker介绍</h2><h3 id="1-1-docker概念"><a href="#1-1-docker概念" class="headerlink" title="1.1 docker概念"></a>1.1 docker概念</h3><p>我们写的代码会接触到好几个环境：开发环境、测试环境以及生产环境：</p><p><img src="/2020/12/09/docker/docker/1592741447865.png" alt="1592741447865"></p><ul><li><p>Docker 是一个开源的应用容器引擎</p></li><li><p>诞生于 2013 年初，基于 Go 语言实现， dotCloud 公司出品（后改名为Docker Inc）</p></li><li><p>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上</p></li><li><p>容器是完全使用沙箱机制，相互隔离</p></li><li><p>容器性能开销极低</p></li><li><p>Docker 从 17.03 版本之后分为 CE（Community Edition: 社区版） 和 EE（Enterprise Edition: 企业版）</p></li></ul><h3 id="1-2-安装docker"><a href="#1-2-安装docker" class="headerlink" title="1.2 安装docker"></a>1.2 安装docker</h3><p>Docker可以运行在MAC、Windows、CentOS、UBUNTU等操作系统上，本课程基于CentOS 7 安装</p><p>Docker。官网：<a href="https://www.docker.com/">https://www.docker.com</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1、yum 包更新到最新</span></span><br><span class="line">yum update</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3、 设置yum源</span></span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4、 安装docker，出现输入的界面都按 y</span></span><br><span class="line">yum install -y docker-ce</span><br><span class="line"><span class="meta">#</span><span class="bash"> 5、 查看docker版本，验证是否验证成功</span></span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure><h3 id="1-3-docker架构"><a href="#1-3-docker架构" class="headerlink" title="1.3 docker架构"></a>1.3 docker架构</h3><p><img src="/2020/12/09/docker/docker/1592741985974.png" alt="1592741985974"></p><ul><li><strong>镜像（Image）：</strong>Docker 镜像（Image），就相当于是 一个 root 文件系统。比如官方镜像 ubuntu:16.04 就包 含了完整的一套 Ubuntu16.04 最小系统的 root 文件系 统。</li><li><strong>容器（Container）</strong>：镜像（Image）和容器（Contain er）的关系，就像是面向对象程序设计中的类和对象一 样，镜像是静态的定义，容器是镜像运行时的实体。容 器可以被创建、启动、停止、删除、暂停等。</li><li><strong>仓库（Repository）</strong>：仓库可看成一个代码控制中心， 用来保存镜像。</li></ul><h3 id="1-4-配置-Docker-镜像加速器"><a href="#1-4-配置-Docker-镜像加速器" class="headerlink" title="1.4 配置 Docker 镜像加速器"></a>1.4 配置 Docker 镜像加速器</h3><p>国内拉取镜像的话可能会比较忙，这里提高加速的方法<br>Ubuntu 16.04+、Debian 8+、CentOS 7<br>对于使用 systemd 的系统，请在 /etc/docker/daemon.json 中写入如下内容（如果文件不存在请新建该文件）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>默认情况下，将来从docker hub（<a href="https://hub.docker.com/%EF%BC%89%E4%B8%8A%E4%B8%8B%E8%BD%BD">https://hub.docker.com/）上下载</a></p><p>docker镜像，太慢。一般都会配置镜像加速器：</p><p>• USTC：中科大镜像加速器（<a href="https://docker.mirrors.ustc.edu.cn)/">https://docker.mirrors.ustc.edu.cn）</a></p><p>• 阿里云</p><p>• 网易云</p><p>• 腾讯云</p><p>本次我们使用阿里云镜像</p><p>1.登录阿里云网站（<a href="https://www.aliyun.com/%EF%BC%89">https://www.aliyun.com/）</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://z571z49g.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p><img src="/2020/12/09/docker/docker/1592742973168.png" alt="1592742973168"></p><ol start="2"><li> 查看文件/etc/docker/daemon.json</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 执行如下命令：</span></span><br><span class="line">cat /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p><img src="/2020/12/09/docker/docker/1592743065182.png" alt="1592743065182"></p><h2 id="2-docker命令"><a href="#2-docker命令" class="headerlink" title="2 .docker命令"></a>2 .docker命令</h2><h3 id="2-1-进程相关命令"><a href="#2-1-进程相关命令" class="headerlink" title="2.1 进程相关命令"></a>2.1 进程相关命令</h3><p>关于进程相关的命令</p><h4 id="2-1-1-启动docker服务"><a href="#2-1-1-启动docker服务" class="headerlink" title="2.1.1 启动docker服务"></a>2.1.1 启动docker服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="2-1-2-停止docker服务"><a href="#2-1-2-停止docker服务" class="headerlink" title="2.1.2 停止docker服务"></a>2.1.2 停止docker服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure><h4 id="2-1-3-重启docker服务"><a href="#2-1-3-重启docker服务" class="headerlink" title="2.1.3 重启docker服务"></a>2.1.3 重启docker服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="2-1-4-查看docker服务状态"><a href="#2-1-4-查看docker服务状态" class="headerlink" title="2.1.4 查看docker服务状态"></a>2.1.4 查看docker服务状态</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><h4 id="2-1-5-开机启动docker服务"><a href="#2-1-5-开机启动docker服务" class="headerlink" title="2.1.5 开机启动docker服务"></a>2.1.5 开机启动docker服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p><img src="/2020/12/09/docker/docker/1592743261888.png" alt="1592743261888"></p><h3 id="2-2-Docker-镜像相关命令"><a href="#2-2-Docker-镜像相关命令" class="headerlink" title="2.2 Docker 镜像相关命令"></a>2.2 Docker 镜像相关命令</h3><h4 id="2-2-1-查看镜像"><a href="#2-2-1-查看镜像" class="headerlink" title="2.2.1 查看镜像"></a>2.2.1 查看镜像</h4><ul><li>查看本地所有的镜像</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker images –q # 查看所用镜像的id</span><br></pre></td></tr></table></figure><p><img src="/2020/12/09/docker/docker/1592743915716.png" alt="1592743915716"></p><p>REPOSITORY：镜像名称</p><p>TAG：镜像标签</p><p>IMAGE ID：镜像ID</p><p>CREATED：镜像的创建日期</p><p>SIZE：镜像大小</p><h4 id="2-2-2-搜索镜像"><a href="#2-2-2-搜索镜像" class="headerlink" title="2.2.2 搜索镜像"></a>2.2.2 搜索镜像</h4><ul><li>从网络中查找需要的镜像</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search 镜像名称</span><br></pre></td></tr></table></figure><p><img src="/2020/12/09/docker/docker/1592744016271.png" alt="1592744016271"></p><p>NAME：镜像名称</p><p>DESCRIPTION：镜像描述</p><p>STARS：用户评价，反应一个镜像的受欢迎程度</p><p>OFFICIAL：是否官方</p><p>AUTOMATED：自动构建，表示该镜像由Docker Hub自动构建流程创建的</p><h4 id="2-2-3-拉取镜像"><a href="#2-2-3-拉取镜像" class="headerlink" title="2.2.3 拉取镜像"></a>2.2.3 拉取镜像</h4><p>从Docker仓库下载镜像到本地，镜像名称格式为 名称:版本号，如果版本号不指定则是最新的版本。 如果不知道镜像版本，可以去docker hub 搜索对应镜像查看。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull 镜像名称</span><br></pre></td></tr></table></figure><h4 id="2-2-4-删除镜像"><a href="#2-2-4-删除镜像" class="headerlink" title="2.2.4 删除镜像"></a>2.2.4 删除镜像</h4><p> 删除本地镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rmi -f id # 删除指定本地镜像</span><br><span class="line">docker rmi -f `docker images -q` # 删除所有本地镜像</span><br></pre></td></tr></table></figure><p>关于docker更多命令， 大家可以菜鸟教程查看, 网址：</p><p><a href="https://www.runoob.com/docker/docker-command-manual.html">https://www.runoob.com/docker/docker-command-manual.html</a></p><h3 id="2-3-容器相关的命令"><a href="#2-3-容器相关的命令" class="headerlink" title="2.3 容器相关的命令"></a>2.3 容器相关的命令</h3><h4 id="2-3-1-查看容器"><a href="#2-3-1-查看容器" class="headerlink" title="2.3.1 查看容器"></a>2.3.1 查看容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps # 查看正在运行的容器</span><br><span class="line">docker ps –a # 查看所有容器，包括正在运行和停止的容器</span><br></pre></td></tr></table></figure><h4 id="2-3-2-创建并启动容器"><a href="#2-3-2-创建并启动容器" class="headerlink" title="2.3.2 创建并启动容器"></a>2.3.2 创建并启动容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run 参数</span><br></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><p>• -i：保持容器运行。通常与 -t 同时使用。加入it这两个参数后，容器创建后自动进入容器中，退出容器后，容器自动关闭。</p><p>• -t：为容器重新分配一个伪输入终端，通常与 -i 同时使用。</p><p>• -d：以守护（后台）模式运行容器。创建一个容器在后台运行，需要使用docker exec 进入容器。退出后，容器不会关闭。</p><p>• -it 创建的容器一般称为交互式容器，-id 创建的容器一般称为守护式容器</p><p>• –name：为创建的容器命名。</p><p><strong>1）交互式容器</strong></p><p>以<strong>交互式</strong>方式创建并启动容器，启动完成后，直接进入当前容器。使用exit命令退出容器。需要注意的是以此种方式 启动容器，如果退出容器，则容器会进入<strong>停止</strong>状态。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 先拉取一个镜像；这一步不是每次启动容器都要做的，而是因为前面我们删除了镜像，无镜像可用所以才再拉取一个</span></span><br><span class="line">docker pull centos:7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建并启动名称为 mycentos7 的交互式容器；下面指令中的镜像名称 centos:7 也可以使用镜像id</span></span><br><span class="line">docker run -it --name=mycentos7 centos:7 /bin/bash</span><br></pre></td></tr></table></figure><p><strong>2）守护式容器</strong></p><p>创建一个守护式容器；如果对于一个需要长期运行的容器来说，我们可以创建一个守护式容器。命令如下（容器名称 不能重复）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建并启动守护式容器</span></span><br><span class="line">docker run -di --name=mycentos2 centos:7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">登录进入容器命令为：docker <span class="built_in">exec</span> -it container_name (或者 container_id) /bin/bash（<span class="built_in">exit</span>退出 时，容器不会停止）</span></span><br><span class="line">docker exec -it mycentos2 /bin/bash</span><br></pre></td></tr></table></figure><h4 id="2-3-3-进入容器"><a href="#2-3-3-进入容器" class="headerlink" title="2.3.3 进入容器"></a>2.3.3 进入容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker exec 参数 # 退出容器，容器不会关闭</span><br><span class="line">eg:</span><br><span class="line">docker exec -it mycentos2 /bin/bash</span><br></pre></td></tr></table></figure><h4 id="2-3-4-停止容器"><a href="#2-3-4-停止容器" class="headerlink" title="2.3.4 停止容器"></a>2.3.4 停止容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器名称或者容器id</span><br></pre></td></tr></table></figure><h4 id="2-3-5-启动容器"><a href="#2-3-5-启动容器" class="headerlink" title="2.3.5 启动容器"></a>2.3.5 启动容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器名称或者容器id</span><br></pre></td></tr></table></figure><h4 id="2-3-6-删除容器"><a href="#2-3-6-删除容器" class="headerlink" title="2.3.6 删除容器"></a>2.3.6 删除容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">删除指定容器</span></span><br><span class="line">docker rm 容器名称或者容器id</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有容器：</span></span><br><span class="line">docker rm `docker ps -a -q`</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意：如果容器是运行状态则删除失败，需要停止容器才能删除</strong></p><h4 id="2-3-7-查看容器信息"><a href="#2-3-7-查看容器信息" class="headerlink" title="2.3. 7 查看容器信息"></a>2.3. 7 查看容器信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 容器名称或者容器id</span><br></pre></td></tr></table></figure><p><img src="/2020/12/09/docker/docker/1592745823262.png" alt="1592745823262"></p><p>说明：容器之间在一个局域网内，linux宿主机器可以与容器进行通信；但是外部的物理机笔记本是不能与容器直接通信的，如果需要则需要通过宿主机器端口的代理。</p><h2 id="3-docker容器的数据卷"><a href="#3-docker容器的数据卷" class="headerlink" title="3 . docker容器的数据卷"></a>3 . docker容器的数据卷</h2><h3 id="3-1-数据卷概念"><a href="#3-1-数据卷概念" class="headerlink" title="3.1 数据卷概念"></a>3.1 数据卷概念</h3><p>思考：</p><p>• Docker 容器删除后，在容器中产生的数据也会随之销毁</p><p>• Docker 容器和外部机器可以直接交换文件吗？</p><p>• 容器之间想要进行数据交互？</p><p><img src="/2020/12/09/docker/docker/1592748818477.png" alt="1592748818477"></p><p><strong>数据卷</strong></p><ul><li>数据卷是宿主机中的一个目录或文件</li><li>当容器目录和数据卷目录绑定后，对方的修改会立即同步</li><li>一个数据卷可以被多个容器同时挂载</li><li>一个容器也可以被挂载多个数据卷</li></ul><p><img src="/2020/12/09/docker/docker/1592748888266.png" alt="1592748888266"></p><p><strong>数据卷的作用</strong></p><p>• 容器数据持久化</p><p>• 外部机器和容器间接通信</p><p>• 容器之间数据交换</p><h3 id="3-2-配置数据卷"><a href="#3-2-配置数据卷" class="headerlink" title="3.2 配置数据卷"></a>3.2 配置数据卷</h3><p><strong>创建启动容器时，使用 –v 参数 设置数据卷</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run ... –v 宿主机目录(文件):容器内目录(文件) ...</span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><ol><li><p>目录必须是绝对路径</p></li><li><p>如果目录不存在，会自动创建</p></li><li><p>一个容器可以挂载多个数据卷</p></li><li><p>一个数据卷也可以被多个容器挂载</p></li><li><p>两个容器可以挂载同一个容器</p></li></ol><p>在宿主机中实现与容器目录的挂载：</p><p>在c1容器中的root目录下就可以看到data_container文件夹：如下图</p><p><img src="/2020/12/09/docker/docker/1592750980127.png" alt="1592750980127"></p><p>同时我们我们回到宿主机中，可以在data文件夹下创建一个文件itcast.txt ,可以发现在容器中也会生成itcast.txt文件：如下图</p><p><img src="/2020/12/09/docker/docker/1592751613509.png" alt="1592751613509"></p><ol><li>数据卷的持久化：</li></ol><p>​    当我们把c1容器删除后，宿主机中的数据卷依然存在。  所以当我们重新创建一个容器的同时依然可以挂载宿主机中的data文件夹，对应data里的数据依然同步到容器中。</p><ol start="2"><li>一个容器可以挂载多个数据卷</li></ol><p><img src="/2020/12/09/docker/docker/1592752027409.png" alt="1592752027409"></p><ol start="3"><li>多个容器可以挂载同一个数据卷</li></ol><p><img src="/2020/12/09/docker/docker/1592749838266.png" alt="1592749838266"></p><p>分别创建两个容器，两个容器都挂载宿主机中data目录，当 修改c3容器的data目录c4会实现同步。</p><p>从而实现两个容器之间的交互。</p><h3 id="3-3-配置数据卷容器"><a href="#3-3-配置数据卷容器" class="headerlink" title="3.3 配置数据卷容器"></a>3.3 配置数据卷容器</h3><p><strong>多容器进行数据交换</strong></p><ol><li><p>多个容器挂载同一个数据卷</p></li><li><p>数据卷容器</p></li></ol><p><img src="/2020/12/09/docker/docker/1592753247374.png" alt="1592753247374"></p><p><strong>步骤：</strong></p><p>1.创建启动c3数据卷容器，使用 –v 参数 设置数据卷</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run –it --name=c3 –v /volume centos:7 /bin/bash</span><br></pre></td></tr></table></figure><ol start="2"><li>创建启动 c1 c2 容器，使用 –-volumes-from 参数 设置数据卷</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run –it --name=c1 --volumes-from c3 centos:7 /bin/bash</span><br><span class="line"></span><br><span class="line">docker run –it --name=c2 --volumes-from c3 centos:7 /bin/bash</span><br></pre></td></tr></table></figure><h3 id="3-4-数据卷小结"><a href="#3-4-数据卷小结" class="headerlink" title="3.4 数据卷小结"></a>3.4 数据卷小结</h3><ol><li><p>数据卷概念<br> •宿主机的一个目录或文件</p></li><li><p>数据卷作用<br> • 容器数据持久化<br> • 客户端和容器数据交换<br> • 容器间数据交换</p></li><li><p>数据卷容器<br> • 创建一个容器，挂载一个目录，让其他容器继承自该容器( –volume-from )。</p></li></ol><p>  • 通过简单方式实现数据卷配置</p><h2 id="4-应用部署"><a href="#4-应用部署" class="headerlink" title="4. 应用部署"></a>4. 应用部署</h2><p>参考资料中docker应用部署.md</p><h2 id="5-Docerfile"><a href="#5-Docerfile" class="headerlink" title="5.  Docerfile"></a>5.  Docerfile</h2><p>前面的课程中已经知道了，要获得镜像，可以从Docker仓库中进行下载。那如果我们想自己开发一个镜像，那该如 何做呢？答案是：Dockerfifile</p><p>Dockerfifile其实就是一个文本文件，由一系列命令和参数构成，Docker可以读取Dockerfifile文件并根据Dockerfifile文 件的描述来构建镜像。</p><h3 id="5-1-Docker-镜像原理-了解"><a href="#5-1-Docker-镜像原理-了解" class="headerlink" title="5.1 Docker 镜像原理(了解)"></a>5.1 Docker 镜像原理(了解)</h3><p>思考：</p><ol><li><p>Docker 镜像本质是什么？<br>是一个分层文件系统</p></li><li><p>Docker 中一个centos镜像为什么只有200MB，而一个centos操作系统的iso文件要几个个G？ ?</p><p>  Centos的iso镜像文件包含bootfs和rootfs，而docker的centos镜像复用操作系统的bootfs，只有rootfs和其他镜像层</p></li><li><p>Docker 中一个tomcat镜像为什么有500MB，而一个tomcat安装包只有70多MB？ ?</p></li></ol><p>  由于docker中镜像是分层的，tomcat虽然只有70多MB，但他需要依赖于父镜像和基础镜像，所有整个对外暴露的<br>  tomcat镜像大小500多MB</p><p><img src="/2020/12/09/docker/docker/1592761590593.png" alt="1592761590593"></p><p><img src="/2020/12/09/docker/docker/1592761605037.png" alt="1592761605037"></p><h3 id="5-2-镜像制作"><a href="#5-2-镜像制作" class="headerlink" title="5.2 镜像制作"></a>5.2 镜像制作</h3><p><img src="/2020/12/09/docker/docker/1592762650841.png" alt="1592762650841"></p><h4 id="5-2-1-容器转为镜像"><a href="#5-2-1-容器转为镜像" class="headerlink" title="5.2.1 容器转为镜像"></a>5.2.1 容器转为镜像</h4><ol><li>使用docker commit命令可以将容器保存为镜像。</li></ol><p>命令形式：docker commit 容器名称 镜像名称</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eg:</span><br><span class="line">docker commit 381827f60f70 itheima_tomcat:1.0</span><br></pre></td></tr></table></figure><ol start="2"><li>使用docker save命令可以将已有镜像保存为tar 文件。</li></ol><p>命令形式：docker save –o tar文件名 镜像名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o itheima_tomcat:1.0.tar</span><br></pre></td></tr></table></figure><ol start="3"><li>使用docker load命令可以根据tar文件恢复为docker镜像。</li></ol><p>命令形式：docker load -i tar文件名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 加载恢复镜像</span></span><br><span class="line">docker load -i itheima_tomcat.tar</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在镜像恢复之后，基于该镜像再次创建启动容器</span></span><br><span class="line">docker run -di --name=new_tomcat -p 8080:8080 itheima_tomcat:1.0</span><br></pre></td></tr></table></figure><p><strong>注意：新的镜像制作后，原本容器中挂载的目录将失效，  索引一般在恢复镜像创建容器容器的时候需要重新挂载。</strong></p><h3 id="5-3-Dockerfile-概念"><a href="#5-3-Dockerfile-概念" class="headerlink" title="5.3 Dockerfile 概念"></a>5.3 Dockerfile 概念</h3><ul><li>Dockerfile 是一个文本文件</li><li>包含了一条条的指令</li><li>每一条指令构建一层，基于基础镜像，最终构建出一个新的镜像</li><li>对于开发人员：可以为开发团队提供一个完全一致的开发环境</li><li>对于测试人员：可以直接拿开发时所构建的镜像或者通过Dockerfile文件<br>构建一个新的镜像开始工作了</li><li>对于运维人员：在部署时，可以实现应用的无缝移植</li></ul><p>Dochub网址：<a href="https://hub.docker.com/">https://hub.docker.com</a></p><p><img src="/2020/12/09/docker/docker/1592763188913.png" alt="1592763188913"></p><p><strong>关键字：</strong></p><table><thead><tr><th>关键字</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>FROM</td><td>指定父镜像</td><td>指定dockerfile基于哪个image构建</td></tr><tr><td>MAINTAINER</td><td>作者信息</td><td>用来标明这个dockerfile谁写的</td></tr><tr><td>LABEL</td><td>标签</td><td>用来标明dockerfile的标签 可以使用Label代替Maintainer 最终都是在docker image基本信息中可以查看</td></tr><tr><td>RUN</td><td>执行命令</td><td>执行一段命令 默认是/bin/sh 格式: RUN command 或者 RUN [“command” , “param1”,”param2”]</td></tr><tr><td>CMD</td><td>容器启动命令</td><td>提供启动容器时候的默认命令 和ENTRYPOINT配合使用.格式 CMD command param1 param2 或者 CMD [“command” , “param1”,”param2”]</td></tr><tr><td>ENTRYPOINT</td><td>入口</td><td>一般在制作一些执行就关闭的容器中会使用</td></tr><tr><td>COPY</td><td>复制文件</td><td>build的时候复制文件到image中</td></tr><tr><td>ADD</td><td>添加文件</td><td>build的时候添加文件到image中 不仅仅局限于当前build上下文 可以来源于远程服务</td></tr><tr><td>ENV</td><td>环境变量</td><td>指定build时候的环境变量 可以在启动的容器的时候 通过-e覆盖 格式ENV name=value</td></tr><tr><td>ARG</td><td>构建参数</td><td>构建参数 只在构建的时候使用的参数 如果有ENV 那么ENV的相同名字的值始终覆盖arg的参数</td></tr><tr><td>VOLUME</td><td>定义外部可以挂载的数据卷</td><td>指定build的image那些目录可以启动的时候挂载到文件系统中 启动容器的时候使用 -v 绑定 格式 VOLUME [“目录”]</td></tr><tr><td>EXPOSE</td><td>暴露端口</td><td>定义容器运行的时候监听的端口 启动容器的使用-p来绑定暴露端口 格式: EXPOSE 8080 或者 EXPOSE 8080/udp</td></tr><tr><td>WORKDIR</td><td>工作目录</td><td>指定容器内部的工作目录 如果没有创建则自动创建 如果指定/ 使用的是绝对地址 如果不是/开头那么是在上一条workdir的路径的相对路径</td></tr><tr><td>USER</td><td>指定执行用户</td><td>指定build或者启动的时候 用户 在RUN CMD ENTRYPONT执行的时候的用户</td></tr><tr><td>HEALTHCHECK</td><td>健康检查</td><td>指定监测当前容器的健康监测的命令 基本上没用 因为很多时候 应用本身有健康监测机制</td></tr><tr><td>ONBUILD</td><td>触发器</td><td>当存在ONBUILD关键字的镜像作为基础镜像的时候 当执行FROM完成之后 会执行 ONBUILD的命令 但是不影响当前镜像 用处也不怎么大</td></tr><tr><td>STOPSIGNAL</td><td>发送信号量到宿主机</td><td>该STOPSIGNAL指令设置将发送到容器的系统调用信号以退出。</td></tr><tr><td>SHELL</td><td>指定执行脚本的shell</td><td>指定RUN CMD ENTRYPOINT 执行命令的时候 使用的shell</td></tr></tbody></table><h3 id="5-4-Dockerfile-案例"><a href="#5-4-Dockerfile-案例" class="headerlink" title="5.4 Dockerfile 案例"></a>5.4 Dockerfile 案例</h3><h4 id="需求1："><a href="#需求1：" class="headerlink" title="需求1："></a>需求1：</h4><p>自定义centos7镜像。要求：</p><ol><li>默认登录路径为 /usr</li><li>可以使用vim</li></ol><p><strong>实现步骤</strong>：</p><p>①  定义父镜像：FROM centos:7</p><p>② 定义作者信息：MAINTAINER itheima <a href="mailto:&#x69;&#116;&#x68;&#x65;&#x69;&#x6d;&#97;&#64;&#x69;&#x74;&#99;&#97;&#x73;&#x74;&#x2e;&#x63;&#110;">&#x69;&#116;&#x68;&#x65;&#x69;&#x6d;&#97;&#64;&#x69;&#x74;&#99;&#97;&#x73;&#x74;&#x2e;&#x63;&#110;</a></p><p>③ 执行安装vim命令： RUN yum install -y vim</p><p>④ 定义默认的工作目录：WORKDIR /usr</p><p>⑤ 定义容器启动执行的命令：CMD /bin/bash</p><p>⑥ 通过dockerfile构建镜像：docker bulid –f dockerfile文件路径 –t 镜像名称:版本</p><p><strong>Dockerfile文件：</strong></p><p><img src="/2020/12/09/docker/docker/1592764213253.png" alt="1592764213253"></p><p>文件编写完成执行命令构建：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f ./centos_dockerfile -t itheima_centos:1 .</span><br></pre></td></tr></table></figure><h4 id="需求2："><a href="#需求2：" class="headerlink" title="需求2："></a>需求2：</h4><p>定义dockerfile，发布springboot项目</p><p><strong>实现步骤</strong></p><p>​     ① 定义父镜像：FROM java:8</p><p>​     ② 定义作者信息：MAINTAINER itheima <a href="mailto:&#x69;&#x74;&#x68;&#101;&#x69;&#109;&#97;&#64;&#x69;&#x74;&#x63;&#97;&#x73;&#x74;&#x2e;&#99;&#110;">&#x69;&#x74;&#x68;&#101;&#x69;&#109;&#97;&#64;&#x69;&#x74;&#x63;&#97;&#x73;&#x74;&#x2e;&#99;&#110;</a></p><p>​     ③ 将jar包添加到容器： ADD springboot.jar app.jar</p><p>​     ④ 定义容器启动执行的命令：CMD java–jar app.jar</p><p>​     ⑤ 通过dockerfile构建镜像：docker bulid –f dockerfile文件路径 –t 镜像名称:版本</p><p><img src="/2020/12/09/docker/docker/1592765120052.png" alt="1592765120052"></p><p>文件编写完成执行命令构建：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f ./springboot_dockerfile -t app .</span><br></pre></td></tr></table></figure><h2 id="6-服务编排"><a href="#6-服务编排" class="headerlink" title="6.  服务编排"></a>6.  服务编排</h2><h2 id="6-1-服务编排概念"><a href="#6-1-服务编排概念" class="headerlink" title="6.1 服务编排概念"></a>6.1 服务编排概念</h2><p>微服务架构的应用系统中一般包含若干个微服务，每个微服务一般都会部署多个实例，如果每个微服务都要手动启停，维护的工作量会很大。</p><ul><li>要从Dockerfile build image 或者去dockerhub拉取image</li><li>要创建多个container</li><li> 要管理这些container（启动停止删除）</li><li> 服务编排： 按照一定的业务规则批量管理容器</li></ul><h2 id="6-2-Docker-Compose-概述"><a href="#6-2-Docker-Compose-概述" class="headerlink" title="6.2 Docker Compose 概述"></a>6.2 Docker Compose 概述</h2><h3 id="6-2-1-Docker-Compose"><a href="#6-2-1-Docker-Compose" class="headerlink" title="6.2.1 Docker Compose"></a>6.2.1 Docker Compose</h3><p>Docker Compose是一个编排多容器分布式部署的工具，提供命令集管理容器化应用的完整开发周期，包括服务构建 ，启动和停止。使用步骤：</p><ol><li><p>利用 Dockerfile 定义运行环境镜像</p></li><li><p>使用 docker-compose.yml 定义组成应用的各服务</p></li><li><p>运行 docker-compose up 启动应用</p></li></ol><p><img src="/2020/12/09/docker/docker/1592767533518.png" alt="1592767533518"></p><h3 id="6-2-2-Docker-Compose-安装使用"><a href="#6-2-2-Docker-Compose-安装使用" class="headerlink" title="6.2.2  Docker Compose 安装使用"></a>6.2.2  Docker Compose 安装使用</h3><p>参考《docker-compose.md》</p><h2 id="7-Docker-私有仓库"><a href="#7-Docker-私有仓库" class="headerlink" title="7. Docker 私有仓库"></a>7. Docker 私有仓库</h2><p>Docker官方的Docker hub（<a href="https://hub.docker.com)是一个用于管理公共镜像的仓库,我们可以从上面拉取镜像/">https://hub.docker.com）是一个用于管理公共镜像的仓库，我们可以从上面拉取镜像</a> 到本地，也可以把我们自己的镜像推送上去。但是，有时候我们的服务器无法访问互联网，或者你不希望将自己的镜 像放到公网当中，那么我们就需要搭建自己的私有仓库来存储和管理自己的镜像。</p><p>搭建参考《docker 私有仓库.md》</p><h2 id="8-Docker相关概念"><a href="#8-Docker相关概念" class="headerlink" title="8. Docker相关概念"></a>8. Docker相关概念</h2><p>docker容器虚拟化 与 传统虚拟机比较：</p><p><img src="/2020/12/09/docker/docker/1592770300637.png" alt="1592770300637"></p><p><img src="/2020/12/09/docker/docker/1592770331752.png" alt="1592770331752"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-docker介绍&quot;&gt;&lt;a href=&quot;#1-docker介绍&quot; class=&quot;headerlink&quot; title=&quot;1. docker介绍&quot;&gt;&lt;/a&gt;1. docker介绍&lt;/h2&gt;&lt;h3 id=&quot;1-1-docker概念&quot;&gt;&lt;a href=&quot;#1-1-doc</summary>
      
    
    
    
    
    <category term="docker" scheme="http://example.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>二叉树</title>
    <link href="http://example.com/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/"/>
    <id>http://example.com/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/</id>
    <published>2020-11-13T03:48:33.000Z</published>
    <updated>2021-01-24T09:59:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><h3 id="1-1二叉树【理解】"><a href="#1-1二叉树【理解】" class="headerlink" title="1.1二叉树【理解】"></a>1.1二叉树【理解】</h3><ul><li><p>二叉树的特点</p><ul><li>二叉树中,任意一个节点的度要小于等于2<ul><li>节点: 在树结构中,每一个元素称之为节点</li><li>度: 每一个节点的子节点数量称之为度</li></ul></li></ul></li><li><p>二叉树结构图</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="01_二叉树结构图"></p></li></ul><h3 id="1-2二叉查找树【理解】"><a href="#1-2二叉查找树【理解】" class="headerlink" title="1.2二叉查找树【理解】"></a>1.2二叉查找树【理解】</h3><ul><li><p>二叉查找树的特点</p><ul><li>二叉查找树,又称<strong>二叉排序树</strong>或者<strong>二叉搜索树</strong></li><li>每一个节点上最多有<strong>两个子节点</strong></li><li>左子树上所有节点的值都小于根节点的值</li><li>右子树上所有节点的值都大于根节点的值</li><li><strong>左&lt;根&lt;右</strong></li></ul></li><li><p>二叉查找树结构图</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="02_二叉查找树结构图"></p></li><li><p>二叉查找树和二叉树对比结构图</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91%E5%AF%B9%E6%AF%94%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="03_二叉查找树和二叉树对比结构图"></p></li><li><p>二叉查找树添加节点规则</p><ul><li>小的存左边</li><li>大的存右边</li><li><strong>一样的不存</strong></li></ul><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E6%B7%BB%E5%8A%A0%E8%8A%82%E7%82%B9%E8%A7%84%E5%88%99.png" alt="04_二叉查找树添加节点规则"></p></li></ul><h3 id="1-3平衡二叉树【理解】"><a href="#1-3平衡二叉树【理解】" class="headerlink" title="1.3平衡二叉树【理解】"></a>1.3平衡二叉树【理解】</h3><ul><li><p>平衡二叉树的特点</p><ul><li>二叉树左右两个子树的<strong>高度差不超过1</strong></li><li><strong>任意节点</strong>的左右两个<strong>子树</strong>都是一颗<strong>平衡二叉树</strong></li></ul></li><li><p>平衡二叉树旋转</p><ul><li><p>旋转触发时机    <strong>破坏了平衡</strong></p><ul><li>当<strong>添加一个节点</strong>之后,该树不再是一颗平衡二叉树</li></ul></li><li><p>左旋</p><ul><li>就是将根节点的右侧往左拉,原先的右子节点变成新的父节点,并把多余的左子节点出让,给已经降级的根节点当右子节点</li></ul><p>添加一个<strong>12</strong>节点</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B7%A6%E6%97%8B01.png" alt="05_平衡二叉树左旋01"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B7%A6%E6%97%8B02.png" alt="05_平衡二叉树左旋02"></p></li></ul><p>复杂左旋</p><p>添加<strong>12</strong></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/zx1.png" alt="image-20201107102149442"></p><p><strong>拿掉9节点</strong></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/zx2.png" alt="image-20201107102410776"></p><p>|||||</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/zx3.png" alt="image-20201107102611349"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/zx4.png" alt="image-20201107102704474"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/zx5.png" alt="image-20201107102744783"></p><ul><li><p>右旋</p><ul><li><p>就是将根节点的左侧往右拉,左子节点变成了新的父节点,并把多余的右子节点出让,给已经降级根节点当左子节点</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%B3%E6%97%8B01.png" alt="06_平衡二叉树右旋01"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%B3%E6%97%8B02.png" alt="06_平衡二叉树右旋02"></p></li></ul></li></ul></li><li><p>平衡二叉树和二叉查找树对比结构图</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E5%AF%B9%E6%AF%94%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="07_平衡二叉树和二叉查找树对比结构图"></p></li><li><p>平衡二叉树旋转的四种情况</p><ul><li><p>左左</p><ul><li><p>左左: 当根节点左子树的左子树有节点插入,导致二叉树不平衡</p></li><li><p>如何旋转: 直接对整体进行右旋即可</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B7%A6%E5%B7%A6.png" alt="08_平衡二叉树左左"></p></li></ul></li><li><p>左右</p><ul><li><p>左右: 当根节点左子树的右子树有节点插入,导致二叉树不平衡</p></li><li><p>如何旋转: 先在左子树对应的节点位置进行左旋,在对整体进行右旋</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B7%A6%E5%8F%B3.png" alt="09_平衡二叉树左右"></p></li></ul></li><li><p>右右</p><ul><li><p>右右: 当根节点右子树的右子树有节点插入,导致二叉树不平衡</p></li><li><p>如何旋转: 直接对整体进行左旋即可</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%B3%E5%8F%B3.png" alt="10_平衡二叉树右右"></p></li></ul></li><li><p>右左</p><ul><li><p>右左:当根节点右子树的左子树有节点插入,导致二叉树不平衡</p></li><li><p>如何旋转: 先在右子树对应的节点位置进行右旋,在对整体进行左旋</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%B3%E5%B7%A6.png" alt="11_平衡二叉树右左"></p></li></ul></li></ul></li></ul><h2 id="1-红黑树"><a href="#1-红黑树" class="headerlink" title="1.红黑树"></a>1.红黑树</h2><h3 id="1-1概述【理解】"><a href="#1-1概述【理解】" class="headerlink" title="1.1概述【理解】"></a>1.1概述【理解】</h3><ul><li><p>红黑树的特点</p><ul><li><strong>平衡二叉B树</strong></li><li>每一个节点可以是<strong>红</strong>或者<strong>黑</strong></li><li>红黑树不是高度平衡的,它的平衡是通过”自己的<strong>红黑规则</strong>“进行实现的</li></ul></li><li><p>红黑树的<strong>红黑规则</strong>有哪些</p><ol><li><p>每一个节点或是红色的,或者是黑色的</p></li><li><p><strong>根节点</strong>必须是<strong>黑</strong>色</p></li><li><p>如果一个节点<strong>没有子节点</strong>或者<strong>父</strong>节点,则<strong>该节点</strong>相应的<strong>指针</strong>属性值为<strong>Nil</strong>,这些<strong>Nil</strong>视为叶节点,每个叶节点(Nil)是<strong>黑色</strong>的</p></li><li><p>如果某一个节点是<strong>红色</strong>,那么它的子节点必须是<strong>黑色</strong>(<strong>不能出现两个红色</strong>节点相连 的情况)</p></li><li><p>对每一个节点,从<strong>该节点</strong>到其所有<strong>后代叶节点</strong>的简单<strong>路径</strong>上,均包含<strong>相同数目的黑色节点</strong></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E7%BA%A2%E9%BB%91%E6%A0%91%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="12_红黑树结构图"></p></li></ol></li><li><p>红黑树添加节点的默认颜色</p><ul><li><p>添加节点时,默认为红色,效率高</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/%E7%BA%A2%E9%BB%91%E6%A0%91%E6%B7%BB%E5%8A%A0%E8%8A%82%E7%82%B9%E9%A2%9C%E8%89%B2.png" alt="13_红黑树添加节点颜色"></p></li></ul></li><li><p>红黑树添加节点后如何保持红黑规则</p><ul><li>根节点位置<ul><li>直接变为黑色</li></ul></li><li>非根节点位置<ul><li>父节点为黑色<ul><li>不需要任何操作,默认红色即可</li></ul></li><li>父节点为红色<ul><li>叔叔节点为红色<ol><li>将”父节点”设为黑色,将”叔叔节点”设为黑色</li><li>将”祖父节点”设为红色</li><li>如果”祖父节点”为根节点,则将根节点再次变成黑色</li></ol></li><li>叔叔节点为黑色<ol><li>将”父节点”设为黑色</li><li>将”祖父节点”设为红色</li><li>以”祖父节点”为支点进行旋转</li></ol></li></ul></li></ul></li></ul></li></ul><h3 id="添加黑色节点"><a href="#添加黑色节点" class="headerlink" title="添加黑色节点"></a>添加黑色节点</h3><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/hh01.png" alt="image-20201110142039570"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/hh02.png" alt="image-20201110142211238"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/hh03.png" alt="image-20201110142332133"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/hh04.png" alt="image-20201110142414043"></p><h3 id="添加红色节点（效率高）"><a href="#添加红色节点（效率高）" class="headerlink" title="添加红色节点（效率高）"></a>添加红色节点（效率高）</h3><p>一共只需要调整一次 所以添加的效率要更高点</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/hh04.png" alt="image-20201110142414043"></p><h3 id="添加节点思路"><a href="#添加节点思路" class="headerlink" title="添加节点思路"></a>添加节点思路</h3><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/h01.png" alt="image-20201110142734821"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/h2.png" alt="image-20201110142828938"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/h3.png" alt="image-20201110142914836"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/h4.png" alt="image-20201110143005987"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/h5.png" alt="image-20201110143128714"></p><p>20是根节点 所以不用变成<strong>红色</strong></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/hx01.png" alt="image-20201110143532153"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/001.png" alt="image-20201110143943929"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/002.png" alt="image-20201110144007100"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/003.png" alt="image-20201110144020937"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/004.png" alt="image-20201110144034368"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/005.png" alt="image-20201110144121104"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/006.png" alt="image-20201110144208117"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/007.png" alt="image-20201110144227530"></p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/008.png" alt="image-20201110144303897"></p><h2 id="2-哈希表结构【理解】"><a href="#2-哈希表结构【理解】" class="headerlink" title="2 哈希表结构【理解】"></a>2 哈希表结构【理解】</h2><ul><li><p>JDK1.8以前</p><p>​    数组 + 链表</p><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/JKD8%E4%BB%A5%E5%89%8D%E5%93%88%E5%B8%8C%E8%A1%A8.png" alt="14_JKD8以前哈希表"></p></li><li><p>JDK1.8以后</p><ul><li><p>节点个数少于等于8个</p><p>​    数组 + 链表</p></li><li><p>节点个数多于8个</p><p>​    数组 + 红黑树</p></li></ul><p><img src="/2020/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/shujujg/JKD8%E4%BB%A5%E5%90%8E%E5%93%88%E5%B8%8C%E8%A1%A8.png" alt="15_JKD8以后哈希表"></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;二叉树&quot;&gt;&lt;a href=&quot;#二叉树&quot; class=&quot;headerlink&quot; title=&quot;二叉树&quot;&gt;&lt;/a&gt;二叉树&lt;/h2&gt;&lt;h3 id=&quot;1-1二叉树【理解】&quot;&gt;&lt;a href=&quot;#1-1二叉树【理解】&quot; class=&quot;headerlink&quot; title=&quot;1</summary>
      
    
    
    
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>git</title>
    <link href="http://example.com/2020/10/12/git/git/"/>
    <id>http://example.com/2020/10/12/git/git/</id>
    <published>2020-10-12T03:48:33.000Z</published>
    <updated>2021-01-23T12:12:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-git下载"><a href="#1-git下载" class="headerlink" title="1.git下载"></a>1.git下载</h2><p><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><h2 id="2-Git-配置"><a href="#2-Git-配置" class="headerlink" title="2.Git 配置"></a>2.Git 配置</h2><p>配置全局用户名和密码，git提交代码时用来显示你身份和联系方式，并不是github用户名和邮箱</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;cardioid&quot;</span> <span class="comment">//改成自己的</span></span><br><span class="line">git config --global user.email <span class="string">&quot;1415479273@qq.com&quot;</span></span><br></pre></td></tr></table></figure><h2 id="3-生成SSH-key"><a href="#3-生成SSH-key" class="headerlink" title="3.生成SSH key"></a>3.生成SSH key</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;1415479273@qq.com&quot;</span><br></pre></td></tr></table></figure><ul><li><p>然后会叫你输入保存路径，直接按回车即可，保存在C盘用户目录下</p></li><li><p>然后会提示输入密码和确认密码，不用输入直接按两下回车即可</p></li></ul><p>文件默认是在C盘用户目录下，我的是<code>C:\Users\13452\.ssh</code></p><p>文件夹中应该会有两个文件 ：<code>id_rsa</code>和<code>id_rsa.pub</code></p><p><code>id_rsa.pub</code>就是我们要的key</p><p>SSH key就生成好了，接下来就是配置到github或者码云上</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-git下载&quot;&gt;&lt;a href=&quot;#1-git下载&quot; class=&quot;headerlink&quot; title=&quot;1.git下载&quot;&gt;&lt;/a&gt;1.git下载&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;https://gi</summary>
      
    
    
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>mata标签</title>
    <link href="http://example.com/2020/09/03/html/meta%E6%A0%87%E7%AD%BE%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://example.com/2020/09/03/html/meta%E6%A0%87%E7%AD%BE%E7%9A%84%E5%BA%94%E7%94%A8/</id>
    <published>2020-09-03T04:48:33.000Z</published>
    <updated>2021-01-24T09:49:12.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="meta标签的应用"><a href="#meta标签的应用" class="headerlink" title="meta标签的应用"></a>meta标签的应用</h3><h4 id="1-声明字符的编码-防止出现乱码"><a href="#1-声明字符的编码-防止出现乱码" class="headerlink" title="1.声明字符的编码**防止出现乱码"></a>1.声明字符的编码**防止出现乱码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-设置无法放大、缩小网页"><a href="#2-设置无法放大、缩小网页" class="headerlink" title="2.设置无法放大、缩小网页"></a>2.设置无法放大、缩小网页</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no,viewport-fit=cover&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-删除默认的苹果工具栏和菜单栏"><a href="#3-删除默认的苹果工具栏和菜单栏" class="headerlink" title="3.删除默认的苹果工具栏和菜单栏"></a>3.删除默认的苹果工具栏和菜单栏</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;apple-mobile-web-app-capable&quot;</span> <span class="attr">content</span>=<span class="string">&quot;yes&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-Edge模式告诉IE以最高级-模式渲染文档，也就是任何IE版本都以当前版本所支持的最高级标准模式渲染，避免版本升级造成的影响。"><a href="#4-Edge模式告诉IE以最高级-模式渲染文档，也就是任何IE版本都以当前版本所支持的最高级标准模式渲染，避免版本升级造成的影响。" class="headerlink" title="4.Edge模式告诉IE以最高级 模式渲染文档，也就是任何IE版本都以当前版本所支持的最高级标准模式渲染，避免版本升级造成的影响。"></a>4.Edge模式告诉IE以最高级 模式渲染文档，也就是任何IE版本都以当前版本所支持的最高级标准模式渲染，避免版本升级造成的影响。</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge,chrome=1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-禁止默认的将数字识别为可点击的telephone"><a href="#5-禁止默认的将数字识别为可点击的telephone" class="headerlink" title="5.禁止默认的将数字识别为可点击的telephone"></a>5.禁止默认的将数字识别为可点击的telephone</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&#x27;telephone=no&#x27;</span> <span class="attr">name</span>=<span class="string">&#x27;format-detection&#x27;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-禁止默认的将数字识别为可点击的telephone"><a href="#6-禁止默认的将数字识别为可点击的telephone" class="headerlink" title="6.禁止默认的将数字识别为可点击的telephone"></a>6.禁止默认的将数字识别为可点击的telephone</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&#x27;email=no&#x27;</span> <span class="attr">name</span>=<span class="string">&#x27;format-detection&#x27;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="7-网站关键词，有助于seo"><a href="#7-网站关键词，有助于seo" class="headerlink" title="7.网站关键词，有助于seo"></a>7.网站关键词，有助于seo</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&#x27;keywords&#x27;</span> <span class="attr">content</span>=<span class="string">&quot;&#123;% block keywords %&#125;&#123;% endblock %&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8-网站描述，有助于seo"><a href="#8-网站描述，有助于seo" class="headerlink" title="8.网站描述，有助于seo"></a>8.网站描述，有助于seo</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&#x27;description&#x27;</span> <span class="attr">content</span>=<span class="string">&quot;&#123;% block description %&#125;&#123;% endblock %&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="9-topic、subject用来告诉搜索引擎你的网站主旨、主题"><a href="#9-topic、subject用来告诉搜索引擎你的网站主旨、主题" class="headerlink" title="9.topic、subject用来告诉搜索引擎你的网站主旨、主题"></a>9.topic、subject用来告诉搜索引擎你的网站主旨、主题</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;topic&quot;</span> <span class="attr">content</span>=<span class="string">&quot;your website&#x27;s topic&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;subject&quot;</span> <span class="attr">content</span>=<span class="string">&quot;your website&#x27;s subject&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="10-copyright用来说明网站版权信息。"><a href="#10-copyright用来说明网站版权信息。" class="headerlink" title="10.copyright用来说明网站版权信息。"></a>10.copyright用来说明网站版权信息。</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;copyright&quot;</span> <span class="attr">content</span>=<span class="string">&quot;XXX&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="11-网站只属于PC电脑端的页面"><a href="#11-网站只属于PC电脑端的页面" class="headerlink" title="11.网站只属于PC电脑端的页面"></a>11.网站只属于PC电脑端的页面</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PC站:<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;applicable-device&quot;</span> <span class="attr">content</span>=<span class="string">&quot;pc&quot;</span>&gt;</span></span><br><span class="line">手机站：<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;applicable-device&quot;</span> <span class="attr">content</span>=<span class="string">&quot;mobile&quot;</span> /&gt;</span></span><br><span class="line">响应式网页可标识：<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;applicable-device&quot;</span><span class="attr">content</span>=<span class="string">&quot;pc,mobile&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="12-用户通过百度移动搜索或者其他bai方式访问站点的PC页（首页或者内容页）时，站点将其自动适配到该PC页面对应的手机页，并为之选择合适的页面版本，前提是你需要做两套网站，一套是在pc端访问的，一套是在手机端访问的。"><a href="#12-用户通过百度移动搜索或者其他bai方式访问站点的PC页（首页或者内容页）时，站点将其自动适配到该PC页面对应的手机页，并为之选择合适的页面版本，前提是你需要做两套网站，一套是在pc端访问的，一套是在手机端访问的。" class="headerlink" title="12.用户通过百度移动搜索或者其他bai方式访问站点的PC页（首页或者内容页）时，站点将其自动适配到该PC页面对应的手机页，并为之选择合适的页面版本，前提是你需要做两套网站，一套是在pc端访问的，一套是在手机端访问的。"></a>12.用户通过百度移动搜索或者其他bai方式访问站点的PC页（首页或者内容页）时，站点将其自动适配到该PC页面对应的手机页，并为之选择合适的页面版本，前提是你需要做两套网站，一套是在pc端访问的，一套是在手机端访问的。</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;mobile-agent&quot;</span> <span class="attr">content</span>=<span class="string">&quot;format=html5;url=&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="13-代表禁止浏览器从本地计算机的缓存中访问页面内容-这样设定，访问者将无法脱机浏览。"><a href="#13-代表禁止浏览器从本地计算机的缓存中访问页面内容-这样设定，访问者将无法脱机浏览。" class="headerlink" title="13.代表禁止浏览器从本地计算机的缓存中访问页面内容,这样设定，访问者将无法脱机浏览。"></a>13.代表禁止浏览器从本地计算机的缓存中访问页面内容,这样设定，访问者将无法脱机浏览。</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;cache-control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;meta标签的应用&quot;&gt;&lt;a href=&quot;#meta标签的应用&quot; class=&quot;headerlink&quot; title=&quot;meta标签的应用&quot;&gt;&lt;/a&gt;meta标签的应用&lt;/h3&gt;&lt;h4 id=&quot;1-声明字符的编码-防止出现乱码&quot;&gt;&lt;a href=&quot;#1-声明字符的编码</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令总结</title>
    <link href="http://example.com/2020/06/04/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2020/06/04/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</id>
    <published>2020-06-04T06:44:33.000Z</published>
    <updated>2021-01-24T10:59:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux常用命令总结"><a href="#Linux常用命令总结" class="headerlink" title="Linux常用命令总结"></a>Linux常用命令总结</h1><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">暂时关闭防火墙</span></span><br><span class="line">systemctl  stop  firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">永久设置防火墙状态</span></span><br><span class="line">systemctl enable firewalld.service  #打开防火墙永久性生效，重启后不会复原 </span><br><span class="line">systemctl disable firewalld.service #关闭防火墙，永久性生效，重启后不会复原 </span><br></pre></td></tr></table></figure><h2 id="ps显示进程"><a href="#ps显示进程" class="headerlink" title="ps显示进程"></a>ps显示进程</h2><p>显示进程信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br><span class="line">ps -u root </span><br><span class="line">//显示root进程用户信息</span><br><span class="line">ps -ef </span><br><span class="line">//显示所有进程信息，连带命令行</span><br><span class="line">ps -ef|grep java </span><br><span class="line">//所有的java所有进程</span><br><span class="line">ps aux|grep java </span><br><span class="line">查看所有包含关键字java的进程，显示详细的运行信息</span><br><span class="line">ps –ef|grep tomcat </span><br><span class="line">查看所有有关tomcat的进程</span><br><span class="line">ps aux </span><br><span class="line">查看所有进程, 显示详细运行信息</span><br><span class="line">kill -9 19979 </span><br><span class="line">终止线程号位19979的进程</span><br><span class="line"></span><br><span class="line">ls -al </span><br><span class="line">查看当前目录文件，包含隐藏文件</span><br><span class="line"></span><br><span class="line">pwd </span><br><span class="line">查看当前所在目录</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查看文件大小"><a href="#查看文件大小" class="headerlink" title="查看文件大小"></a>查看文件大小</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du [选项][文件]</span><br></pre></td></tr></table></figure><blockquote><p>-a或-all 显示目录中个别文件的大小。<br>-b或-bytes 显示目录或文件大小时，以byte为单位。<br>-c或–total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。<br>-k或–kilobytes 以KB(1024bytes)为单位输出。<br>-m或–megabytes 以MB为单位输出。<br>-s或–summarize 仅显示总计，只列出最后加总的值。<br>-h或–human-readable 以K，M，G为单位，提高信息的可读性。<br>-x或–one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。<br>-L&lt;符号链接&gt;或–dereference&lt;符号链接&gt; 显示选项中所指定符号链接的源文件大小。<br>-S或–separate-dirs 显示个别目录的大小时，并不含其子目录的大小。<br>-X&lt;文件&gt;或–exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。<br>–exclude=&lt;目录或文件&gt; 略过指定的目录或文件。<br>-D或–dereference-args 显示指定符号链接的源文件大小。<br>-H或–si 与-h参数相同，但是K，M，G是以1000为换算单位。<br>-l或–count-links 重复计算硬件链接的文件。</p></blockquote><p>常用命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sh /opt</span><br></pre></td></tr></table></figure><h2 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h2><p>owenr、group、others三种身份各自有自己的r、w和x</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">修改权限： </span><br><span class="line">chmod 777 file.java</span><br><span class="line">//file.java的权限-rwxrwxrwx，r表示读、w表示写、x表示可执行</span><br><span class="line">r(read 读)、w(write 写)、x(execute 访问</span><br><span class="line">可以使用数字表示权限：</span><br><span class="line"></span><br><span class="line"><span class="meta">r-&gt;</span><span class="bash">4</span></span><br><span class="line"><span class="meta">w-&gt;</span><span class="bash">2</span></span><br><span class="line"><span class="meta">x-&gt;</span><span class="bash">1</span></span><br><span class="line">当文件权限为“rwxrwxrwx”时，分数是：</span><br><span class="line"></span><br><span class="line"><span class="meta">owner-&gt;</span><span class="bash">4+2+1=7</span></span><br><span class="line"></span><br><span class="line"><span class="meta">group-&gt;</span><span class="bash">4+2+1=7</span></span><br><span class="line"></span><br><span class="line"><span class="meta">others-&gt;</span><span class="bash">4+2+1=1</span></span><br><span class="line"></span><br><span class="line">此时文件的权限数字就是777</span><br></pre></td></tr></table></figure><h2 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -tnl | grep 443 （查看443端口是否被占用）</span><br><span class="line">root用户，用netstat -pnl | grep 443 （还可显示出占用本机443端口的进程PID）</span><br></pre></td></tr></table></figure><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><p>java javac <a href="http://www.hollischuang.com/archives/105">jps</a> ,<a href="http://www.hollischuang.com/archives/481">jstat</a> ,<a href="http://www.hollischuang.com/archives/303">jmap</a>, <a href="http://www.hollischuang.com/archives/110">jstack</a></p><p>jps：显示当前所有java进程pid的命令。其他命令往往需要先通过jps命令获取java进程的pid。</p><p>jstat + pid： 用于监控虚拟机各种运行状态信息的命令行工具。他可以显示本地或远程虚拟机进程中的类装载、内存、垃圾收集、JIT编译等运行数据</p><p>jmap + pid：打印java堆相关的各种信息。当服务发生GC问题时，一般会使用jmap工具进行分析。</p><p>jstack + pid：打印Java栈相关各种信息。jstack用于生成java虚拟机当前时刻的线程快照。</p><h2 id="awk处理"><a href="#awk处理" class="headerlink" title="awk处理"></a>awk处理</h2><p>awk就是把文件<strong>逐行的读入</strong>，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。</p><p>awk是一个强大的<strong>文本分析</strong>工具，相对于grep的查找，sed的编辑，awk在其<strong>对数据分析并生成报告时</strong>，显得尤为强大。</p><p>类比： awk–SQL中的Concat grep–SQL中的Select</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;pattern + action&#125;&#x27;</span> &#123;filenames&#125; <span class="comment">//用法</span></span><br><span class="line">ls | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> <span class="comment">//用|隔开与命令连用</span></span><br><span class="line">last -n <span class="number">5</span> | awk  <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">#awk -F: &#x27;/root/&#x27; /etc/passwd //搜索/etc/passwd文件中有root关键字的所有行</span><br><span class="line"><span class="comment">//root:x:0:0:root:/root:/bin/bash</span></span><br></pre></td></tr></table></figure><p>awk工作流程是这样的：先执行BEGING，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,1 表 示 第 一 个 域 , 1表示第一个域,1表示第一个域,n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</p><h2 id="sed编辑"><a href="#sed编辑" class="headerlink" title="sed编辑"></a>sed编辑</h2><p>Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p><p>Linux sed命令是利用script来处理文本文件。sed可依照script的指令，来处理、编辑文本文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sed -e 4a\newLine testfile <span class="comment">//在文件testfile第四行添加内容newLine</span></span><br><span class="line">nl /etc/passwd | sed <span class="string">&#x27;2d&#x27;</span> <span class="comment">//删除文件第二行</span></span><br><span class="line">nl /etc/passwd | sed <span class="string">&#x27;2,5d&#x27;</span> <span class="comment">//删除第2到5行</span></span><br><span class="line">nl /etc/passwd | sed <span class="string">&#x27;2，$d&#x27;</span> <span class="comment">//删除第2到最后行</span></span><br><span class="line">nl /etc/passwd | sed <span class="string">&#x27;2a drink tea&#x27;</span><span class="comment">//在第二行后添加行</span></span><br><span class="line"><span class="number">12345</span></span><br><span class="line">a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～</span><br><span class="line">c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！</span><br><span class="line">d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；</span><br><span class="line">i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；</span><br><span class="line">p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～</span><br><span class="line">s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 <span class="number">1</span>,20s/old/<span class="keyword">new</span>/g 就是啦！</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="grep查找行"><a href="#grep查找行" class="headerlink" title="grep查找行"></a>grep查找行</h2><p>Linux grep命令用于查找文件里符合条件的字符串。</p><p><strong>grep</strong>（global search regular expression(RE) and print out the line，全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p><p><code>grep -H &#39;spring&#39; *.xml</code> 查找所以有的包含spring的xml文件</p><p><code>grep &#39;test&#39; d*</code> 显示所有以d开头的文件中包含test的行。</p><p><code>grep &#39;test&#39; aa bb cc</code> 显示在aa，bb，cc文件中匹配test的行。</p><p><code>grep &#39;[a-z]\&#123;5\&#125;&#39; aa</code> 显示所有包含每个字符串至少有5个连续小写字符的字符串的行。</p><h2 id="sort排序"><a href="#sort排序" class="headerlink" title="sort排序"></a>sort排序</h2><p>Linux sort命令用于将文本文件内容加以排序。</p><p>sort可针对文本文件的内容，以行为单位来排序</p><p>按照每行首字母ASCII编码来排序， 汉字也可按照读音字母顺序排序，汉字行排在字母行之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort mi.txt &#x2F;&#x2F;将mi.txt内容按行首字母的编码次序来排</span><br></pre></td></tr></table></figure><h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><p>提取指定网页</p><ul><li>显示头信息</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i https://www.baidu.com</span><br></pre></td></tr></table></figure><ul><li>显示通信过程</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v www.baidu.com</span><br></pre></td></tr></table></figure><ul><li>查看议定书</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --trace-ascii output.txt https://www.baidu.com</span><br></pre></td></tr></table></figure><ul><li>查看时间</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --trace-ascii output.txt --trace-time https://www.baidu.com</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">curl http:<span class="comment">//www.linux.com &gt;&gt; linux.html  //使用linux重定向功能保存访问的网页</span></span><br><span class="line"> curl -o linux.html http:<span class="comment">//www.linux.com //使用curl的内置option:-o(小写)保存网页</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>文件下载</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl uri filename --silent|progress</span><br></pre></td></tr></table></figure><ul><li>–silent：不显示进度条</li><li>–progress：显示进度条</li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># curl https://avatar.csdnimg.cn/3/5/E/1_meituantech_1564971608.jpg -omeituan.jpg --progress</span></span><br></pre></td></tr></table></figure><ul><li>上传文件<br>语法：<code>$ curl --form upload=@localfilename --form press=OK [URL]</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># curl --form upload=@baidu.html --form press=OK url</span></span><br></pre></td></tr></table></figure><p>还有诸如代理，cookie等等功能。</p><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p>默认是显示文本开头前10行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>显示开头前k行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">head -k &#x2F;etc&#x2F;passwd</span><br><span class="line">head -n k &#x2F;etc&#x2F;passwd（注意和下面的有-的区别）</span><br><span class="line">head -n +k &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>除最后k行外，显示剩余全部内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head -n -k &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><table><thead><tr><th>命令格式</th><th>运行结果</th></tr></thead><tbody><tr><td>mv 文件名 文件名</td><td>将源文件名改为目标文件名</td></tr><tr><td>mv 文件名 目录名</td><td>将文件移动到目标目录</td></tr><tr><td>mv 目录名 目录名</td><td>目标目录已存在，将源目录 移动到目标目录；目标 目录不存在则改名</td></tr><tr><td>mv 目录名 文件名</td><td>出错</td></tr></tbody></table><h2 id="查看内核版本"><a href="#查看内核版本" class="headerlink" title="查看内核版本"></a>查看内核版本</h2><p>uname命令用于查看内核版本<br><img src="https://img-blog.csdnimg.cn/20200721133752825.png" alt="在这里插入图片描述"></p><h2 id="查看linux系统ip"><a href="#查看linux系统ip" class="headerlink" title="查看linux系统ip"></a>查看linux系统ip</h2><p>查看linux的ip地址：可以用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure><h2 id="查看ip是否被占用"><a href="#查看ip是否被占用" class="headerlink" title="查看ip是否被占用"></a>查看ip是否被占用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:8080</span><br></pre></td></tr></table></figure><h2 id="uptime命令使用"><a href="#uptime命令使用" class="headerlink" title="uptime命令使用"></a>uptime命令使用</h2><p>uptime命令能够打印系统总共运行了多长时间和系统的平均负载。uptime命令可以显示的信息显示依次为：现在时间、系统已经运行了多长时间、目前有多少登陆用户、系统在过去的1分钟、5分钟和15分钟内的平均负载。</p><p>用help参数参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">[shared@localhost~]$</span><span class="bash"> uptime --<span class="built_in">help</span></span></span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line"> uptime [options]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"> -p, --pretty   show uptime in pretty format </span><br><span class="line"> -h, --help     display this help and exit </span><br><span class="line"> -s, --since    system up since </span><br><span class="line"> -V, --version  output version information and exit</span><br><span class="line"></span><br><span class="line">For more details see uptime(1).</span><br><span class="line"><span class="meta">[shared@localhost~]$</span><span class="bash"> uptime -V</span></span><br><span class="line">uptime from procps-ng 3.3.10</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Options:</p><ul><li>-p, –pretty show uptime in pretty format //比较美观的打印</li><li>-h, –help display this help and exit // 查看参数帮助</li><li>-s, –since system up since // 查看系统当前时间</li><li>-V, –version output version information and exit // 查看版本</li></ul><p><img src="https://img-blog.csdnimg.cn/20200721131423692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTQ0MjczOTE=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="telnet命令使用"><a href="#telnet命令使用" class="headerlink" title="telnet命令使用"></a>telnet命令使用</h2><p>不管在window还是linux系统要校验某台服务器是否可以ping通，都可以使用命令，如果要加上断口的，linux可以使用telnet命令<br><code>语法：telnet ip port</code>                      </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 127.0.0.1 8080</span><br></pre></td></tr></table></figure><h2 id="用户相关命令"><a href="#用户相关命令" class="headerlink" title="用户相关命令"></a>用户相关命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">用户相关</span><br><span class="line">创建用户：useradd 用户名  (用户信息在home中,在etc&#x2F;group里面也有组的信息)</span><br><span class="line">用户密码：passwd  用户名</span><br><span class="line">修改用户：usermod 用户名</span><br><span class="line">删除用户：userdel 用户名(要删除最好用 userdel -r -f 强行删除,普通删发会有残留)</span><br><span class="line"></span><br><span class="line">用户组相关</span><br><span class="line">创建用户组：groupadd 用户组名   (账户信息在&#x2F;etc&#x2F;group中)</span><br><span class="line">修改用户组：groupmod 用户组名</span><br><span class="line">查询用户所属组： groups 用户名   (查询组内所有成员可用 grep &#39;组名&#39; &#x2F;etc&#x2F;group   查找)</span><br><span class="line">删除用户组：groupdel 用户组名</span><br><span class="line"></span><br><span class="line">管理用户组内成员</span><br><span class="line">gpasswd （可选项）组名</span><br><span class="line">⚫ -a：添加用户到组；</span><br><span class="line">⚫ -d：从组删除用户；</span><br><span class="line">⚫ -A：指定管理员；</span><br><span class="line">⚫ -M：指定组成员和-A的用途差不多；</span><br><span class="line">⚫ -r：删除密码；</span><br><span class="line">⚫ -R：限制用户登入组，只有组中的成员才可以用newgrp加入该组。</span><br></pre></td></tr></table></figure><h2 id="系统管理命令"><a href="#系统管理命令" class="headerlink" title="系统管理命令"></a>系统管理命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">日期管理</span><br><span class="line">date [参数选项]</span><br><span class="line">⚫ -d&lt;字符串&gt;：显示字符串所指的日期与时间。字符串前后必须加上双引号;</span><br><span class="line">⚫ -s&lt;字符串&gt;：根据字符串来设置日期与时间。字符串前后必须加上双引号;</span><br><span class="line"></span><br><span class="line">显示用户</span><br><span class="line">logname [--help][--version]  &#x2F;&#x2F;显示登录账号的信息</span><br><span class="line"></span><br><span class="line">切换用户</span><br><span class="line">su 用户名</span><br><span class="line"></span><br><span class="line">id命令</span><br><span class="line">id [用户名称]  查看当前用户的详细信息（用户id，群组id，所属组</span><br><span class="line"></span><br><span class="line">sudo命令  (需要添加到白名单中才能访问)  </span><br><span class="line">添加白名单方法,管理员中用 visudo 在里面添加权限   添加(用户名 ALL&#x3D;(ALL) ALL)</span><br><span class="line">sudo 命令    提高普通用户的操作权限 (命令 表示提高到的账号的输出指令)</span><br><span class="line">-u root 命令   表示暂时提高到root权限做事情</span><br></pre></td></tr></table></figure><h2 id="进程相关命令"><a href="#进程相关命令" class="headerlink" title="进程相关命令"></a>进程相关命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">top命令         结束监控快捷键：q       </span><br><span class="line">top 实时显示所有的进程信息</span><br><span class="line">top – c 实现显示所有的进程信息（显示完整命令）</span><br><span class="line">top –p PID  实时显示指定进程的信息</span><br><span class="line"></span><br><span class="line">ps命令</span><br><span class="line">ps 显示当前正在运行的进程信息</span><br><span class="line">ps -A 显示系统中所有的进程信息</span><br><span class="line">ps -ef 显示系统中所有的进程信息（完整信息）</span><br><span class="line">ps –u 用户名 显示指定用户的进程信息</span><br><span class="line"></span><br><span class="line">kill命令</span><br><span class="line">kill 进程PID 杀死指定进程</span><br><span class="line">kill -9 进程PID 彻底杀死指定进程</span><br><span class="line">kill -9 $(ps –ef | grep 用户名)  杀死指定用户所有进程</span><br><span class="line">killall –u 用户名 杀死指定用户所有进程</span><br></pre></td></tr></table></figure><h2 id="关机重启命令"><a href="#关机重启命令" class="headerlink" title="关机重启命令"></a>关机重启命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">关机</span><br><span class="line">shutdown 不同的版本有所差异</span><br><span class="line">shutdown –h now 麻溜的立马关机</span><br><span class="line">shutdown +1 “警告信息” 墨迹一分钟再关机，并出现警告信息</span><br><span class="line">shutdown –r +1 “警告信息” 墨迹一分钟再重启，并出现警告信息</span><br><span class="line">shutdown -c 取消当前关机操作</span><br><span class="line">重启</span><br><span class="line">reboot 麻溜的立马重启</span><br></pre></td></tr></table></figure><h2 id="系统其它命令"><a href="#系统其它命令" class="headerlink" title="系统其它命令"></a>系统其它命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">who命令</span><br><span class="line">who 显示当前登录系统的用户</span><br><span class="line">who –H  显示明细（标题）信息</span><br><span class="line"></span><br><span class="line">timedatectl命令</span><br><span class="line">timedatectl status 显示系统的当前时间和日期</span><br><span class="line">timedatectl list-timezones 查看所有可用的时区</span><br><span class="line">timedatectl set-timezone &quot;Asia&#x2F;Shanghai“ 设置本地时区</span><br><span class="line">timedatectl set-ntp false 禁用时间同步</span><br><span class="line">timedatectl set-time “2019-03-11 20:45:00“ 设置时间</span><br><span class="line">timedatectl set-ntp true 启用时间同步</span><br><span class="line"></span><br><span class="line">clear命令</span><br><span class="line">clear 清除屏幕</span><br></pre></td></tr></table></figure><h2 id="目录管理命令"><a href="#目录管理命令" class="headerlink" title="目录管理命令"></a>目录管理命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">ls命令</span><br><span class="line">ls 显示不隐藏的文件与文件夹</span><br><span class="line">ls -l 显示不隐藏的文件与文件夹的详细信息</span><br><span class="line">ls –al 显示所有文件与文件夹的详细信息</span><br><span class="line"></span><br><span class="line">ll 列出全部信息  和 ls -al 一样</span><br><span class="line"></span><br><span class="line">pwd命令</span><br><span class="line">pwd -P 查看当前所在目录</span><br><span class="line"></span><br><span class="line">cd命令</span><br><span class="line">cd 路径 切换目录</span><br><span class="line">cd ~ 走到当前用户的家目录</span><br><span class="line"></span><br><span class="line">mkdir命令</span><br><span class="line">mkdir 文件夹名 创建目录</span><br><span class="line">mkdir -p aaa&#x2F;bbb 创建多级目录</span><br><span class="line"></span><br><span class="line">rmdir命令</span><br><span class="line">rmdir 文件夹名 删除目录</span><br><span class="line">mkdir -p aaa&#x2F;bbb 删除bbb，如果删完之后aaa是空的，aaa也一起删除</span><br><span class="line"></span><br><span class="line">cp命令</span><br><span class="line">cp 数据源 目的地 将指定的文件拷贝到指定目录里面</span><br><span class="line">cp aaa&#x2F;a.txt ccc 讲aaa文件夹中的a.txt拷贝到ccc文件夹中</span><br><span class="line">cp -r aaa&#x2F;* ccc 将aaa文件夹中所有的内容都拷贝到ccc文件夹中</span><br><span class="line"></span><br><span class="line">rm命令</span><br><span class="line">rm 文件路径 删除文件</span><br><span class="line">rm –r 目录路径 删除目录和目录里面所有的内容</span><br><span class="line"></span><br><span class="line">mv命令</span><br><span class="line">mv 文件名 文件名 将源文件名改为目标文件名</span><br><span class="line">mv 文件名 目录名 讲文件移动到目标目录</span><br><span class="line">mv 目录名 目录名 目标目录已存在,将源目录移到目标目录;目标目录不存在则改名</span><br><span class="line">mv 目录名 文件名 出错</span><br></pre></td></tr></table></figure><h2 id="文件属性相关"><a href="#文件属性相关" class="headerlink" title="文件属性相关"></a>文件属性相关</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">chgrp命令</span><br><span class="line">chgrp root aaa 将aaa文件的属组改为root</span><br><span class="line">chgrp -v root aaa 将aaa文件的属组改为root,显示指令执行过程。</span><br><span class="line"></span><br><span class="line">chown命令</span><br><span class="line">chown itcast:itcast aaa 将aaa文件的属主和属组改为itcast</span><br><span class="line">chown  -R itcast:itcast aaa 将aaa文件及下面所有的文件和文件夹的属主和属组改为itcast</span><br><span class="line"></span><br><span class="line">chmod命令</span><br><span class="line">chmod –R 770 文件或目录   &#x2F;&#x2F;-R:对目前目录下的所有档案与子目录进行相同的权限变更</span><br><span class="line">chmod u&#x3D;rwx,g&#x3D;rx,o&#x3D;r a.txt  &#x2F;&#x2F;u:属主权限 g:属组权限 o:其他权限</span><br></pre></td></tr></table></figure><h2 id="文件管理相关"><a href="#文件管理相关" class="headerlink" title="文件管理相关"></a>文件管理相关</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch命令</span><br><span class="line">touch a.txt 不存在就创建，存在就修改时间属性</span><br><span class="line">touch a&#123;1..10&#125;.txt 批量创建空文件</span><br><span class="line"></span><br><span class="line">stat命令</span><br><span class="line">stat a.txt 查看文件的详细信息</span><br></pre></td></tr></table></figure><h2 id="文件查看相关"><a href="#文件查看相关" class="headerlink" title="文件查看相关"></a>文件查看相关</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">cat命令</span><br><span class="line">cat a.txt 查看a.txt的内容</span><br><span class="line">cat –n a.txt 查看a.txt的内容(加入行号)</span><br><span class="line"></span><br><span class="line">less命令</span><br><span class="line">less a.txt 查看a.txt的内容</span><br><span class="line">less –N a.txt 查看a.txt的内容（加入行号）</span><br><span class="line"></span><br><span class="line">tail命令</span><br><span class="line">tail –3 big.txt  显示文件最后3行</span><br><span class="line">tail -f big.txt 动态显示最后10行</span><br><span class="line">tail -4f big.txt 动态显示最后4行</span><br><span class="line">tail -n +2 big.txt 显示文件a.txt 的内容，从第 2 行至文件末尾</span><br><span class="line">tail -c 45 big.txt 显示最后一些字符</span><br><span class="line"></span><br><span class="line">head命令</span><br><span class="line">head 文件 查看文件的前一部分(类似tail命令)</span><br><span class="line"></span><br><span class="line">grep命令</span><br><span class="line">grep 关键字 small.txt  把包含关键字的行展示出来</span><br><span class="line">grep –n 关键字 small.txt  把包含关键字的行展示出来且加上行号</span><br><span class="line">grep –i 关键字 small.txt  把包含关键字的行展示出来，搜索时忽略大小写</span><br><span class="line">grep –v 关键字 small.txt  把不包含关键字的行展示出来</span><br><span class="line">ps -ef | grep 关键字 查找指定的进程信息，包含grep进程</span><br><span class="line">ps -ef | grep 关键字 | grep -v “grep” 查找指定的进程信息，不包含grep进程</span><br><span class="line">ps -ef|grep -c sshd 查找进程个数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="vim相关命令"><a href="#vim相关命令" class="headerlink" title="vim相关命令"></a>vim相关命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">打开和新建文件</span><br><span class="line">vim 文件名 文件已存在就会打开,不存在,退出后会新建一个文件</span><br><span class="line"></span><br><span class="line">进入编辑模式</span><br><span class="line">i  在当前字符前插入文本</span><br><span class="line"></span><br><span class="line">进入末行模式</span><br><span class="line">:q 当vim进入文件没有对文件内容做任何操作可以按&quot;q&quot;退出</span><br><span class="line">    :q! 当vim进入文件对文件内容有操作但不想保存退出</span><br><span class="line">    :wq 正常保存退出</span><br><span class="line">    :wq! 强行保存退出，只针对与root用户或文件所有人</span><br><span class="line">    </span><br><span class="line">vim定位行</span><br><span class="line">vim 文件名 +行数 查看文件并定位到具体行数 </span><br></pre></td></tr></table></figure><h2 id="awk语法相关"><a href="#awk语法相关" class="headerlink" title="awk语法相关"></a>awk语法相关</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">awk命令</span><br><span class="line">awk [参数选项] ‘语法’ 文件</span><br><span class="line">举例</span><br><span class="line">cat a.txt | awk &#39;&#x2F;zhang|li&#x2F;&#39;    &#x2F;&#x2F;搜索含有指定字符的</span><br><span class="line">cat a.txt | awk -F &#39; &#39; &#39;&#123;print $1,$2,$3,$4&#125;&#39;     &#x2F;&#x2F; F:使用指定字符分割 $:获取第几段内容</span><br><span class="line">cat a.txt | awk -F &#39; &#39; &#39;&#123;OFS&#x3D;&quot;&#x3D;&#x3D;&quot;&#125;&#123;print $1,$2&#125;&#39; &#x2F;&#x2F;OFS:往外输出时按照指定的分割字符串输出</span><br><span class="line">cat a.txt | awk -F &#39; &#39; &#39;&#123;print toupper($1)&#125;&#39;     &#x2F;&#x2F;toupper()转大写</span><br><span class="line">cat a.txt | awk -F &#39; &#39; &#39;&#123;print tolower($1)&#125;&#39; &#x2F;&#x2F;tolower()转小写</span><br><span class="line">cat a.txt | awk -F &#39; &#39; &#39;&#123;print length($1)&#125;&#39;     &#x2F;&#x2F;length()返回字符长度</span><br><span class="line"></span><br><span class="line">awk &#39;BEGIN&#123;初始化操作&#125;&#123;每行都执行&#125;END&#123;结束时操作&#125;&#39;</span><br><span class="line">cat a.txt | awk -F &#39; &#39; &#39;BEGIN&#123;&#125;&#123;total&#x3D;total+$4&#125;END&#123;print total&#125;&#39;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="压缩相关命令"><a href="#压缩相关命令" class="headerlink" title="压缩相关命令"></a>压缩相关命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">gzip命令</span><br><span class="line">gizp a.txt 压缩文件</span><br><span class="line">gzip * 压缩当前目录下所有文件</span><br><span class="line">gzip -dv * 解压文件并列出详细信息</span><br><span class="line"></span><br><span class="line">gunzip命令</span><br><span class="line">gunzip 压缩文件 解压</span><br><span class="line"></span><br><span class="line">tar命令</span><br><span class="line">tar [必要参数][选择参数][文件]  打包、压缩和解压（文件&#x2F;文件夹）</span><br><span class="line"></span><br><span class="line">参数选项：</span><br><span class="line">-c 建立新的压缩文件</span><br><span class="line">-v 显示指令执行过程</span><br><span class="line">-f&lt;备份文件&gt; 指定压缩文件</span><br><span class="line">-z 通过gzip指令处理压缩文件。</span><br><span class="line">-t 列出压缩文件中的内容</span><br><span class="line">-x 表示解压</span><br><span class="line"></span><br><span class="line">tar -cvf 打包文件名 文件名 打包文件并指定打包之后的文件名（仅打包不压缩）</span><br><span class="line">tar -zcvf 压缩文件名 文件名&#x2F;文件夹名 压缩文件或者文件夹并指定压缩文件名（打包压缩）</span><br><span class="line">tar -ztvf 压缩文件名 查看压缩文件中有哪些文件</span><br><span class="line">tar –zxvf 压缩文件名 解压</span><br><span class="line">tar –zxvf 压缩文件名 -C 文件名  解压到指定目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">zip命令</span><br><span class="line">zip [必要参数][选择参数][文件]  压缩</span><br><span class="line"></span><br><span class="line">参数选项：</span><br><span class="line">-q 不显示指令执行过程。</span><br><span class="line">-r 递归处理，将指定目录下的所有文件和子目录一并处理</span><br><span class="line"></span><br><span class="line">zip -q -r 压缩文件名 文件&#x2F;文件夹 压缩</span><br><span class="line"></span><br><span class="line">unzip命令</span><br><span class="line">unzip [必要参数][选择参数][文件]  解压</span><br><span class="line"></span><br><span class="line">参数选项：</span><br><span class="line">-l 显示压缩文件内所包含的文件。</span><br><span class="line">-d&lt;目录&gt; 指定文件解压缩后所要存储的目录</span><br><span class="line"></span><br><span class="line">unzip -l 压缩文件名 查看这个压缩文件中有多少内容</span><br><span class="line">unzip -d 指定文件夹 压缩文件 解压</span><br><span class="line"></span><br><span class="line">bzip2命令</span><br><span class="line">bzip2 a.txt 压缩</span><br><span class="line"></span><br><span class="line">bunzip2命令</span><br><span class="line">bunzip2 -v a.bz2  解压并显示详细信息</span><br></pre></td></tr></table></figure><h2 id="网络管理相关"><a href="#网络管理相关" class="headerlink" title="网络管理相关"></a>网络管理相关</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ifconfig命令</span><br><span class="line">ifconfig 显示激活的网卡信息</span><br><span class="line">ifconfig ens37 down 关闭网卡</span><br><span class="line">ifconfig ens37 up 启动网卡</span><br><span class="line">ifconfig ens37 192.168.23.199 配置ip地址</span><br><span class="line">ifconfig ens37 192.168.23.133 netmask 255.255.255.0 配置ip地址和子网掩码</span><br><span class="line"></span><br><span class="line">ping命令</span><br><span class="line">ping www.baidu.com 检测是否与百度连通</span><br><span class="line">ping -c 2 www.baidu.com 指定接收包的次数</span><br><span class="line"></span><br><span class="line">netstat命令</span><br><span class="line">netstat –a 显示详细的连接状况</span><br><span class="line">netstat –i 显示网卡列表</span><br></pre></td></tr></table></figure><h2 id="磁盘管理相关"><a href="#磁盘管理相关" class="headerlink" title="磁盘管理相关"></a>磁盘管理相关</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">lsblk命令</span><br><span class="line">lsblk 列出硬盘的使用情况</span><br><span class="line">lsblk –f 显示系统信</span><br><span class="line"></span><br><span class="line">df命令</span><br><span class="line">df  显示整个硬盘使用情况</span><br><span class="line">df 文件夹 显示文件夹使用情况</span><br><span class="line">df –total 显示所有的信息</span><br><span class="line">df -h  将结果变成KB，MB，GB形式展示，利于阅</span><br><span class="line"></span><br><span class="line">mount命令</span><br><span class="line">mkdir 文件夹 创建文件夹（也是创建一个挂载点）</span><br><span class="line">mount -t auto &#x2F;dev&#x2F;cdrom 文件夹 开始挂载</span><br><span class="line">umount 文件夹 卸载</span><br></pre></td></tr></table></figure><h2 id="yum工具使用"><a href="#yum工具使用" class="headerlink" title="yum工具使用"></a>yum工具使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">yum常用命令</span><br><span class="line">    1.列出所有可更新的软件清单命令：yum check-update</span><br><span class="line">    2.更新所有软件命令：yum update</span><br><span class="line">    3.仅安装指定的软件命令：yum install &lt;package_name&gt;</span><br><span class="line">    4.仅更新指定的软件命令：yum update &lt;package_name&gt;</span><br><span class="line">    5.列出所有可安裝的软件清单命令：yum list</span><br><span class="line">    6.删除软件包命令：yum remove &lt;package_name&gt;</span><br><span class="line">    7.查找软件包 命令：yum search &lt;keyword&gt;</span><br><span class="line">    8.清除缓存命令:</span><br><span class="line">        yum clean packages: 清除缓存目录下的软件包</span><br><span class="line">        yum clean headers: 清除缓存目录下的 headers</span><br><span class="line">        yum clean oldheaders: 清除缓存目录下旧的 headers</span><br><span class="line">        yum clean, yum clean all (&#x3D; yum clean packages; yum clean oldheaders) :清除缓存目录下的软件包及旧的headers</span><br><span class="line"></span><br><span class="line">安装Tree</span><br><span class="line">yum -y install tree 安装tree</span><br><span class="line">tree 执行tree，展示当前目录结构</span><br><span class="line">yum remove tree 移除tree</span><br><span class="line">yum list tom* 找出以 tom 为开头的软件名称</span><br><span class="line"></span><br><span class="line">yum源</span><br><span class="line">yum install -y wget 安装下载工具wget</span><br><span class="line">wget -O CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo 下载阿里云的Centos-7.repo文件</span><br><span class="line">yum clean all 清理之前的缓存，并重新加载yum</span><br><span class="line">yum makecache 建立一个缓存文件</span><br><span class="line">yum search tomcat 查找软件，验证阿里云的yum源是否可以正常使用</span><br><span class="line"></span><br><span class="line">rpm命令: 红帽的包管理工具,可以安装,卸载,升级,管理软件</span><br><span class="line">-e 卸载程序</span><br><span class="line">-q 查询以安装的软件信息</span><br><span class="line">-i 安装rpm包</span><br><span class="line">-vh 显示安装进度</span><br><span class="line">-qa 列出所有被安装的软件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">echo命令</span><br><span class="line">echo 字符串 展示文本</span><br><span class="line">echo 字符串 &gt;文件名 将字符串写到文件中（覆盖文件中内容）</span><br><span class="line">echo 字符串 &gt;&gt; 文件名 将字符串写到文件中（不覆盖文件中内容）</span><br><span class="line">cat 不存在的目录 &amp;&gt;&gt; error.log 将命令的失败结果 追加 error.log文件的后面</span><br><span class="line"></span><br><span class="line">软连接</span><br><span class="line">ln -s 目标文件路径 快捷方式路径</span><br><span class="line"></span><br><span class="line">find命令</span><br><span class="line">find . -name “*.txt” 查找当前目录及其子目录下所有后缀名名是txt的文件</span><br><span class="line">find . -ctime -1 查找当前目录及其子目录下所有最近 1天内更新过的文件</span><br><span class="line">find &#x2F; -name &#39;czbk&#39; &#x2F;代表是全盘搜索,也可以指定目录搜索</span><br><span class="line"></span><br><span class="line">| 管道命令,将左边命令结果给右边</span><br><span class="line"></span><br><span class="line">重定向命令  &gt;</span><br><span class="line">将正常输出的数据重新改变一个方法</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">安装</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld   关闭防火墙</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Linux常用命令总结&quot;&gt;&lt;a href=&quot;#Linux常用命令总结&quot; class=&quot;headerlink&quot; title=&quot;Linux常用命令总结&quot;&gt;&lt;/a&gt;Linux常用命令总结&lt;/h1&gt;&lt;h2 id=&quot;关闭防火墙&quot;&gt;&lt;a href=&quot;#关闭防火墙&quot; class</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>vue</title>
    <link href="http://example.com/2020/05/14/vue/vue%E7%9A%84%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82/"/>
    <id>http://example.com/2020/05/14/vue/vue%E7%9A%84%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82/</id>
    <published>2020-05-14T00:53:33.000Z</published>
    <updated>2020-12-14T12:05:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="vue的异步请求"><a href="#vue的异步请求" class="headerlink" title="vue的异步请求"></a>vue的异步请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&quot;#div&quot;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            name:<span class="string">&quot;张三&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            <span class="function"><span class="title">send</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="comment">// GET方式请求</span></span><br><span class="line">                <span class="comment">// axios.get(&quot;testServlet?name=&quot; + this.name)</span></span><br><span class="line">                <span class="comment">//     .then(resp =&gt; &#123;</span></span><br><span class="line">                <span class="comment">//         alert(resp.data);</span></span><br><span class="line">                <span class="comment">//     &#125;)</span></span><br><span class="line">                <span class="comment">//     .catch(error =&gt; &#123;</span></span><br><span class="line">                <span class="comment">//         alert(error);</span></span><br><span class="line">                <span class="comment">//     &#125;)</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// POST方式请求</span></span><br><span class="line">                axios.post(<span class="string">&quot;testServlet&quot;</span>,<span class="string">&quot;name=&quot;</span>+<span class="built_in">this</span>.name)</span><br><span class="line">                    .then(<span class="function"><span class="params">resp</span> =&gt;</span> &#123;</span><br><span class="line">                        alert(resp.data);</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                        alert(error);</span><br><span class="line">                    &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;vue的异步请求&quot;&gt;&lt;a href=&quot;#vue的异步请求&quot; class=&quot;headerlink&quot; title=&quot;vue的异步请求&quot;&gt;&lt;/a&gt;vue的异步请求&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    
    <category term="vue" scheme="http://example.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>微服务网关Gateway</title>
    <link href="http://example.com/2020/05/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/"/>
    <id>http://example.com/2020/05/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/</id>
    <published>2020-05-07T05:49:00.000Z</published>
    <updated>2021-01-24T09:42:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="微服务网关"><a href="#微服务网关" class="headerlink" title="微服务网关"></a>微服务网关</h2><h3 id="1-1-微服务网关概述"><a href="#1-1-微服务网关概述" class="headerlink" title="1.1 微服务网关概述"></a>1.1 微服务网关概述</h3><p>​    不同的微服务一般会有不同的网络地址，而外部客户端可能需要调用多个服务的接口才能完成一个业务需求，如果让客户端直接与各个微服务通信，会有以下的问题：</p><ul><li>客户端会多次<strong>请求不同的微服务</strong>，增加了客户端的复杂性</li><li>存在<strong>跨域</strong>请求，在一定场景下处理相对复杂</li><li><strong>认证复杂</strong>，每个服务都需要独立认证</li><li><strong>难以重构</strong>，随着项目的迭代，可能需要重新划分微服务。例如，可能将多个服务合并成一个或者将一个服务拆分成多个。如果客户端直接与微服务通信，那么重构将会很难实施</li></ul><p>以上这些问题可以借助网关解决。</p><p>网关是介于<strong>客户端</strong>和<strong>服务器</strong>端之间的<strong>中间层</strong>，所有的外部请求都会先经过 网关这一层。也就是说，API 的实现方面更多的考虑业务逻辑，而安全、性能、监控可以交由 网关来做，这样既提高业务灵活性又不缺安全性，典型的架构图如图所示：</p><p><img src="/2020/05/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/1557824391432.png" alt="1557824391432"></p><p><strong>优点：</strong></p><ul><li><strong>安全</strong> ，只有网关系统对外进行暴露，微服务可以隐藏在内网，通过防火墙保护。</li><li><strong>易于监控</strong>。可以在网关收集监控数据并将其推送到外部系统进行分析。</li><li>易于<strong>统一认证授权</strong>。可以在网关上进行认证，然后再将请求转发到后端的微服务，而无须在每个微服务中进行认证。</li><li>减少了<strong>客户端与各个微服务</strong>之间的<strong>交互</strong>次数</li></ul><p>总结：微服务网关就是一个系统，通过暴露该微服务网关系统，方便我们进行相关的鉴权，安全控制，日志统一处理，易于监控的相关功能。</p><p>实现微服务网关的技术有很多，</p><ul><li>nginx  Nginx (engine x) 是一个高性能的<a href="https://baike.baidu.com/item/HTTP">HTTP</a>和<a href="https://baike.baidu.com/item/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/7793488">反向代理</a>web服务器，同时也提供了IMAP/POP3/SMTP服务</li><li>zuul ,Zuul 是 Netflix 出品的一个基于 JVM 路由和服务端的负载均衡器。</li><li>spring-cloud-gateway, 是spring 出品的 基于spring 的网关项目，集成断路器，路径重写，性能比Zuul好。</li></ul><p>我们使用gateway这个网关技术，无缝衔接到基于spring cloud的微服务开发中来。</p><p>gateway官网：</p><p><a href="https://spring.io/projects/spring-cloud-gateway">https://spring.io/projects/spring-cloud-gateway</a></p><h3 id="1-2-微服务网关微服务搭建"><a href="#1-2-微服务网关微服务搭建" class="headerlink" title="1.2 微服务网关微服务搭建"></a>1.2 微服务网关微服务搭建</h3><p>​    由于我们开发的系统 有包括前台系统和后台系统，后台的系统给管理员使用。那么也需要调用各种微服务，所以我们针对管理后台搭建一个网关微服务。分析如下：</p><p><img src="/2020/05/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/4-1.png" alt="1557825607685"></p><p><strong>搭建步骤：</strong></p><p><img src="/2020/05/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/image111.png" alt="image-20201205200402289"></p><p>（1）在yinggang_gateway工程中，创建yinggang_gateway_system工程，pom.xml:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（2）创建包com.yinggang.system, 创建引导类：GatewayApplication</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(GatewayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（3）在resources下创建application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sysgateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">goods</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://goods</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/goods/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">StripPrefix=</span> <span class="number">1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">system</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://system</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/system/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">StripPrefix=</span> <span class="number">1</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9101</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:6868/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li><p>uri: lb://goods</p><p>  会根据lb的动态路由协议 动态的找到goods的服务</p></li><li><p>StripPrefix= 1</p><p>  会忽略掉第一个斜线后面的值</p></li><li><p>Path=/goods/**</p><p>  匹配的路径</p></li></ul><p>参考官方手册：</p><p><a href="https://cloud.spring.io/spring-cloud-gateway/spring-cloud-gateway.html#_stripprefix_gatewayfilter_factory">https://cloud.spring.io/spring-cloud-gateway/spring-cloud-gateway.html#_stripprefix_gatewayfilter_factory</a></p><h3 id="1-3-微服务网关跨域"><a href="#1-3-微服务网关跨域" class="headerlink" title="1.3 微服务网关跨域"></a>1.3 微服务网关跨域</h3><p>修改application.yml  ,在spring.cloud.gateway节点添加配置，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">globalcors:</span></span><br><span class="line">  <span class="attr">cors-configurations:</span></span><br><span class="line">    <span class="string">&#x27;[/**]&#x27;</span><span class="string">:</span> <span class="comment"># 匹配所有请求</span></span><br><span class="line">      <span class="attr">allowedOrigins:</span> <span class="string">&quot;*&quot;</span> <span class="comment">#跨域处理 允许所有的域</span></span><br><span class="line">      <span class="attr">allowedMethods:</span> <span class="comment"># 支持的方法</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GET</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POST</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUT</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DELETE</span></span><br></pre></td></tr></table></figure><p>最终配置文件如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sysgateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 解决跨域的问题</span></span><br><span class="line">      <span class="attr">globalcors:</span></span><br><span class="line">        <span class="attr">cors-configurations:</span></span><br><span class="line">          <span class="string">&#x27;[/**]&#x27;</span><span class="string">:</span> <span class="comment"># 匹配所有请求</span></span><br><span class="line">            <span class="attr">allowedOrigins:</span> <span class="string">&quot;*&quot;</span> <span class="comment">#跨域处理 允许所有的域</span></span><br><span class="line">            <span class="attr">allowedMethods:</span> <span class="comment"># 支持的方法</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">GET</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POST</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PUT</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">DELETE</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">goods</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://goods</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/goods/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">StripPrefix=</span> <span class="number">1</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9101</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:6868/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="1-4-微服务网关过滤器"><a href="#1-4-微服务网关过滤器" class="headerlink" title="1.4 微服务网关过滤器"></a>1.4 微服务网关过滤器</h3><p>我们可以通过网关过滤器，实现一些逻辑的处理，比如ip黑白名单拦截、特定地址的拦截等。下面的代码中做了两个过滤器，并且设定的先后顺序，只演示过滤器与运行效果。</p><p>（1）yinggang_gateway_system创建IpFilter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IpFilter</span> <span class="keyword">implements</span> <span class="title">GlobalFilter</span>, <span class="title">Ordered</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> </span>&#123;</span><br><span class="line"><span class="comment">//获取客户端的访问ip</span></span><br><span class="line">        System.out.println(<span class="string">&quot;经过第1个过滤器IpFilter&quot;</span>);</span><br><span class="line">        ServerHttpRequest request = exchange.getRequest();</span><br><span class="line">        InetSocketAddress remoteAddress = request.getRemoteAddress();</span><br><span class="line">        System.out.println(<span class="string">&quot;ip:&quot;</span>+remoteAddress.getHostName());</span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange);<span class="comment">//放行</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>filter(ServerWebExchange exchange, GatewayFilterChain chain)   方法里面要执行的都是一些具体的逻辑</p><p>getOrder() 定义执行的优先级  <strong>值越小</strong> 执行的优先级就越高</p><p>（2）yinggang_gateway_system创建UrlFilter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UrlFilter</span> <span class="keyword">implements</span> <span class="title">GlobalFilter</span>, <span class="title">Ordered</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取客户端的访问url</span></span><br><span class="line">        System.out.println(<span class="string">&quot;经过第2个过滤器UrlFilter&quot;</span>);</span><br><span class="line">        ServerHttpRequest request = exchange.getRequest();</span><br><span class="line">        String url = request.getURI().getPath();</span><br><span class="line">        System.out.println(<span class="string">&quot;url:&quot;</span>+url);</span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，观察控制台输出。</p><h2 id="2-网关限流"><a href="#2-网关限流" class="headerlink" title="2 网关限流"></a>2 网关限流</h2><p>​    我们之前说过，网关可以做很多的事情，比如，限流，当我们的系统被频繁的请求的时候，就有可能将系统压垮，所以为了解决这个问题，需要在每一个微服务中做限流操作，但是如果有了网关，那么就可以在网关系统做限流，因为所有的请求都需要先通过网关系统才能路由到微服务中。</p><h3 id="2-1-思路分析"><a href="#2-1-思路分析" class="headerlink" title="2.1 思路分析"></a>2.1 思路分析</h3><p><img src="/2020/05/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/1557909861570.png" alt="1557909861570"></p><h3 id="2-2-令牌桶算法"><a href="#2-2-令牌桶算法" class="headerlink" title="2.2 令牌桶算法"></a>2.2 令牌桶算法</h3><p>令牌桶算法是比较常见的限流算法之一，大概描述如下：<br>1）所有的请求在处理之前都需要拿到一个可用的令牌才会被处理；<br>2）根据限流大小，设置按照一定的速率往桶里添加令牌；<br>3）桶设置最大的放置令牌限制，当桶满时、新添加的令牌就被丢弃或者拒绝；<br>4）请求达到后首先要获取令牌桶中的令牌，拿着令牌才可以进行其他的业务逻辑，处理完业务逻辑之后，将令牌直接删除；<br>5）令牌桶有最低限额，当桶中的令牌达到最低限额的时候，请求处理完之后将不会删除令牌，以此保证足够的限流</p><p>如下图：</p><p><img src="/2020/05/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%89%B4%E6%9D%83/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/1557910299016.png" alt="1557910299016"></p><p>这个算法的实现，有很多技术，Guava(读音: 瓜哇)是其中之一，redis客户端也有其实现。</p><h3 id="2-3-网关限流代码实现"><a href="#2-3-网关限流代码实现" class="headerlink" title="2.3 网关限流代码实现"></a>2.3 网关限流代码实现</h3><p>需求：每个ip地址1秒内只能发送1次请求，多出来的请求返回429错误。</p><p>代码实现：</p><p>（1）spring cloud gateway 默认使用<strong>redis的RateLimter限流算法</strong>来实现。所以我们要使用首先需要引入redis的依赖   </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis-reactive<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（2）定义KeyResolver</p><p>在<strong>GatewayApplicatioin引导类</strong>中添加如下代码，KeyResolver用于计算某一个类型的限流的KEY也就是说，可以通过<strong>KeyResolver</strong>来指定限流的Key。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个KeyResolver</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> KeyResolver <span class="title">ipKeyResolver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> KeyResolver() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Mono&lt;String&gt; <span class="title">resolve</span><span class="params">(ServerWebExchange exchange)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Mono.just(exchange.getRequest().getRemoteAddress().getHostName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>just 限制</p><p>exchange.getRequest().getRemoteAddress().getHostName() 获取到客户端的访问IP</p><p>（3）修改application.yml中配置项，指定限制流量的配置以及配置Redis，</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">RequestRateLimiter</span> <span class="comment">#请求数限流 名字不能随便写 </span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">      <span class="attr">key-resolver:</span> <span class="string">&quot;#&#123;@ipKeyResolver&#125;&quot;</span> <span class="comment">#引用刚才我们在启动类下面声明的bean</span></span><br><span class="line">      <span class="attr">redis-rate-limiter.replenishRate:</span> <span class="number">1</span> <span class="comment">#令牌桶每秒填充平均速率 每秒声明1个</span></span><br><span class="line">      <span class="attr">redis-rate-limiter.burstCapacity:</span> <span class="number">1</span> <span class="comment">#令牌桶总容量</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">        <span class="comment"># 配置Redis 127.0.0.1可以省略配置</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.200</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure><p>修改后最终配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sysgateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">globalcors:</span></span><br><span class="line">        <span class="attr">cors-configurations:</span></span><br><span class="line">          <span class="string">&#x27;[/**]&#x27;</span><span class="string">:</span> <span class="comment"># 匹配所有请求</span></span><br><span class="line">            <span class="attr">allowedOrigins:</span> <span class="string">&quot;*&quot;</span> <span class="comment">#跨域处理 允许所有的域</span></span><br><span class="line">            <span class="attr">allowedMethods:</span> <span class="comment"># 支持的方法</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">GET</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POST</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PUT</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">DELETE</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">goods</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://goods</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/goods/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">StripPrefix=</span> <span class="number">1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">RequestRateLimiter</span> <span class="comment">#请求数限流 名字不能随便写 </span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="attr">key-resolver:</span> <span class="string">&quot;#&#123;@ipKeyResolver&#125;&quot;</span></span><br><span class="line">            <span class="attr">redis-rate-limiter.replenishRate:</span> <span class="number">1</span> <span class="comment">#令牌桶每秒填充平均速率</span></span><br><span class="line">            <span class="attr">redis-rate-limiter.burstCapacity:</span> <span class="number">1</span> <span class="comment">#令牌桶总容量</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">system</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://system</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/system/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">StripPrefix=</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># 配置Redis 127.0.0.1可以省略配置</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.200</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9101</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:6868/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>解释：</p><ul><li>burstCapacity：令牌桶总容量。</li><li>replenishRate：令牌桶每秒填充平均速率。</li><li>key-resolver：用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象。</li></ul><p>通过在<code>replenishRate</code>和中设置相同的值来实现稳定的速率<code>burstCapacity</code>。设置<code>burstCapacity</code>高于时，可以允许临时突发<code>replenishRate</code>。在这种情况下，需要在突发之间允许速率限制器一段时间（根据<code>replenishRate</code>），因为2次连续突发将导致请求被丢弃（<code>HTTP 429 - Too Many Requests</code>）</p><p> key-resolver: “#{@userKeyResolver}” 用于通过SPEL表达式来指定使用哪一个KeyResolver.</p><p>如上配置：</p><p>表示 一秒内，允许 一个请求通过，令牌桶的填充速率也是一秒钟添加一个令牌。</p><p>最大突发状况 也只允许 一秒内有一次请求，可以根据业务来调整 。</p><p>（4）测试</p><p>启动redis </p><p>启动注册中心</p><p>启动商品微服务</p><p>启动gateway网关</p><p>打开浏览器  <a href="http://localhost:9101/goods/brand">http://localhost:9101/goods/brand</a></p><p>快速刷新，当1秒内发送多次请求，就会返回429错误。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;微服务网关&quot;&gt;&lt;a href=&quot;#微服务网关&quot; class=&quot;headerlink&quot; title=&quot;微服务网关&quot;&gt;&lt;/a&gt;微服务网关&lt;/h2&gt;&lt;h3 id=&quot;1-1-微服务网关概述&quot;&gt;&lt;a href=&quot;#1-1-微服务网关概述&quot; class=&quot;headerlink</summary>
      
    
    
    
    
    <category term="微服务网关" scheme="http://example.com/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/"/>
    
  </entry>
  
</feed>
